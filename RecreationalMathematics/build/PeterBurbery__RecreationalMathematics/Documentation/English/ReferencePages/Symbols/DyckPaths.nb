(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1478105,      31133]
NotebookOptionsPosition[   1465483,      30873]
NotebookOutlinePosition[   1468478,      30944]
CellTagsIndexPosition[   1468350,      30938]
WindowTitle->DyckPaths
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell[
          "PETER BURBERY/ RECREATIONAL MATHEMATICS SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "896bdb6b-82cf-47a8-a639-274f1be7dbb7"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "5b042c96-15cc-4730-990e-07d03499f027"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "b010c2c9-1750-4c9f-a4df-04336119818c"]
         }],ExpressionUUID->"3d218c6f-bd10-46f7-8ab4-14f6f005fa68"],
         StripOnInput->False], {"\<\"Math Puzzles\"\>":>
        Documentation`HelpLookup[
        "paclet:PeterBurbery/RecreationalMathematics/guide/MathPuzzles"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "d16b9679-c9d2-48c0-9a5d-819f7377b86c"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "a34ccf11-8e81-417b-9ba0-87df89477aef"]
         }],ExpressionUUID->"f952e004-1de7-4d12-9449-d085dae4a24c"],
         StripOnInput->
          False], {"\<\"PeterBurbery/RecreationalMathematics/ref/DyckPaths\"\>\
":>None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
        Module[{DocumentationSearch`Private`nb$}, 
         DocumentationSearch`Private`nb$ = NotebookPut[
            Notebook[{
              Cell["PeterBurbery/RecreationalMathematics/ref/DyckPaths"]}, 
             Visible -> False]]; 
         SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
         FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
         NotebookClose[DocumentationSearch`Private`nb$]; Null], 
        Delimiter, "\<\"Copy web URL\"\>":>
        Module[{DocumentationSearch`Private`nb$}, 
         DocumentationSearch`Private`nb$ = NotebookPut[
            Notebook[{
              Cell[
               BoxData[
                MakeBoxes[
                 Hyperlink[
                 "http://reference.wolfram.com/language/PeterBurbery/\
RecreationalMathematics/ref/DyckPaths.html"], StandardForm]], "Input", 
               TextClipboardType -> "PlainText"]}, Visible -> False]]; 
         SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
         FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
         NotebookClose[DocumentationSearch`Private`nb$]; 
         Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
          NotebookLocate[{
            URL[If[
               TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$240372], 
               "http://reference.wolfram.com/system-modeler/", 
               "http://reference.wolfram.com/language/"] <> 
             "PeterBurbery/RecreationalMathematics/ref/DyckPaths" <> ".html"],
             None}]}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "7d0d129a-940b-457a-b2b1-905a40780fb0"]
    }], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "0e506f98-0fcd-4565-bff4-6bbd29e2ad4d"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"d2988a6e-330f-4508-b9fa-37762127052a"],

Cell["PeterBurbery`RecreationalMathematics`", "ContextNameCell",ExpressionUUID->"75524d2a-fc3f-4dfb-ad8b-1fc23d31a6b9"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "DyckPaths", "ObjectName",ExpressionUUID->
      "670a52dc-814d-49fc-8ac5-ce35bb722838"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"ab379120-df0e-4edc-a539-faae7976bc22"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "bae13c98-be66-4b7e-99c0-3b5205731894"]
    }],ExpressionUUID->"829e7a08-4e4f-402c-9eb6-d8355a7fa2b8"], 
    "\[SpanFromLeft]"}
  }]], "ObjectNameGrid",ExpressionUUID->"03c09ba7-091d-4bc6-8d7a-\
b7d25d24ce59"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["DyckPaths"]], 
         "paclet:PeterBurberyRecreationalMathematics/ref/DyckPaths", 
         "PeterBurberyRecreationalMathematics Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       StyleBox["n", "TI"], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "240dedac-c777-46ab-959c-017a55b1d127"],
     "\[LineSeparator]displays a list of Dyck paths with ",
     Cell[BoxData[
      StyleBox["n", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "96abc767-4ed0-4447-aca5-8db79260feda"],
     " elements"
    }],ExpressionUUID->"275852b5-07b2-48e8-bea6-f7156a391237"]}
  }]], "Usage",
 CellID->44551478,ExpressionUUID->"74948f94-befe-4eaf-9050-9a797d0f81c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    DynamicBox[ToBoxes[
      If[
       MatchQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
         Closed], 
        Alternatives[Open, True]], 
       Style[
        Graphics[{
          Thickness[0.18], 
          RGBColor[0.8509803921568627, 0.396078431372549, 0], 
          Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
         PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
        0.68 Inherited], 
       Rotate[
        Style[
         Graphics[{
           Thickness[0.18], 
           RGBColor[0.8509803921568627, 0.396078431372549, 0], 
           Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
          PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
         0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
     ImageSizeCache->{
      13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
    ExpressionUUID->"3f576082-23b6-46c9-8948-0444c7994562"],
   Cell[BoxData[
    TemplateBox[{1},
     "Spacer1"]],ExpressionUUID->"dee5f57a-d307-4d73-812b-b9d155bdae9c"],
   "Details and Options"
  }], "NotesFrameText",ExpressionUUID->"5471aab8-d796-4132-8167-871335bcf3c2"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"f60e8e64-8491-4190-9e5e-709968f00414"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CacheGraphics->False,
 CellID->87033009,ExpressionUUID->"0866d117-1b01-4bd3-80fb-90e2c349b034"],

Cell["DyckPaths accepts all the options that ListLinePlot accepts.", "Notes",
 CellID->240859656,ExpressionUUID->"703f8776-bb24-4beb-9ab5-f648ec171842"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]],
  ExpressionUUID->"08f0e456-91af-46a2-b432-e5c891cd1c23"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"bded5755-d16b-40ce-b718-38a9d0067751"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(4)", "ExampleCount",ExpressionUUID->
  "8de60a97-d299-49e0-af90-9c2c1b5dbfd0"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->198582833,ExpressionUUID->"22d0963d-2af4-4546-bc2f-55d17ae37f8f"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`RecreationalMathematics`\>\"", 
  "]"}]], "Input", "ExampleInitialization",
 CellLabel->"In[1]:=",
 CellID->607322834,ExpressionUUID->"58fa0fc0-bc17-4b9f-8747-20f3b57de4b8"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]],
  ExpressionUUID->"0aa90053-f2c5-401b-ad0a-c3f82ee7d7f1"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"2b05240b-816b-4dea-a8c2-fab22f178fa3"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "2c68e645-2f07-4069-9bcf-8d766f42d5ea"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->4745002,ExpressionUUID->"f7aecfbb-7045-4f1a-9bee-72c03479671c"],

Cell["Make a list of Dyck paths with 3 elements:", "ExampleText",
 CellID->28872898,ExpressionUUID->"30716ccc-338b-44bd-9300-435afdbd8429"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DyckPaths", "[", "3", "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[1]:=",
 CellID->102039460,ExpressionUUID->"4d59ece9-e761-4f12-ba65-b9f980eac0de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 1.}, {
        7., 0.}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 7.}, {0., 3.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{{}, {}}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 1.}, {
        7., 0.}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 7.}, {0., 3.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{{}, {}}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 1.}, {
        7., 0.}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 7.}, {0., 3.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{{}, {}}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 1.}, {
        7., 0.}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 7.}, {0., 3.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{{}, {}}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 1.}, {
        7., 0.}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 7.}, {0., 3.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{{}, {}}]}], "}"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->30356093,ExpressionUUID->"5e7dcc46-b2b8-4531-9e90-860c8ecf0514"]
}, Open  ]],

Cell["Display a list with a multicolumn:", "ExampleText",
 CellID->459702512,ExpressionUUID->"b8d112e9-438d-4e5d-bbe6-08b6adf4c8aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", "4", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[2]:=",
 CellID->539345490,ExpressionUUID->"de44cdc2-1127-4ecf-84d7-e986bd4bf5f8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 4.}, {6., 
          3.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          3.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          3.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          3.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], ""},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[2]=",
 CellID->10026757,ExpressionUUID->"76ccb32d-845f-46cd-a439-b203bafef195"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"04da7c0d-98bd-4cb1-b0ae-40b97b0f91a7"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"471ec4df-e374-48dc-ba40-fe99cae3f400"],
 "Scope",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "0a96640c-1ad3-4aca-b707-9a04e3a9e1a1"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->172499486,ExpressionUUID->"cd42ab77-a0d1-4cce-acd3-b02cf338bf12"],

Cell["Display the only Dyck path that has 1 element:  ", "ExampleText",
 CellID->224188459,ExpressionUUID->"e6e3756a-b9e7-4e3b-8881-428775369458"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DyckPaths", "[", "1", "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[1]:=",
 CellID->976563727,ExpressionUUID->"97617e50-beeb-4705-a88b-4d6cf396e871"],

Cell[BoxData[
 RowBox[{"{", 
  GraphicsBox[{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{1., 0.}, {2., 1.}, {3., 0.}}]}}, {{}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, False},
   AxesLabel->{None, None},
   AxesOrigin->{0., 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0., 3.}, {0., 1.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{{}, {}}], "}"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->530110690,ExpressionUUID->"8c3144ef-c4a4-4cd4-88bf-eeb535a344f6"]
}, Open  ]],

Cell["2 elements:", "ExampleText",
 CellID->99231985,ExpressionUUID->"1e1a49ad-1e96-4b79-a140-1f0f6c98b929"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", "2", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[2]:=",
 CellID->12620033,ExpressionUUID->"7d3fd8b1-4f71-4031-b100-77dd6de52324"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 5.}, {0., 2.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 5.}, {0., 2.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[2]=",
 CellID->262513738,ExpressionUUID->"5b57956f-e614-4b83-9275-b6567b6f5618"]
}, Open  ]],

Cell["3 elements:", "ExampleText",
 CellID->418072352,ExpressionUUID->"4720fc74-b687-4d97-9874-2db4a4c4a3a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", "3", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[3]:=",
 CellID->561941981,ExpressionUUID->"11feb13b-7064-40b2-9281-17552ee025bf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          1.}, {7., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 7.}, {0., 3.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 7.}, {0., 3.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 7.}, {0., 3.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 7.}, {0., 3.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 7.}, {0., 3.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[3]=",
 CellID->188253734,ExpressionUUID->"60637fee-03d3-48e8-b775-94b185c8f3ff"]
}, Open  ]],

Cell["4 elements:", "ExampleText",
 CellID->307884458,ExpressionUUID->"97575602-fa49-4e9b-946a-ec129b4b1434"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", "4", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[4]:=",
 CellID->87683367,ExpressionUUID->"f21cbc8d-3541-4327-8fd2-7a79b459503f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 4.}, {6., 
          3.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          3.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          3.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          3.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], ""},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 9.}, {0., 4.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[4]=",
 CellID->490666919,ExpressionUUID->"e6a8b055-8d6f-4963-b32d-8834db9a7ea9"]
}, Open  ]],

Cell["5 elements:", "ExampleText",
 CellID->706972186,ExpressionUUID->"750adc8c-8fba-4287-a76f-48d539117490"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", "5", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[5]:=",
 CellID->310025852,ExpressionUUID->"158b328b-c48f-4af7-8195-6b7c4a055a67"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 4.}, {6., 
          5.}, {7., 4.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          3.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          3.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 4.}, {6., 
          3.}, {7., 4.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          3.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          3.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 4.}, {6., 
          3.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          3.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          3.}, {7., 4.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 4.}, {6., 
          3.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          1.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          3.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 4.}, {6., 
          3.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          3.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          3.}, {7., 4.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          3.}, {7., 4.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          1.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          3.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          3.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 0.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[5]=",
 CellID->110821903,ExpressionUUID->"9173f9cc-4af2-4348-b012-ae0a6c4ee2c5"]
}, Open  ]],

Cell["There are 132 Dyck paths with 6 elements:", "ExampleText",
 CellID->176090809,ExpressionUUID->"bfdc5456-a6c2-4fdf-bf4f-f91b572833a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", "6", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[6]:=",
 CellID->284942078,ExpressionUUID->"18982b74-5554-48ab-bfeb-590ace257466"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
9jGfGkhYmn0ITAxpmtU+KLqYIac8Y3mxdRra4dA+1jy2ohRO6WPazXknve20
DzP4sEqPIth5qz4WX9C4cethOyDkOtK6U/KSwmxpeUZCW7nAooueC1l627OY
/pDP7Dqhy602SeEpukgrYbL0GKa23stOCZNOn3cf/iD2N86Q3cK8+tcOO932
1ZYY0mvE3Gxr2W3IFidUnHboM+wPhoqzM9cZqRq/RdOs5mZbCwAoupgbfXfM
oLe82DoBJ0mkcWRtYysKoqWP5tObVrju53Q41N8Y3qwPyEXnrVt3vmW7mC67
oFH/6rxHWvslb7eZJy3PSE6NdRZdaFF08iYvLQlewGksx09fdFJjOldtLLro
U8JkPbHtqP0hjb2XnfVG/YSYm/azF66k/d750LWU6hXQdeD6EqvzCpgPszNX
5aDSEDpbr9YbzStpp4Hrsxu3CDpPrNYbtTlGPTGkadaqEH2pBY0LoIGmmhMt
LLZOQzscVt3biK0ohZYHV00GtE3EUAWN9Q6Hug5MJgtzVp+3ahfTpRY06l89
/1P/tNa09DJsTXp2nnDkoUUXW3e+pf9Ji6J7NkDWA6+LPo3lyrUbdsPRfY/v
sausOglyDrzuWcJkVadpr76tDHF6LzeWMP3z4lU9TdtThj1/uoXZZjB1j2R9
iVWvEbsXT/dxcOB1J2e2bvfimdfTvrbrsBu3CI3Lwnq8XT0xpElP26RxkQWN
pXNKmOxYt5jYOg2dum569kj1L9c8tqIUTnmw/aDqAmP/gkbtcGivEWc6QCYL
89Q2b9UupssraNS/upQk2rCjVi5anhF4wpGHJoaOnfrE/vsBF8OdA69n2Fko
kIlNja+VFl2YKGlDlW4H63+N1NMiFa1VcEqY9h4507baVhDzutmZiFPE1ZYY
qpcwWXp3zWG+fo2z9Yq/6AIT0+JPZ8ukJobs3fWd765Mbnj6Nf1pFF3MSr2E
yf6nxcTWCXg6HK5tbEVB6uXBFXNHZLcP98yc6sqkc41o8p1MFuapbd667IJG
/av7lGdMacBRKxctzxjk7kuHX1vvoXVEg7Q81RlBoaex6AylfvfVOLUZqoTJ
+v3+U/YHVvUenR9pXUFqLMOeOd3C3NjgqN7poq2EydLKcw68buOZrd/pKrrA
xPwf6XpiyEmz1nOdug2Qoou8PIuidxYRW6fh73C4hrEVBWksD7Z02bBPQaO/
w6EORGSyMDf+eetSCxr1r+5fnjElT7KjCPYGYMCbZC1N/Okzf/WkWfvQGUFx
p7Fo9X7bhezcMw9bwlQxH1fzodWlic5yL12aqJdhz59uYW48/KtemthWwmSN
9AlfkrZyL9VWdIGJdZZ7aTeYKjGkaVZnc2XF2QZI0UUuIZsri46t09DNlY3d
29YwtqIUWh7cdrCRfsLTCho7Oxy27VwGsgu5q19eQaNuYS7xPk1HrbIOvNby
jGGfuSaG7A3GsOOt0x+yoNNYnGf+z4tX275SM9QjFZBrXLbvVONSsHXi/U8b
y7DnT9cJPc9ca2jtgOwfbwev/loYTyskNfFuXDNoxBY0mg9/QattJra2HW/X
Rj/89RImSxNDdmhaec/I0G2ACUUXZVULHDv1SWxqpnGl16NqJxj1LVrC5GnX
UHRsneAgzsAOh2sVW82t3TIKGs01MtuzXAeh5cHORkVHn4LGwA6HzuyvoNia
wLzUsdeI+SjGFl2UFShnK7DifUkFjc7qaKE1zP7TWOZJyzMGr+rRxJA/zdqH
/gnzb/ts6ZSz6jDfRpdnx7tGtGbVvxRsPbfnbfvFjRUmM+RvrujQ8oBVWC0i
xwS0qZ/e0qZedDHes6q6MEUNfeYzc9/je5763d/Ge1YDMn+XuaP44S/2h9/i
amFYWwmTpYmhlTfNaml5QFTRxf43z5YVW81MpL4JyKNazvUsVNaZn29+S9Q1
oiVM/jGq3Ng69p5xp8Ohf6lqrWLrMgoazRhlBvkFFyZpebB/jEouaHQ6HPqv
Eb09KP08FI+qPDjqGqmWc6OKLo6fvmgCpQmX8U8Q/7/wbpBLKmjU7RhlFZYo
bXpQxFYFnfWMdPeiiSF/mrUPLe+Z85HoVuMpDB5adDHeNaKlCyElTBptG7uv
zJDdwhy4iG3XxlddJUwVbQvQOZNdH5r8ajz43jHZblzbhSl8ldiuuhfRs93G
Vv8KmNIVxZCVAU0M+dOsFb1GwosubJq1rNgaPjDaayR83LDlGeHXiK4MhNTv
lRtbR90zHtvhcK1iqz+7NH/2I1RWYVI4LQ8OuSfX+9XwDfKxHQ71Gikitiaw
40bgNaIlTIE1kHZloKyCxrkJLA+2yi1oVLqFucSmK0qbHsx/gVfLM8Yb/ezt
36iT04JOY0lrVWqH8fGuEW3rETg51UrUkFl2XrqFud6zrpEWJgUGUO0ixTEB
d75b+hg+s5hgN652YQrcQak7Uuffs11ja+DSii78Bi7gaGIosBREr5GQogud
nBYXWzuLhSq68Bsybmh5RuA1osmR8EWtQmPrarSjuxI6HK5VbA1JW8yWloKs
yilMCueUBwfek8cWNCZ0ONRrZP6xNYGOG4FFv1rC1Hh4RJ0mRwoqaJyVqPJg
q8SCRrW8C3CaJY7+dOFo7Kr7qjQ6qgA7VrV9IHaJIwt7c9vYYb6NuVLMLdnY
x75Xh3JGlTDtf/Ns7BJHFsk3t1UMjSou1Tk7xwRo6WNUkOrsnNyHriEEzk91
DWHspdH+NLYG3lfo2qO5Gwm/RqrS6Khxo7MDqtL7nLJia+C6Vn1TZOe4oeUZ
IdeIbhyO6t5WYmy1f+bgW3r1GonauLEmsbV6PPTky7MdGP1s6aOdNRdRmBTu
iW1H7V8Xfk9e3X/a1TZ/0UXyIa1LSs076g0HOgsatYSpepjxzf9b6huHiyho
nJvY8uBKiQWNannFaRNs/+nP2Qo6duG3GY0n2IBWxGksfQq/zdU9wTVinmFs
CZPG93n2sOo5TppPb2zPZO0itc7HBOj9VWwBZ+ep4n3oQXL20+sputD9Nfot
I+Xf+3M2R1T/4Cm6cLq3xV4jOw6djh03dOLjKbpwSpgKiq2BhUlaFK1/qWfc
0DSrNhv37FjXNGvsEnFxsdU+Bj8SQvs6xi71LD626uOZXSdyP7VoukRsL6vA
2rYiaAlT+N7VSnhBY59DWjV3M9vYGsuJrfYP9BQ0agmTPjznGuj+bv0tMy9o
nJuE8mCrrIJGpY2bSmmKGKJq37ea8QJviQ2HQ4S3xs2i0KaInaJa42YxfQ2h
JpSL6HQxBudI64QPRlV0sQpLDIXTFJK55QspaHRKtftMyibgxNbt+97pnInr
bXBU79lkIUUXuiJn/sG81AXFVvPp7ewipUXR92zYdeL9Tzs3EzklTHqNtC14
Op0iEl63smKrfv7DO1100hImc00N9WM9ioutWtBY1jTQ2WKsHZZiJ2Xz5EwV
E+5JQgoandga+yuqtvNzjq0JnNiqfdTbChp1GdaMZppMbNziZF43PQLPXHql
FDTOihNbE66RUgoalfZ1XN5speeINKpyD+PuNOVpLLHKPTA0ROCx0Vlobn3K
51ZWF6kx6F1HcmJX7/YHOfBaJ26PbDlobmM6CxrrbQyTNyxMoB5bO3epaAnT
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
xlZ90+3Df41o7+XAcWMauu4XOMwmxFZd5prmsPtyaY6gf5YzV6fo4mipmLlU
+//AXKe3FEcXeLe8cKznT9PbrSztQQahN72rsN2smiMIHGY1j9b/OYfU5ExM
A/pqNofdaP7dfER7/jRiazhiaxbFxVYtuljlLvPro6zYqgNj9ejswqSdLqpH
ZylCQmxNkDG2mlfA+QPX5/4zb2y1b/qSxo3AayRjbK2PG51PQHsvB44bE9CC
xsBhti223o0RhLyJuZ/jMvHK58LLngUf+Fx42bPgA58Lr3wuvOxZ8IHPhZc9
Cz7wuYS88gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAIDHtes3J/gWAAAAAAAAGCfPfPbwUwdufn07/FteOX7up8/8
dbynBAAAAAAAsFTXrt/8wc/2rh750293HA/8louff3n3YzvNt+x748NRnxsA
AAAAAMDybH7+9dUjf6oeR09e6Pz6W7e/eWTLwerr735s5z8vXp3gSQIAAAAA
ACzDvjc+tEsx5nHvxt2Xr37l/5ZtL57Ub3noyZdv3f5mmmcLAAAAAABQtPOX
rlUbjvSx4enXPN9y4v1P73p0h/Mtz+w6MdlzBgAAAAAAKNSt2988/NSBajnl
+z/+8xPbjtrVlR2HTjd+i+0wYx7mHzY9e8R+y/HTFyd+/gAAAAAAAGV5bs/b
di1l9+EPtBvMXY/uOPPxF/Vv0Q4zx09fvHb95v2bXqz+732P77ly7cb0fwUA
AAAAAEARdMORPajanpRkHg/+/C/Xb9zSb9EOM3Zr0skzn9V/DgAAAAAAAJSn
puXgsY/sksuv//h3+++1w4zTtleb+u4+/MGkfwkAAAAAAEAJtEXMsVOfeP7r
4X98fOdfHWYeevLltiOtnf4zZy9cme4vAQAAAAAAmD2tftm68636F2jlzD0b
dl364vozu07Yb9l75Ez9W5zKmZtf3x7/7wAAAAAAACiAdoZxNhypd89+brvB
PPjzv9ilmE3PHmn7ydpV5rc7jo/2F5SqsSsyZshcI9eu38z9LBCEywoAAADA
/OmpSfUNR47f7z9lV1fskdb+U5P0xKWjJy8M/fQLdvLMZ9//8Z/N/+Z+Iuhg
rpEf/erQE9uO5n4i6PbK8XNmHDt/6VruJwIAAAAAPtput3HDkaqmpboac/z0
Rf+3XLt+8wc/21t98b0bd1+++tVwz71g9mW5f9OLFF3MnL1G9r3xYe7nAh9b
5vfwUwfaavwAAAAAIDs9itqz4UiZ+c49G3Y5R1r76cHZG7ce7veUF0K7Im9+
/vXcTwet9Bqh6GLOnLXiwNEJAAAAACamjXl/8LO94RUarxw/5+8wU/fcnrft
LGnnq++lPuWF0J7JFF3MmV4j1YOii9mq76PsrNwDAAAAgOlpR5fYacvWnW/5
O8w49MDrux7dsc5tNrVnsn1QdDFPWsJE0cWcaY/x8K5WAAAAADAxPe1omtml
Hnj94M//cv3GrQl+6dxoz+Tv//jP+988a/6Xoot50hKmX//x7xu3HqboYp7M
YGJLmO7duFsHt8ANmAAAAAAwAV0Yidpw1JMzvZ3ml86K9kyudmyZ/6XoYoa0
hOmHv9h/8+vbV67duO/xPRRdzNAvt79pL6IjJ87f+Vfxnv03uw9/kPsJAgAA
AMB3Ng11Hmk9ON36Uc2b1of2g9VuxhRdzI1TwmQ31h079QlFF3NTtbFy1nhv
fn37oSdftu/g2QtX8j5JAAAAANCGup1HWg9O26Leu3H3pS+uT/wEctE//L7H
92hlBUUXc6P9YJ2m01p0Mf3lA4ce8VaVMNn/9M+LV7UCUP8TAAAAAEzs+OmL
2ZP7WiLyk9+8uibNUrQo6NipT5z/StHFfGg/2PqB7BRdzIceaa0lTNbeI2fs
ZbV151tZniQAAAAAXLl24wc/2zuHGozt+96xs6Q/HHg319OYjDbMaZsVUnQx
B9oP9r7H91y++lX9a85euELRxRx4SpisTc8e8ayCAgAAAMAEdGKStz+JJrXv
enTHe+cuZ3wyY9N+sJ7Je8+ii1eOn7t2/WbUt+x/8+yyC5PMHxi7VKL9YD2T
d4ouPMxrbl75sX+Lv4TJ0iXoezfublxeWwzziTWjTe5ngW4J14j5JB/+x8cj
PR9gbszNyb43Psz9LIBE5p58PY+OBcazgHmrzh/ncHaPNnx4YPNLSx21tB/s
3Y/t9K+xJBddnPn4i+//+M9PbDsa/sSqvVG/338q/FvKUm2Iizq6S/vBdq6x
UHTRxrzm5pWv7xsaUEgJk3X89MWQdZvSXfri+r0bd//oV4dKD1XroLpGzBgV
/i3mo2si5vp0WsOaqzocEltRouqefMsLx3I/EWA5FjBvNdN8MzLYaf5Mbtd1
8rvUUUuPtA7Zf5RQdHHz69sP/vwv1bcE5lvN7NVM3BZcmKQ9kwOP7tLlwZCl
MC26cNoyrzPzatueuuMtsQaWMFnaurxtT1PpfvKbV6s/cPu+d3I/F/jYa8SM
UYEFjeZDW33Lhqdfm0n4BsZjOxwSW1Ecc+dj78nX7ehYYCQLmLfqFpjpj7T2
01nV8sqwtV9xeG/e2KKL3+44br/evL/nL13r/BY9U3uRhUnaMznk6C7dOtdZ
wmRpT+yfPvPXIZ542aryDPuaRBUmhYsqYaqY9/fhpw7YbYCj1u1ksePQafua
xBZdYErONRJS0FilWe23rEOnNawzzXQQW1Ecc+cTdf8JoNMC5q1zbg9rXk/z
qlbPbWFl2FqeEdUzOaro4ujJC/bNrR5m1ulPnto0q3089bu/Rfxhs7f/zbPO
H7jh6df836JtpaOuES262H34g35PvGzmU2deZ+eVHzwxFFvCZJ2/dM1uA3TO
wi6dma3bVd/YogtMrH6N+AsaTYg0H1f9+nITQ0AITUgRW1EWW/qo958UNAJ9
LGDeOv+jk82N5SIPvNbyjNieyYFFF7Zwq8r42295bs/bbd+iaVY7OTWPV46f
i3qGs6WTbn1Ndhw63fYtaSVMFafoYp0PvP7DgXftq23fgmETQ86R1rGv9r43
PrTP8Lc7jg/1rPLSomj9wEd1kcI0tIRJx2FPQaOmWe1lVWhiCOikm7XtNbLm
sRWl0NJHvcGmoBFItoB5q5mt3/f4nlV8ecbEdB63jFFLyzM8ayMeIUUXtnCr
2pug/7dx/UfTrPds2GWmAPp/F3Aai7M28t65y3p0V+P+lOQSJkvXf9b2wGtd
U93w9GtarTFgYii5hMnSNdKjJy8M8qzy0tm6iU36fyc42Qrh9KIw45K5ZOwN
RltBo6ZZt7xwTCshi0sMAZ2cgwySzzUApqflwdUNp/5fChqBBMuYt+o2q7xH
WvuZQcy2oFzAqKXT8859Q22chYV6tx8t3Nr24sk73y2VaVxY0Jla1aVHlxwX
cBpLvVmrbmx58Od/qd/O9SlhsrToYg0PvNb9hrYYRssABlli7VPCZOnim3mq
s12gDqSz9V9uf/POd0tlArtIYQL6vthbCB3D64v2mma1xTDaJaygxBDQSTsc
2mKYNY+tKIimlati7MYxHEC4Bcxb/Xd6c7OYUUtXUXrOhpyiC/3ItX0aPRvT
nDSr/ff6OSn64LAT73/aeJCxNn119qccPPbRUNeIruqs26Gc5uNk/3ZtFDNg
Yqh/CZOlqzpF94dsGzN1cEheDcaw2lZRtKDRjGD6LY2Xj5mxlpgYAjq1dThc
59iKUjjlwfbft914A+i0gHlriTfkyxi1tDxj3xsf9vxpmhh6ZteJ6l/6b8gb
b2n8i13OjqeezzkLbX1s/tLLV7/S/6pHd9n9KYOUMFm6XLBWh3LqYpdziJL5
1NnCpJ5LrIOUMFl67ny5/SE9i11lLcUvnu4wqkqYrLaCRs/uXWfHUxHBHfDz
JJLWNraiFI3lwZazmzjXkwTKsoB5q87WyypWr5cklUXLMzY///ogP9P8HGce
6i9WbzzQXCdu75793PkWnREUehqLnsJQ7wdirmLdn2L+3gFLmKzFFF2EczaC
1ddbzFXcf4lVS5jsmmQf5t1/ZMvB1XdL4svSuRHMU3SBKTmja/0a0bWaah7a
2dle3/2ZJ4aATleu3fB3OFzD2IqCaHlwfebSuE0VgN8C5q26ptG/PGNKzqhV
1oHXWp4x4GfD2aOh/YGdNKtlZpe2MuqhJ1/W3qdtt+46IyjuNBY9haFta7lO
cMxEddgSJmsZRReB9ISjtibJd757o5KQGBq2hMlKPil7DrQ6ou0cus4uUpiG
Lou17dfTgsYdh07bNKsnCOqNymwTQ0CIkA6HaxVbURAtD25LOVHQCETR8uBC
562632eo8owphUw05smWZwx+e6yJIftoTLNa5nbF+frOKKAlNwePfTTg8x/V
Py9eDTx2Qa/uka6RnkUXv9z+ZkGzZjNC6hSy7cu0iDc2MTRGCZOlN1EF9YcM
X7KuF12MygwaJRY0hjOvZ+w0ULeMeXpZa0GjPjyvpxbxzjYxNBQzx4lKzZjX
09ybRS2xmp8fW7xn7lVitwGaa6Ss2DrBwKjXiKf0ca1iqxkrKGgsgqZ1/Nux
+xQ0JsRWMzS1JciWwYwbsdeIGc3q56EMy3wATOgpaN46gYTYqtnzQuety7hD
0+jsmeXNipZnVCccDUsTQ/40q6Wbd0Imws4GtyLKKRtPYWijR3eNd404RRfh
w3K1WFRKGbauEGrPukbhQ6tjpBImSxsKldIfUksftWdyo7bGmIOrSpiKK2gM
V8VWM8iE3+Jq97bOzIIWNK68aVZLMy8zTAwNpYqtUQNjdY04Pdv9qvKM8GvE
LjKHjxvVNVJcbB11iTWqw+FaxdYf/GxvoTfw68MpD+68J/fvvGiTEFurLkxF
n4fiV2Xto66RKvsWNW4kqDocljJvnUZybC163rqY6uWQ6u750PKMR7YcHONi
18SQP81q6c6pVdgmkeKaPz+z64T9A0PS1tpXdrxrJKHoQtcr5l+G7ZwTHXKT
EFJ26BijC5NDGwoV0R9SJ+BOz+RGjV2kBqclTJ1Lc4WysdWE/pCiC6fXesg1
ogWNgTfSujQ3q8TQUDS27nz1vZBv0ZKwzuXKik0AhV8jdgNm4LihEbys2Dpe
p4uEDodrFVtLLG5fK1oeHHJPnpAuT4it2oWp3PNQPHTcCCz61YXcQXoPNrId
DouYt06jT2wtd96qhXBjlGdMSZsezHyB17z1dr4zaocu85Or+9LwDVzHT1+s
nlhbh5k6/RTN/DQW+9eFj8l3pK/sqNdIVNGFLgWvSugrqyccBc53tDApJDFk
blTG6MJUZ55JKf0h9V6usWdyI6eL1BihSkuYVktMDOmouAorutAC2sBrxDCf
wKh7Od22NqvE0CA0tlYDY2dhkt45BK4V671c4DWizckDxw2nurWg2LoardOF
XiPhpY/rE1ujXhZMTO8cwu/JdegIKWhMiK1VELGP5W0f1nFjFVB0oSVM1aP/
uZx1doJWxLx1Gj1ja6HzVm23MlJ5xsQ0wzXnBV7dCzB2dnL/m2cDSxEs88mM
HRaKOI1FK39im5T++o9/H3sFNaroQpeC7ag1276yesJRSHmGpYVJnQss2oVp
7A+hZrgC8+9ZaOlj1JZwLboYPDGkJUz26S0pMaSxNXCBRUuYooJXNayFpFkb
n95MEkND0dhaPToLk7Qf7CogoaxpVvvwF11omtU+/EUX9c5vpcRW+xj86C69
wYsqAlmT2Lr6dom1oENR14eWMMXuzw0vaEyIrfWOkQs7xUljq71G/EUXeoOX
NmXopCVMRcxbJ9Aztvo7o9bNZN661ASZLoHOc4G32p65Cl7o7i+2MZcZJWKT
Qc5pLPPcvKxdcWIXus31MsE1Elh0oUvB9iruHLVy0fX/8PIMKzAxpF2YJljo
1tRJVGOQKenif0LxiebLBkwMaQmT+YdSChrDObHV/rGeVXEtYUp4HcxwHbui
MqvE0FA0tmqFjKcwSTvO6VjquV70HkN/S1vRhdMpwtZdeIounH2dZcVW+zJG
dbro1PMeY/Gx1Xxg5lZ7D6UlTLFzk8D5WkJs1TpY82XLO8XJia16fkfbH6hj
hQ4Cw55roCVMGkfmOW+dRs/YGhtuZjJv1bXWhDNkZ0ubHsxwgVe3Z5bbM7nR
xKexxNLZ+nibQPvrLLqoLwVvfv71zlErF13/jy3PsDoTQ9opYrIbUX0jAhuD
TElbH6Q1ZulTS+bhlDCVUtAYzomtIc2rtYRpshqhmSSGhlKPrZ3Nq7Uo+pEt
B80lbPu0tL0RTgmTLpu0FV04nSKqBpv2hrNx3NCJm7lAyoqtUQWN4fTjmta9
bfGxVYscFrPEugzJ5cFWSEFjbGx1esSZoSmhWd/MObFV34jGJdZ6CZO2mhzq
XAMtYTLv2sznrdPoH1sTfmn22Kp/dfg2q1LoYu/cFnhturn0nsmNdGFz1NNY
YjlHWs/qI+HwF100LgVrQmRufWV1/T+5N4g/MaSdIiYu0tb+kFGnsYxNWx/E
blRU2gtikP6QjSVM8y9oDNcYW7UBSP0q0DKVtDuKNDNJDA2lHlt13KhfBY0H
K2ixQT2h3FjCpKtt9aKLxk4R+974UJcvnG/R+YIdVcqKrbGdLjppCVNy97Z1
iK16FSxgiXUZepYHW/6CxoTYqvs6q3ZDsc36Zq4xtupad32JtV7C5Nxh9j/X
wClhqkaVOc9bJzBUbE2QMbbqPVjsNqtSaI5gPgu8+qxK75ncaJrTWGJlnK2n
8RRdtC0F+0etXHT9f+PWw31+lKfJlWYupm9gqP0hj568MPFvb6OtD8L7wTYa
8OVtK2FyEkPlHnjdFlv1cBynQkw/2H3uKNIkN+KYm7bYqi+vU5ik92BaHqxL
rE5Cua2ESVfbtBuMtitxPthadKHbAHXippUzxcXWAY/u0nlKzw6Hi4+tTkFj
6UusC+AZ/BO0FTQmxNa2VItT21buDLEttnqKLtpKmJyCxp5hum3wn+e8dRoD
xtZYGWOrXs6lr3x6aI5gDn+mUxS91JXPCU5jiZV3tp6mMT3qXwpuG7Vy0fV/
M0U1E9WeP7AxMaSdIrJMJzUo9KlCGZAmptOKotVQi5n+n7OMxJAntjYWXWgJ
U65lqNkWXYTzx9bG7km6DFUvD9YlVptQ9pQw6YRLiy48nSIa06POz3G6ypQV
W4fqTOjcKvev4V98bB28oBF9DFIebDUWNCbEVv+q3eC1bdPzx1ZdzLRLrP4S
Jn9BYzh/z4S5zVunMWxsTZAltmrB57IX35xd5HkXeBuLopdq1NNYYpV7Z+K0
DuhcCvbfyU9P1/+HKhrR9XMTT/Uaz5gH1Dv5tA4tA9LE1lB9cQdpy9O5+br0
xFBnbNVpYFV0oSVMubZoObFpJkUX4UJiq3OyWGd5cH2w1TRr42qh3slXRRf1
t9vhtA64EzDrLyu2DnJq5xgHUC4+tpaYgVokvcaHujeoFzQmxNbOAyg1No19
8OsYOmOrrpKZ1yekhKmtpiVcZ8+EWc1bpzFGbE0wcWzVFNL0RdHT07uFvAu8
mn8scWSLpaexZOx9V3TVrnOshr6kbRO3tir36en6/4ANVZzEkLM4M9RvSaBV
7v3zX8mc1gcD9oPVxFBCf0gtYfK0SuuZGMr4gQ+MrVp08dTv/jb4HUWanomh
vONqSGzVceOBzS+FlAfrEqu5pjTN2pZM0VtEc98e0ilCl19+/ce/h+yIKSu2
9jy6S8eNATscLj629i9ojP0DzSd8gnEj48tu/rrYqfHg5cGWDnoaRwJjq+4i
bOuZMJ9TdxPedK3taYut2gTbhD9doW27hWssaAwX2H9mPvPW2Fc+4RpxSpgG
jK0JJoutmkIqem9+FF00zrUMokvZhVb9xdIF3oy97zrX/2dOd6wHTtw6O8ZP
QNf/Bz9sSK+mPvf5w3KWQXIdeN2/w7yHTQzFXk1OCZNnNOiTGDIfjFw7QMNj
q2bh7WMOR3v3SQyZe5hcxzKGx9bGccNfgqVXk334/1K9pQ8ZDTQhax/+iFlc
bE1eMx81Tbz42NqnoNGMBrGFxL/dcTw24mzcejhq3Kgmbrliq/nrYrf9jlEe
XNGIYx/hsdU+/BFzkNq2nsybbv7SqDc9vDxYu8HYh7+EqV7QGC78bKaZzFtj
3/Qdh07HXiNawjRsbE0wWWxd0rkV4ZzVyOkXeLVT9MKOtPbTBd4sve80hVRu
z2RNnq7CloI1/55WTtmHXnEjFXXrUJZwqzkS7Q857Ip9oKE6zLdxEkPhQ5lm
HDo/kDpuhGfD7TCb5UqPiq36Nq2mPdLaL+ptsqphtojY6owbndeIHi8S+IHU
oovq0Vkpp0UXCdfI/GNr8tFdY7dQWHxs1YLG8IHRlvmFb3GqSpii3qaqaCpq
3KimY3lja/jUaaTyYEsLGhPGjcAXX2vbMsbW8Dc9tjxYr5FVWAmTjhux18gq
bBlnPvPWhHEj/BrREqYxYmuCCWJr57nzC6Y5gukXeDUxtLwjrf10gXfi3nd5
3/QBJTTk1/z79MnTCd50p1PEfA7J8pzGMrYBO8x7aGIoMHmaUHSRkBjKOMwm
xNZRS5iShZcwWWXF1oTy4ITjRbToIrBThBZdJFwj84+tCUd3TdBFah1ia2xB
Y0JsTShhSii6KCu2atHF4OXBFrG1LiG2xpYw6bgR2GmN2Fo3TWxNMGps1dxE
loXl7HKVSWRfWM5rgjKJzt+7gJ7JNnkavhSs+fcpk6eTJW0T8nfTGLbTe7jG
U2DGoL3vOl/8tIYksdevDrOraUsQ02Krzd/NrXtbcv6ulNianL+LyvtX10hU
p4hq3Ei7RoqIrVqYFDVujHqNLD62xhY0JtSdak3dKiDHrQ1JAq9frTvNG1tD
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
c1Q9Bu+ZkDe26pseeI3YJdbAcWO2EmKrrnuPfRhW6YbtfadX4hj93JZEe9/1
/FET9HNbDC0EffDnf+n505zS4kGe4VJpD8yeP8rJDc2kPEMTQytvmrUPLSAP
GWa1v5/55Pf87WsbW3XcWIWd50tszaWs2KpFF0OtIGVRVmzVgTFwBUlnbauw
UgRd2QgcNzT/HjjMZoyt2ld23e4/88ZWfdPnM24418hIxzdnjK3OuBF4jegS
a/YSpj4aY+vdGEHI25H7OS4Tr3wuvOxZ8IHPhZc9Cz7wufDK58LLngUf+Fx4
2bPgA59LyCsPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAtLl1+5tjpz7J/SwAAAAAjOvMx19c+uJ67mcBAPjvtu97
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
LWEKvEb0ILm2DWhF07GUhPLM2WvEjFEjFTTqNbLI2Ipl0w6HxNY0ev85Xjg+
eeazzs3d60bvydft6FgAbbTdVmd5Rh9nL1ypfpEe3+xX5XOrx5YXjo30xHLR
I633v3k28LvMV4YXXdg0q30cPPZR7ydeNs3XVI+jJy/4vyWqhKnxF5EYuvPd
y3mkZNyd75YwrQJ2rGvJ2aq9OXPRbCv16jFq0QX6cHb1mgFkjJ7tzjWyvNiK
BdMOh8TWZHr/GX5PnmD7vncWHFtj1e/J1+foWABttGQlsDyjj71HzvzkN69G
fUtI198SacogtmRFiy78W2ZsmtU+JniXZ05fvdW35whcvvpV29cnlDBZJIYs
Lc+wD3/zqATahSkweappVpsojGooNHM7Dp12/kDzmTSfzNzPCy7teG8fgxc0
Nl4jS4qtWLAr127YDof2seaxNYHemYzdxs0pwllSbE2gMxp7/8n2YWDNaTuX
8PKMPmIzfddv3LIryYtpeqBVEwnZT/12TztZTbOa25VpKqBmTiuLNj17JOSG
RDM7CdcIiaE7/7ofs+UZ5n7MdqkaNjHklDA9+PO/2ORp22rb8dMX9fg2++0P
PfnyMjZ0n/n4C/sH/uQ3r5qXInnYwdjMKGSXy/QaGTA0O50ilhdbsWza4VCb
xK5tbE3gVO16UlFD0WFnMbE1gZYHm0+y3a9k7j3W9p4cwLFTn4yXgBuQ7rI0
E4oFjFq2PCM5Sd1ZdKFp1qozwATdgWbO6bpjbgk6j+7qU8JUITF057tHpJnb
Zi3WHSoxVC9h0oWIxtU2TbNWq5paNrCADd3mqrdLUtXrXMqYv4a0hMlcL2OU
rdY7RSwvtmLBnHsYYmuaLB3tFhZbE2h5cLVN29wL6Zif+wkCyEBn6/PPk1Yd
yJcxaulpO9tePJn8c8z3ehJDmmZ979zl6l9qvnXZh/nWaXsQe+fmP7qrZwmT
teaJoer0FmflcPBpoF4O9mxrneHWt8Y3Xg6/3P6m/ZedDYVmTouibQ2S1kPG
HgKOkTglTNXlYMYoe40MUtCo14i9HJYUW7FgjZfDmsfWBHr/2dlUbVhLiq2x
9FZTeyabO6L6jTqA9aGz9SJ6CDQuLxRHyzN6Hm7iSQy13WDXiwF6/TFFeWbX
Cfua7D1yxv57TVg4B6/bQuj+14gmhia+BcrLvJ5trYwHnAZ6SpjsDilntU3T
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
x43w8mD7AQ4sYdJrJLAeTP+WkOSpXiNFxNaENmJ6SNZ410ihsTXwA7yA8mBr
JrF1FVbfPk08sq1OwsuDYwsa9WXPG1tD3nSNR+Hjhi26CK910aKLkEFeG9wF
jhv6EcoYWwPfdKeONKQGL7yEyeoTW2cyb9UUUrlnKfbhND2YZvrmtB4qtzzD
qj5IUQOyJk8nOzhMc+tl9UxuFJUY0qXd1bcLvJP1vtOi6EFOb2lTJYZmuAu+
fhrLBKasQ4tKDDmlBauALU7aByaqQ8LYuchGybG1emVG7d5WjRtjXyNlxdZq
3Ii6Rqpu0lHlGdU1EtUpIuqDpNdIKbFVC5M6D7zWcWOCa6S42Br4yiyjPNjK
HltX3+YI/CPqlLWaVaeLqNJHraH1F100buTJElsD33T906LGjaroIvxP01em
s6BRy/wCb9J0mM0YWwPfdC0PXn27fOS/RmJLmKzk2DqHeWts2mWpdCFumgVe
XT4tvTzDMp/MqDFh7F4WdU5ufW6z9TThiSHdGjxxnygtip5gr+v5S9fmeeSl
JnSm2ac/cY+mwMSQpks0b+LZ4qQppNhOESMd4+XRM7b+4cC7Iz0xyzzDCT6B
ZcVW87GM7b5ovj42cplZUuwnMLDISq8Re1kVEVu104VnGqjjxgSRq7jYqoOq
501fUnmwlTe2huxrm6w82Npx6HTsPbmeL+N5hjrM2sWB6WOrrkt43nQtaYi9
Ks1VH3vilW5x8kd/LfMLKbrQYVb/9ulja+CbrldlyNltaSVMVkJsncO81dmS
PM3JpLOlm9TGXuDVDHJI64MFG++cl0aaNyy0Z3KjkCYJTtv8Kc9Qc+bCeU84
yss5jWXs9cDpzy9zEkONYcV5EUw400M5G4OpHmmd1ikiKv/eE7FVEVv7C2lA
pNeIuaDMZVVQbNVOF23TQB03JmuJU1Zs1Te9bZzU8owFlAdbeWOrlmy1LXBN
Vh7chx7m21Z04Qyzuh44cWx979zlzkPBsrSp1L6ybbde+pnZ9uLJkKILpzw4
Y2wNedOdqs69R87o39v4LfoizPZw58HnrbG725bNXLBp3bBj6e62qHb9S6XJ
01EnjJo3LLdnXRt/YshuIjaPh586YCKaU4Y9avJUi6IHP72lOJreHbWzjb7p
U5Y+diaG6p9VTV01FpoO0ikiMP/eH7FVEVsH0Xk4l14j1TBbVmzV8apxGpir
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
WT73uxcGvMJNigmfOc8z/W/6d96N2+rAQZajVoUpv49xtu3RC3+d9yIBgNMm
9T/ff8t9VVfko196uOp/xtSX3f7n01deyckzt951rvpiXMz94OcesMUeoIMf
n3+ubTX1Q66/eeMjX/jpyX8OvH75tetDXeT21BI+Yw209O/0FbtxVy1uOotr
TLXZtvJa2QAAPaX+56e++ljufz73wmv5P8VZmtj/TN37fB7BB269/9U3/pW/
5eIzV3NvJ8/SAFDob1ffqG2m6PkDU6ueJ88/8/XHHeZ7SEz4vP/cn2v/NX3F
btz1ilWYPn/3L2v/Nc62FZ4jDwDQ3/cefir3MM889kztv8YdTLn/+eV7n8xf
fOLyS7Vvufu+S7UdTACUSMPAMTbFpKY4N8s/eOTpQX7mxlx+7h9Hq6XZjbtS
8ZCsQ4m7cbatZ0IaAECJuOHolm/+Yu9z4txL6n/unZ+J4tbsWrINAA3GKxh7
613nciGaZ59/tdX3vvza9W1vcUqj9Zzw2XCSYM/duOlll3RR0+Hs9Q7fUjiN
9vm7fzlIsaZVmODU+xdfvmbHes2Vl153vN1aTHCPwKny1r/fNi1QE/ufH7j1
/kOd7bgvKfU/9+5dqonHFuRCNGT65Bu2+XEr44nHuwx+mPKrb/wrH3j94dt/
Uj4iqHazpseGW60v3vNEfuUvPnO14ZlxN+7uhpcG1YHjki6iqmbyblJug2rD
UavEpFiFqXmL2evX3swHXnc+yGwV0ms+dhWpqgpTq3tk81Krm9peR3etQrpH
UuuU2qi5LwS24xtnLm47tnYQ+5/nL73Y8MyYQrO3wuGueEhodUgTlapP/r2H
n5r7QhjeaRi3MpLaSHCMNeUnLr+Um+U7v3+h8LvybtattlqPXvhrflnuvu/S
0efH3bi75WUOueWbvzglSReFchptek0KF8vyElJ5YlKtCtPRtaFRZ0QX4tnn
X616dIcyogeR2w071rPU6p44umsNcrE1VaRgKLkLutXY2kHsf37th789+vwf
PPJ0nI0p6YLe/p1fNZSXObVyn7ztZgGWb/PjVsaTd0kcTc/o4xtnLubfUnLg
dZyKT//YXuZ27Ujrko53rO1zdGGicuaxZ/LLbmGoEk84+sgXflqSrBWXkEqS
Ljq8UzfH3C24BFV6Rv4DWyUmlYvthh3rldTe5pdd0sWSxYMIT1SRgiHE9OxN
xtYOYv+zsBeUejWf+frjrdKzY9282tFLp1bsk7faLMDybX7cynhild2S9IzO
3vr32x/90sMn/znwunlEEHezVo/0f7fUasUqZ62ONo67cY9mXMQzrSwMVeIJ
R4WrQnEJqTDpIs6rlGcx1Q68HqqS9kLk9IwcqgZfGNptN+xYf/m163mbf/WQ
dLFYqS2q3SMSGqGnXLpwq7G1rdj/LM8QvvmfaNIqhT6eUuHA65wenB/lmwVY
uM2PWxlPaoTz6bqDHGld/uuad9XFVIT8+PK9T456eVOK6RkP/fovrb437sZt
qEZSW2a1MHTz3Ss18dGwYzouIeVHc9JF3HPUtnpJPPB6gltyMjE9Y7yFob3t
xmnesR5XM+ND0sUCpVZo952S0Ah9xAXH/NhSbO0g9j/bJqk+euGvbVPo73nw
cvlK1obV0oPzo2SzAMu3+XErI4nJKq3SM/qIkfHQrrrabta4XPjzi89PcJFj
i+kZt3/nVx1+QtyNe6iubHzdHn7yyoaTLsrF1y19lo6eJlDVg82vW+qE5DSD
Q0kX/aswxQOvR01Xm0xMz0ivWzwfc8CFoVoVppiKc2p3rMed/unf8Xg7SReL
UtV1PPnPglq8R7rFCCCuAKZQPlkq+JLF/uc0ySqxH3Watw/HPklq4eNmAUfw
rN3mx62MJxZyaZue0UccEezuqtvdzRpzPI5ucVq+mJ7Red0z/pC9dWXjMms1
N7vVpIty8YSjKl8i7vHcW1d2N4UpjpL2Jl0MUoUp/pBWpzgtUFVhvtYTi6Fq
kIWh3SpMcR2q4ezODYtJ0Z/5+uPpNYn1EyRdLEpV1zGGxRigT3NCI3RTW3Cs
uo5biq0dzFXIJQbo07l9OKYHV7vjyzcLsHCbH7cynnjI0cRLb3FEUNtVF6fQ
427WWP+kGlZMecHDyukZPZen4wJHbTvMoVd4e0kX5eIJR7EzkOufn+yk7B5K
YfryvU/mb6klXQz1CscEm/JTnJYpvsI5S7kWqnpOldRSmHLqV5yOGPUUpwU6
9ArP2PJzSKzrmFNGa2PJU5vQCN3E+cx8ltyWYmsHMx5yFJMHTtv24ZgeHGsm
l2wWYOFOw7iVkcSk6FlWSOOI4Iv3PJG/3rCbNfZXf/DI0xNf8FBiesY9D17u
+dPibtxYKrYh++h0Lgw1nHAUC2vEhrQhhSlF0r1bnIatwnTxmav5nWpbfGY5
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
Wnmx2jF/o9a+q6VurrRm8lBi7bsx6shFMSl68ArzqxMLg3To+bTSalvEUI4W
Hd1Nbz56bnJsN9ILWFJ/stbMtlp/70lsjcTWXUcrXXQui52tLrbG7u7eKdbY
biy5wuGMsbXk3OQNH5I7Y2w9WnR04vTgrG1s7fAr5o2tRwt6908PLlnVmmXr
0IyxteRNr6UHH90NN9eWw3nHrXGaa9jD7terc1ZwK7HRHnUL8yyaF4biju+8
kaHW7Rxv5BI7e6uuWTeUOCIY9ozFKCZFj1FhfnXiaSyjZs7HSD1l6mPMCt4N
VbXDbqqJlOYPyd5KEc1ns+5tZgvX3/v/+WJrjdha09zt7HNkfLSu2Fqb0qlN
sa6rwuGMsTW+6buVLradHjxvbG0+kHfi9OCsQ2ztYMbY2nzY/VDpwc0JjXFS
dOKyujPG1uY3fW96cPNu1p4pTJ3NO26N7cZ4wWJdxj6Y7OaEwWJGDQtDMaEx
thsPP3klfxpH2ksb242116wbSq2G1UjDxpgUPV6wWJcJho0xWKS+yjT76LNY
+64WquJySbrx89fTZ+PQFqdDlSLiIm9cGGpoZieYkhVbd4mtuxpSsuMya8+B
27pi65WXXj80xbquCofzxtb4psd5+NOQHjxjbE2/Kx/dVQtVsY7T9OnBHWJr
BzPG1pg1V3vTB0wPvvehP+6dK6jNd01chWne2HroTa+lMMXodugU9VoK08QT
xXONW2N7NXYi5bqkNjO/vGO0mTEhauxEyhnFViu3mc3FvmKbOXid+Ti3uY2a
dUOJI4KSivFtHRovE/sVg6eLl+Srj21vqGo+7GbvILS5UsTeNOyGZnbs8YjY
eojYumtvpYvB93WuK7buDRlrrHA4b2zdOwiNQ6c4E74xM8bWOAjNU6wTjJeP
6hBb25o3tsa/Jb/pw6YHH0pojJ2QCcrm7Joxtu5905vTg9PnfzdkTF/hcNf0
49Y4zfXBzz0wQZGxdRkvnzB2ve747m8G/MlLU9uqkG7GowfhxZtx8IPD4tzm
ZmrWDSV+LIft6DbvJTnlautow34sY9drxvSMmEObQlXsqe4duO1u0KhVitj9
CO2mYR9tZuP6+7C5+mJrM7F1V7ra2NEdY1/n6mJrTPlIA42GZdaFmzG27o5u
ptlLsgTzxtY4c1iVYclxcMb04A6xtYN5Y2utLRojPXg3obGwTvLYZoytu2/6
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
sHAx9VH/E2BGMT0j9br/dvWNVt/+vYefyi35Dx55eqSL3KRYM/m9n/6RBWVg
Ib72w9/mhr1tSavUguWWzYHXAEsTUx/1PwHmFdMzfnz+ubbffuPtdz7z9cdz
S/7s86+OcZHbE2smf+DW+1NkLDm4BGBs5y+9mIPCl+99ssNPiGHFgdcAyxFT
H1PP88pLr0toBJhLXMS87Vvnu/2Ql1+7/v5b7nPgdSuxZvITl1+6+Z/K9haU
gRnFI60/dNuD3drznimXAIzkzu9fyL3N85devCmhEWAmtQ3+zUdaNzv3uxdy
2/61H/52wIvcpJ9ffD6/XN84czF/Pf3bgjIwo1vvOpdzHZ++8krnn9O5HBkA
IznUXf/2A3/Q/wSYWD78ovBI62a7k+3slQYpOZXoo196+K1/v53/U/p3+ooF
ZWAWZx9/Njfj33v4qZ4/rcNRfQCMJKayf+QLP42pjxIaASb20K//kvvJd539
ff8fmFr1D9/+k7wR1YHXe6V496mvPpYrpz33wmu1J6Sv5IpqFpSBycTGJzVT
gzQ+cUtm/zl/ALo5WuZRQiPAZF58+VpscmN6Rh+xSPst3/zFID9zY+IRVPef
+/Pe56SvW1AGphQT895/y31DTadff/NGLlfecz8sAJ394JGnjx6BKqERYAI3
3n7nY1/5WU7PuPLS6wP+8DOPPZNb8vTvAX/yBjx95ZU8W/X5u3/Z8Mz0X6dc
UL7r7O+3XXs5dSpefeNf5c9P98g3zlxstTB07fpbbXPM0q237UPh02v+7Qf+
MPZvSb1HSRf9xaJV5373woA/ubzdO4XSPWLIA4wttsOf+frjDd2bPgmNqUsz
7JhiA+596I82CwA1qe93ND2jj1u++YucCbm7E+fUimvEH/zcA81rxOm/pudM
s6BcpeLc8d3fjPcr5lXVTL71rnPl35KiZ9uFoaoKU/kN9da/3/7YV36W7pHL
z/2j/LesS1UPtjoybCTVLnhJFz3FA93u/P6FwX9+SU7g6VTdI6mNmvtCgM2K
/c+jqY/Xrr/VLaExdWZSl2bAfPsNqGLrZ77++NwXAizIxWeu5l7xSMuU8YDU
WpWw0+zL9z6ZX/kLT/3v0een5+Tndz58/KgrL72eK0UMuyC+EHEf9NnHny35
lriEVLgwlKswlSeb3XX297m3kzo/Jd+yLjlNLrUGrRKTysVd8JIuOkvvTm6x
P3z7T8ZosWv1siyeVnLN5NRGpZZq7ssBtin2P0t6eh0SGuMhrYPUotyAGFtt
FgAqr197M7eWR9Mz+jh/6cXc8jvw+ua7j7Quj1N5wJ4ePz7/3OBXVaVn5F8x
YLGIhYhnBJwcKJtcE5eQCheGYhWmwkJMcaotPW7/zq/a/WGLF0tItU1MKhd3
wUu66Cweab1b13Eo8Sw5i6c3310zOT1SS6VmJjC42P8sT31sm9AYD2ktXHPc
vBxbbRYAsliNZOym8ms//G2rqfgN61ymPlb4GePAwVgp4qRgN/Hq3PPg5dof
WDtSfFdcQipZGIrvUeGEW9yGlh8P/fovHf/I5bn+5o2PfOGntT9w8IWhuHgn
6aKzWOlr7CpGcVCQGp9Rf9fCxZrJ+ZHaq7mvC9iU2P9slfrYKqExHtI6wYLv
KsTYemKzAPB/xJN6JkgjjCOy7SVdlIvpGR1mVNLzRzpwMFaKyEeTTzAim0y1
hXn3D2wYBsbRYvyWhoWhWIUpJtU0zHbmSdF0eflb0rv84svX+v7NyxBnYvPL
OOzCUK0Kk6SLbmIK0zQzsXG2c9SCQgsXZ8LjPbLhKlLAxGL/s0PqY2FCY0wP
TnFZzfab746tsTNpswCcZrE8yLCD+gbTd/UXKKZndNttlL4r/4ShTt+Iu1lT
9Exj22l2K0wmlqFLf+nLr12PxwTsHQbudjxyN+bQwlCtClPcN31oYShOin77
gT/E3Qofv+ORDdwjtV2KVZXdwReGalWYuu0EPOVmmTCP02jjFRRauDgTntql
WGktvTibrCIFTC/2P7ulpx6NranTkrouuaeUujSpY1OykrVhu7E1LlGlPtLc
FwjMIJYHGWPDS4Mp0+AXKKZn9KnEm743v4yDHOYb516evvLKzX3zM/1/y4zi
FuYq9tXmZ2rDwL0pTLUtZrWFob1VmC796e8NC0NxUjTPveRKngPOts1l79zL
ud+9MOzC0N7+oaSLtubaTBq3mI1UUGjJai1tNfcS5zC3V0UKmF7sf97yzV90
/jnNsTWmB1cHJdTmZ07h9uHd2GqzADB2Mdhm8cDrDSRdlOt8SuCuOPDvf5hv
HP5/7+Gn8tfjim2Kv31+xbziFuY4/I+dk9ow8FAK06MX/npoYShOkcV9SXFh
KP6o2qRo3JcUS70NMts2i3jCUW1f0p3fvzDUwtCh3GlJF63E4f8YR1o3i/Uh
C08624w4Ex73JcUO/JaqSAHT200P7vyjGmJrTA+Ofaq4d+m0bR8+FFttFoDT
LA6xxzsouUEtDXvtSRflcnpGaoEv/envPX9aTLro8z7GiPCprz5WiwixmsHP
Lz7f85pnEbsBuzV79w4Dm1OY9m5xaqjCFBeGYipanBR99MJf47fEur79Z9vm
Ek84qiVFp7s+b53uszDUXIXplCddlIspTCMdad0s1oc8VSdNHJoJv/nuur5b
qiIFTG83PbiPvbG1+ZDWhpWsDWuOrad8swCcWjEpesZRXpwrXnXSRbmYnvHt
B/4wyM88lHRRrpYtefWVf7Z9wsLtbmHefUI8JiA94WgK0+4Wp1oVpt11n9rC
UPql8UjrL97zxO6VxyfMMmva07PPv9q87nP0CSWOVmGKTzhtSReFailMc+Ur
xhynU3LSRCwStTsTXnvCNqpIAdM7lB7cx25sPZQenMWVrNNw4PXR2LqQ4AtM
LCZF90/P6COmYXdIulhXvzQOxgfsVB9KuihX8i40J88sXJywOjQYj8PAj37p
4ZIUptoWp5IqTHFh6M7vX8ipLw1VOufdUdhHYepLTJ7psDBUUoUpJs/snY7b
mA63Z893YUCx/s/qTppo+8rH1JeGie6YPNNhGn9dzXUHHf7ADrskNv8ydjDB
ZpNp3tzN75ppTg/urBZbY3flUOpLXMk6DQdel8TW2RNTt2eaO7pD6ySO7Jrg
NUm/YmmvfM9+3bD6JF2kJ6fx71pardqcybAJ57tJF+XfW56hFNMp73nwcu+r
nsihLcy74jCw8B6JC0OFcyZxYShP+DScYBsLy6yr9l2s8tdQD7bPwlB5FaZY
e3nbSRepX5c+MK2O4BkkQ2lA8ZOzopMmUmxtm3tfvgm0cxWp9ElIn4fVJTSW
q8aDraZYX33jX+k1aVVFKv389FtmvzUWJX0O08dy7Nck3VNtExo/f/cvW90j
KRykN3dFsbWto+nBfcTYmh/NZWHiGsq2D7wuj63xXINTsllgVF/74W8ffvLK
qL+iQ2xd17h1GtPE1nsf+mN6jPorWllgznO3pIu8tWQti6cxPWOMJiL9zPzz
y4/gaVu9J9ZebphAWI7aFuaj3e87vvub2KM4eo/EhaHm9IwsTiBUj6NNROol
rq72XZzaOloPtvPCUJ7aSh/Io93vmJi0lnajg2rYvnfj215DVe8ZUK0+5BIu
6agcW8tz72P1ttTyND85tV3dqkhV98jqEhrLVbG1VcNY3SPlVaTylPjsC1jL
kWPrqKl01V7dVhMIVfW2VvdIlR68ltjaQUl6cB8xtp78nwXHo1NbqduTn7/V
A6/bxtZ4rsFKKzQuRBVbx6601ja2rm7cOoFpYms1/bucceti6wF2SLqIOQnL
XzyN6Rnlo6S2YtJFycJQLSehOtK6WW32ptX6+yyObmGuidGz8B6JC0OFPcC4
MFTYkv/4/HP5D1l+7bu47atwdqXDwlCHKkzxHll+u9FBTH0sPIKnMIVpYrE+
5BLSdZrF2Fp4dFes3lZ4j3SoIhVHSStKaCwXY2thwxjvkcKRadx/sd7j7YaV
Y+t4lS5iHfvChMZYva3wHonpwcuPrR3Esx7Gq2MfY2vJlupasb5NJia1ja21
2ZsNJzSOKsbW8bIOOsTWdY1bpzFBbI0r4AsZt8ak6LEzuNpqlXQRB7Mni188
jekZo34S2p6dHXez1g7yaBC7LuPNLA2i2wxGziwtP0+2apZL0jOyqlluFXDb
zizNpXYyTnlHvdXCULcqTAOe77lAMfWxcDqxVQrTxOJJZws/aSLG1sIhT6ze
Vn6PtKoiVdtBsJyFoaHE2FrYMNbukZKkizgJVhhbNy/G1vLpxLY+f/cv4285
uqAcd/UW3iNxgWn5sbWDFPJapQf3+UVVbC0/biCu2mwvMalbbI07mzac0Diq
uKv3ZJykiw6xdV3j1mlME1tr1SFmH7fGpOjZL2ZXedLF7kaPk2UvnsYlpLE7
wyUVTSt92vxY9bd8ymJif7v6RufdPWno1/YAo3RPtWrzq33crZJRmw+OXI44
/99qEF2+MNSnClO8R5bcbrQVa3DlR/M8VYcUpil1ntabWIyt+dGcdBHTM1rd
I3G82VyzfXcT5dHYujpxgjp3cRvGmzGFKT+aky7iMmt+rPF4uwHF2Jofg1e6
qDYc1R7NC8pxrvLkP7NtDUkXMT04P5YcWzuIR1qPPdGUYmtqYVq9enHKYkuJ
SX1ia1wn3WRC46hibM2PYZMuOsTW1Y1bJzBNbK1topx93Br/6sX2xwqTLuI0
V8wDXObiaVxCmqZdPXra783e+ZCL3fKWpSaucMxySNt7JL2kbdvVDrdhTDle
Zu27ONdxyzd/0fbbCycJ4y74Du3qipIuysU50tgwHpokXMVcx8Lni27uxNaS
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
UTk9GzBvvntdYPrEpAk2YMaFoZPRDhfokHSR76zOZ3n3Eef/S2omx/3ss3xU
htJz/b2/VrE1LgaN91GJH4bCl6XbwlD1XauIrbV2o2SdPSZdnBSkMMXYWt7R
yt9V3mDmZnb5sbVbpYtaOtPReyR+GE7KDiWJSRcnZUuuC4mt5W/6ctbZ+6jl
fM4YWxsStGrGXmfv1tHK31X+Ych31oyxtfxNb/tR6ZZ0EeuztY2t6xq3lr/p
uRtWfo8UpjBVesbWwugzwbg1LiGttzj5zXdPXhVumYwlzSee4K1Vil5Oekac
LRyvUsSM9SjidHSfM7tXKk84T5/wME0Nivxbxruja/UoSn5LnL1vXswdXLyj
C/fXx4Zx9vpOPXVef++vQ2yNSRfjLfXmBeXCT2+HhaHYzK4ituZ2o/AeiUVI
Clf9andiSRJyPHaz8E7Mf8gqYmss8FXYbauV+in5LflOPFRhZle+R8pXxpcQ
Wwvf9C2lB9cSHuaKrYUfrVHTg/v8lvgRKkmUqmWdzRhbC9/0eDJaYbvRNumi
w4hyvePWwjc9pigX3iPlKUxZz9ha+OkdddwaVw1q5zqtUTV51apSRNuZzKE0
V4qeVzXbP/aJjXH9fbKTJuKqQcka2fbE9fcpF097bmcuV73FY1dhapV0ERdZ
TlquEfTUbdXg5n8axg0c+15bf59s3NE5tlahoeex782qVcJW90htYag5NMRm
di2xtbrmVvdI9Ra3WpFvPqCnJnZOTspW0mtJPquIra1CQ2x4W90j1Up6eRWm
vJJe/gIuIbYWvulxRX5p/c8O9p50NrbdTPKjH/uGY98H1yoDp/YRKkm6qCUH
zhVbC9/0tunBlbbdp5i10ja2rm7cWvim5/Tgwnukc7Zb59ja6gUcadwajwjZ
TKn/Ry/8te0kbe2kiZEuLDpaKXp2d539/di7zuME72Qfv5ieUbhGtj3x4zfN
4mmHBdA+Lv3p7xN0yQqTLuIG5NjbmebjFxu3tqmP6TVc3TE6e41xwFazPrE1
DeJSxB97KJc6lm0nRZuP7IziMuuKYusTl1+6/9yfW31Len7bo2kLK13E+Jgf
zYfQxWoq+bGK2FqYNlmrwtTqHkkvwu4R58063CPzxtb8aKjTfvPdR4S0fU0W
K1aZmD62FrY5sWby2LG1PKFxb7vRnHSxWzhrltha2KHqkB6893sbasne7HdI
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
Tza3UbF7sK7YOnZCY7pH0j2V7qzy16SK4841iErSgzvrk3SRukCt+p+rc+9D
f0ytU6s++RgpTNkaY2sHVedt7EprVf8zhctRf8vmpdjd9h7ZgDiJPWx6Rmcp
LqRou8aFoXJx8Wuk3ktMuiiPtnlmoDwZMu9mnexI9D6ay4Psipv4Cu+RmJh0
UlaFKSZdFEbbvMy6li1Ot3/nV60SS2JiUuEscV5COjqSzdoeJBfTsFdRezkv
fpUfwRNTmJZzqHe8R6YsKNRZjq3lx4vEokklMwOj9tKzfJBHrZ7wMuXYWt4w
5nukvN3oIM6650OyGsTUhXXF1sFXl6J8j5QnXeTUx1O43rpXeXpwZzHporzd
yB+hVcTWDnJsLe+Tj5fClK0utnaQ243mFdg+cv9zq+PWaeQ++TRJvwsRRxaj
BtC20tuxxoWhcjE9Y7zWL3b/SprxOIFzUlYo7NKf/h5TQVqtv0+v2/mwuRkv
vEdiYlJhFaYOSRdxmXX5dWUf+vVf8tUW5v/ExKTCHZRxcFqyY73bxG+cwV54
YlJcoyycfqylMC2nDGOtPuT0p/61EmNr4dRKnPgtnMAZL4M9iwd5nKxh8TTG
1sJ6R3nit7Dd6CDG1vLBaT7wel2x9WS0YzHjPVKYdBFTH1eU0Diq8vTgPtom
XcTqbcuPrR3E2FrYJ59mR+q6YmsHsd0Yr9Ja7H9uctw6gZgePN7049Is/AYs
3z6wOvHQhDu++5tRf1ccszcvDMU5hNxqNa8tpuCSxwJtpzhmkTu3zeVBaqrU
6FbHvld971ZVmFolXcR5tlZTHLPIa+ttJ45aVRePGzdOyhZP46bI8oPk4hTH
whOT4sRRYd87vc6t5hCmtNjlg5oYWwvnteLcY+qNlN8jVWp09Y1j1GxPwbf2
EVry4mmMrYXzWnFTZGG70VaMra02bqTxaYflg1nEiaOTcba9724cPjqvFdf1
CmPr5sV7ZOyNG6l/W95u5BSmVcTWDmJsLeyTj53ClK0ltnaw226MMa+12//c
2Lh1GjE9uOQe2YblJ6fFxnnhC0PlaudGjZ34HcsGNi8MxUoRuVluHjvHvSeT
xffO+iR+p15B23vk3O9eaFtmoTDpopbClB/LrB4W19Y79K9i49xQRSrugs+f
3uaBT9yz1vYguZiGPeN5Q81i/yr/o3lhKKYwle+vmVK8R0Zaf+8vxtaS40Vq
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
/0lCI8CqXX33/X+/+f/s7XjHrqn+J8AELly63LDhaDdZ/dqHt9J8777f9X8P
MUXk6ClOmxEXIM4/8+faf01/038jGEBb8Ujr1GPfTYA5zQmNAGv3n3c92dCG
xz65/ifAqN6+8u4nvnJ/8xx4rZDjcy+/OUaZ2bse/H0ODQ2nOG1GXF++7cxv
935NzyLJAB3kI60PlXA/tQmNAGv38wsvH81vjH1y/U+A8dx0x7mS/aHxkNM8
FTPsEXjvf/DPz33z0eYhwGbEI60/842fvfePD/Z+WTxAPF32l157e+L3uT0P
PfnSoat9yIOPv9jq69Mnue23bF665unKz/0uKBJb+4aJ8T4JjemLfR5qPCPA
BFL/Mx9p3VD7K/bJ9T/n0nYeTGzltEkf+LVvqEmPeXnt9Lxaml+DP/IxRuxN
j9+GeKT1dV880xzj0n8tmbehRDV+bFXpokphahUQqypMu1vPTrN0zR3Bswox
EzK1+c0xrnNC43899IxnpKZ6RlIbNfcbATartu7ZHJRjn1z/c3pVCpPYCodU
NT3Sx37uN9JdGubnLJfqSOvmr4+VBNLra3c+Mca7ivmTtdKRmxGPtC4Z5sdJ
s0N7mjgq7q0orHSRuyJHJ82yXIWpVpb5NMv1YD/99Ye2OsW6DbFKWMn+o24J
jfkgj/SMvPnO34d446uXn5HURqWWau63A2xT7H9WR1o3i31y/c8p5f6n2Ap7
5cOd17uhJm6BiUdaN5umxxhri5196pWR/pW5dKuNFjeUmfTuJtYdbTvSLFwY
ilWY0uvLt/9yuLe/VrVZXEfwLFk80rrtjGVhQmM8yCO9brzt7BBvfN2mWekA
TrnY/4xHWjeLfXL9z2nU+p9iK+zKhzuvd0NN5/KwE2RTxyYl9fO3VB+y87mB
cZgv6aKDh558qbbP7mhXJO7CKFwYipNm1eves38Y7pdYn9Sj2N3h6AieZYpH
WreaNGuV0HjLD35d+zyceey5fm989SbYBQyccp1Lr6c+ef5GSRfT2O1/iq0Q
xcOdq1d6BOZ+U+30OTp5mkqDOd3uZFsHXsf0jIaayXvFg8glXbTy6utXcu2d
vDvvpDFNNy4h5e9tXhiKG8ryv3LKa9/96OFn8zXJl9ERPAsU0zMa6joeUpjQ
GOdt4iN5mgsKTVAhHyD2P9uuiTz70hu5RyTpYmyx/xm7rGIrVNIHO/aX8oc/
PQhzv7VSb77z949/6b4O6RkTi+O4bRx4HdMzvnff7zr8hKo8rKSLVt7/4J+f
veXhHJuee/nNoyXsailMl9/429GFoVqxZbWXr314TvWG7/6iVXlYphRTmLoV
Wy5JaKwVhHz19Sv5/57agkLxoUjtUnpkcgcjtVqeEWAQsf/Zbb9wVR5W0sXY
ailMf7r8jtgKUfpIpw92fijSBz7+3/Q4zP0Gi8RtVm3TM6aUOqJf+PZjeYCw
0vo8WUzP6NzNrk0sFFb7OeXiFFbVhagd77g7VbKbwtS8MLT3IPIHH38x/5BT
WPsuDs9zMkzh0clMLE59l9R13KuW0Fj7r3sPSz371Cs9BwirFmsm5y5ETL7t
NmkPEMX+Z4fUx0qtDZd0MZLdFCaxFaJY4bBKGIupMulxWP5K1rp6ejF5fqX1
eSpxFqVnCnqMqiUnYZ1yF5//y95ZlJjV+Z27L8RvqY603n1GGhaGDlVhilH1
tNW+u/WH52s9ikrMwVj7FOs21FKY+vyohlmd+PjEZ+TQ5+Q0SC1P/t1jem1e
MUn3JbVgM75DYO1qq3h9ZlHiStanv/7Q6Uz6HVXsf8ZZFLEVKrHCYSymFOc3
Fn7gdZw7WksW9KHLvi4xPePBx1/s+dNi0sXt91wc5B1uUix9/LEb763tMIqV
Lp54+rXqLxtSmNKfr7/1kd0uTUMVpphxeqpqL8fJrtq6zOtvXW11BA+j2pvC
1FktoTE/Iw0HycX6kKeqoFBqc/Izktqi+J/yoY0ny95NDCzfbnpwHw3BnZ4a
UpjEVrh2LEkjrmSNethQH+/944O8r2pdFQJ3U5LWJaZn3Pz9Xw3yM9PPyddk
ydvN5hVPOMrzLVktVKUR0NEUpstv/C3HymphKA2UmqswxVh5Smov1zaC7c63
xBza9U6xbkNcPhukdY2zbdXdP3qQXNwG2DM5Zy3ifEu6OLvPSJyraVtpH6By
KD24j7iSJeliKLH/ubd6m9gKMbs+fbxr/7XWs0oPyCxvslmc0+ifnjGl2ub6
dU3wxvSMAT8bnU/KPj3iCUeHyrbEPRqpo1KSwlTLIy2pwnTnA0/nr9l87eW4
hbmhHmycBFhRCfSNaXUydbnaSdklB8nFXOvTUFAoruAc2q93aP8jQInm9ODO
JF2MoSSFSWzlNIv79Q7tRYorWekBmfgdHhUf4aHSM6YUD55Y14HXOT1j8Lyp
hgTFo9L1XH7VoD7+dPmdwiON4tNd+IzECJhfDVvGaluctn3gdQz9DfVga0fw
tCqBnq5nugWttjilTmltM8hR63pG0tVI16RVwxhTmAbfMhYn/wufkTiJt6KC
Qin0t51ijbubG7rHsTZ4as3UbK+59YfnWw0D0/VMz8jYlS46tBuPnP9jeo30
fgaXPocTFKVPz9RuOuvgUlDY9kpWc3pwH5IuGqR2qe3qRnkK0+mJrR2k2LrA
SmsdumfsiqvnzXV6Y0W+RcXWuM1qsak7R8UebOdTPyYW0zPufODpwX9+TLoo
XzzNA+Gt1pXde8LRIXE3buEzEhOTqtfRKky18we32izHGcKjPbTyprWmWkKq
1V5uVqUilLcb+SO0lmek6qGVDwPH7qHFhMYOz8haCgpVsbVVYcxYve3oykJq
u/IXb7jd6KCKra32flbPSKt2o60OsbWqFJFeqziUMzeMo+4Zr56RsZMuqoWY
DW8fLkkP7qNw5eW0ybG1vE/eKoXplMTWDqpV+3QllzbIrRZwPSN9tFrArRVm
WU5sjdusFlvWpkRJdvdyxPSM6299ZIyOdEy6KF88zZtEtlpX9vZ7LuY4VbJs
HXfjFj4jcdqhsApT3BWyyQOv4yRVYUe6JO2wJi4hFe5YT5+Btu1G3iSyimck
pz6WH8EzQfZyTGjs8IysoqBQjq2Fx4vETkLhrtv86W1eAD1VYmwtrEoas5fH
q3TRNrbGCL6KgxVybG2b0FguPiPjJV3EtYBNbh8uTw/u7FQlXZTLsbW8Tx7r
QJakMJ2G2NpWbDcWVWktFzfwjPTRtrjBAg8tuvvRS/lXGCM9Y0qxPs/CJ3jT
rc/pGeP1W659uK5syeJpLKC6yYWhC5cu59+uvE3Ol6X8GcmJSeVVmGLtu7Uk
XZSLG7gKxzu1YwJ2S3LVXLn6Xl5CKpzzidkFhe1GPCRr+c9ITH08+Z8qUkcX
hmKS+agbP3P06faMLLxme4ytJ2VJFzGBtnxOIH0C83ep2R5j60nZib2x51A+
V9xWh9gas1tP2uS2zSLG1pOWCY3l4jNyMs6CclxmPdni9uH4jIz628X+58L7
5NOIsbWwTx7PSC1fp9t2bO2g1m4spNJafEA8I53F2FpecyD20GaPrXEGdaT0
jInFFa4lT/DGAoxjb1uLdWWbG/OYr5hfW1oYigmfbYsbf+vHv2k1g1otDLUq
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
tttyxq1tr3yHZyR9/UixtYPJYuvuMvF4/9ZyxEzauaZBjq6tTyz2PXIfpqEt
igtDbRdWXn39Snpe5trilGvWzXuafGclp7Ec8qOHn51ri1Oc/x+87k18mgr7
+XHSu7A1iAsr+SPUUHa7Ng0yV92V8grzsX+eX2tMwRpk/b2n8tgaV+Hza9gj
eq/1S2hMEbPtwlDqw8x1LGN5bN3bbjSnUnROuiivwhS/Mr+aSxnExdMZ68qW
x9aSOfO9ypeJ+yRdlC+zLuE0lg4dqtgaLCE9uHPSRbX3ZK7YmuJp23MGy9OD
41d262mPYQmxNd30FFtb3fSj6cFZ3L7XtqeaQl7bLU7l5x4uZNza9qbf/eil
ts9I+vpWJxeMWuFwsti6t4TC5tVmI6ef4I2H3U92pHWzmHRRvY6u5tcWhgqf
0HzxZ6l9F9Mzpq+ZPJTm01gOyQu7029ViE/cSEndsSk7+Vd+b/O3xEnvk4KD
5OLCUOFHKNZenuVMolYV5uPCUPVaaXmiax9ef5/lSW8VW+NtOhn0JOUothvl
q+E5FaG83aia2VXE1lq7UfKMdEu6aFWFKcbWwosfF0+XH1trCY3lXaBWJRTi
anj5OaFtl1ljbtuMsbX8ptcy5ZbQ/+ycdFEtI84bW8uHTq3Sg+Ntattoj2oh
sbX8phemB2cxMam8C5TbjQ6x9aRgiWQ549bym57Tg8ufkarRHi+2djBBbG04
XmTz4kr99BO8cWFoyiOtm3VIuogLQ4WLp3GCd+Lad/Pe9AF1mAqO6+/TL55O
cNNrlSJKDsnqsBu3w8LQgKextNWh0kWfhaGlmbGZ7RBby1OYOuuQ0FirwlTS
bqwrtnZID+6QdCG27orPSGF6RofjRWLSRUmy1mmIrTnpYlHpwWLrrqWlMGWb
j61tKxyKrbsWG1s7GDW2xrWJWSaWZzdXmsTsE8sNqjnGVpUi4hanVut3J9PW
vpt9YnlYfdbvTqZdPJ1s0TbPw7ddm2g1D189vx3W76rXlCmI3U6BqRrGNdal
rJkrBbFbbM3rd6NWb2ub0FjLH2u1freW2Np5/e6kLOmiVuyrbWztkHe6ltga
E5OONtqx2Ff5M1I7ReXoe+uZdzpjbC286XHdf2n9z1bPb8w7nTe2lnwgawVJ
yp/Nqk++kBSmbAmxtfCmt0oPztqe/hnbjQ6xtW3e6byxtfCm98k7HTu2tjVq
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
gafnfhcAG3T5jb9d98Uzn/76Q+/944PCb7lw6fK//cfdN3z3F+X/ypnHnju5
/r9vO/PbTu9xm+568PfpmvzXQ8/M/UYA/r/U604RIcWFP11+Z+73whFiKzCB
W37w69TUPHL+j3O/EYBNef+Df37um4+mBja9vvXj35R8y9tX3v3EV+6vvuXu
Ry+VfMsLr7z1kc//pPqW88/8ud9b3ohnX3rj3/7j7nRB0v8+/cJf5347AP/r
O3dfqJrrz3zjZ+Wz9ExPbAUmcPapV6p25rovnnn19Stzvx2A7fivh56pGtjq
de7iq0e/5aY7zuWv/7f/uPvoFqfUmf/01x/K3/LxL9339pV3B3r7a3X13fc/
edMD+ZqkP1+5+t7cbwrg2hNPvxaDgqSLxRJbgQm8/tbVj95wT25qPnvLw7ZG
Agzi6Rf+WqVn5NfHbry3uRrM/edeiF+fXp/66k+vvvt+w7fkZdb8uvG2s0P/
Kivzn3c9WbsmX7vzibnfFHDavfnO31MUqLVOki6WSWwFxvb+B//8wrcfqzU1
37vvd3O/L4DVu3L1vZye8fEv3ZenZRqqwfzp8jvXffFM/pbcLDdscYrLrHl/
U3qdeey5cX6tFfj5hZfjamb+s924wLzScD7nPeZpGUkXCyS2AhP40cPP7nZZ
U4C4+Pxf5n5rAOv2tTufyA3shUuX7370Uv6/qe3d/fr3/vHBZ77xs7xv9KXX
3q4qejVscYrLrJ+86YHUn//sLQ9X//cjn/9J21OctuHyG3/LCZ+f/vpD6RLl
VHO7cYEZVfVgq9ddD/6+qtYu6WKBxFZgAs+9/GZcq339rat5QuYTX7nfLD1A
Z4+c/2Pudd9+z8XqL1NLmye9Uwtc+5bbzvw2f8v951649j/FT/795v/TsMUp
LrNWhWpfff1Kzq5pdYrTNsSaybnPHMsw2o0LzCI2RKmZqhqi7933O0kXCyS2
AmPb28k//8yfc1C46Y5zc79HgFWqjrQ++deRGXn4H5fbUgscq8Ecan5r0+bx
X7n37B/yt8RDnONE0HfuvjDy77ossWZyHNrEJWm7cYGJxXqwH73hnhQjqr9P
0UHSxdKIrcAEbv3h+b0J8LuLswCUi73r67545k+X34n/NW5FT+1w9ZdvX3k3
pibWTv+JW5zygdcvvfb27jJrFjdJlZzitA35SOv0+vLtv6z91/Q3duMCs4j1
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
p+Qjd/6ZP1dfn16f++ajZhK6+d59v8uXMf157rcD8P+kKJBiQdU0feTzP7Ew
BACcHnc/eimP0b7149/M/XbYspyekV+3/ODXzd/y5jt///iX7ovf8l8PPTPN
u92Si8//pVp6rl7pzxcuXZ77TQFcu/WH52MLb2EIADglXnjlrThGS69zF1+d
+02xWTE9I7+aq8HceNvZ2tenT+yzL70x2XvegCtX3/vEV+6vXcb0N29feXfu
twacamefemU3KFgYAgA27+q773/qqz+t9YI+duO9r791de63xgbF9Iyb7jj3
6a8/VP25oRrMmceey5/MW394Pn04qz9/8qYHLJ6Wu/n7v4p7lPKf012Y+60B
p1fqbKT2P29cjS2VhSEAYNu+9ePf5J7P7fdczCPlG777i7nfGlvz9pV3c3pG
+sOVq++98MpbH/n8TxqqwcQvqArPpv55/sT+511PzvKLrE5VM7l63Xbmt9f+
VRK5et1/7oW53yBwGqUm/QvffixnPD738pspLnzypgcsDAEAm7c7sL3zgafz
37Q6fRiOuumOc7nXffH5v1R/GVNfatVg3vvHBzl55rovnsmHMscpxLNPvTL1
r7E2l9/4W66Z/Jlv/Cxd1Wv/Oi48X9s/XX5n7rcJnDqxZl3ucjz9wl8tDAEA
2/b6W1d3N328/8E/r7/1kbhQNffbZCPuP/fCodN8clmY9JFL/fD893HW5cHH
X8x/H7fXffSGeyyeNohP9Ec+/5OXXns7/6f055x3lGdpAKYRa9Z94duPxdxI
C0MAwLZVR1rvzrpcfuNvcRO30hz096fL78T0jNqOpDff+XucGLxy9b1rH07c
uvn7v6r9wIZuPFEc1Nx79g+1/5r+praDCWACzZPqFoYAgA3bmx6c/fzCy7Fu
6izvkM1I/eqjm2KeePq1/JH72p1P1BK3qvmZmrjFyeLpXjHh/1C13rx9LL3O
P/Pnid8hcDrF1Me91XotDAEAm1SSV/Cfdz2pNAeDKCwY+527L+QvS33vvXuX
auIWp7aLp6+/dXXbW5xiMcyGk6xjaeWPf+k+B1731+Hsdce1D8JlXIuY+thw
krWFodm9948PUo+x1bdsPrZC1OEZ2byr774f98WXePX1K237n+my22Lfn47T
LAprbqQvy0O5htOHodn5Z/6cu9PNhynHmr35decDTzd8S9zi1Grx9P0P/vm5
bz669xSnzfjanU/ky3jh0uWGr0z/NX/ll2//5WTvcJOqmsl3P3qp/FuqY98l
JvWUrrkqUqsQUx9Tb6S53bYwNK/v3H0h1xUscRpiK0TpGakOCZ37jSxI6n+2
7ZNff+sjrfqf6YKny54ufqc3yP969qU3Uv9TbJ1e+Xk01T06OXz6MDR7+8q7
H//SfUfTM7J4nnV6pcb56KcubnEqXzz9r4eeOdl3itNmPHL+j/my3H7PxaNf
n76mobwMhdLH9bO3PFwlaxUuluUUJolJfTz38ptVtHIEz/LFmnVHH5PawpDZ
tinlFCaxFfbKXdDm1cZTJfc/O7QbZx57rvBb8i77dAu6vtPTLvc/xdaJFaYH
Zz96+Nn89WIrbX359l8WpmdkuRrMdV88U5iRFbc4lUzwxmnG9IftJenVjrQu
mUeNtX1qRy9R7nv3/S5/FI8u+ldiCpPEpG7Sdc57G9OrVWISE4s16wrvVGyx
1WyfTExhElthV0zPbt6Jf3rE/meHdiP1P0tWsuIhrekWpBsxxHs/dWL/U2yd
TKv04Eq6NekGia10EKvslqRnZFU1mJ9feLnw6+MWp6O76mI1lZN/VQneUn3I
nJ5RzWi9+vqVwm9MXxnncOzGbavacBQ/WkdnvGMKU9uFIbJbf3g+XkNH8CxW
TmFqm8UUF4bUbJ9GTmESW2GvXLow97j2nlJxesT+Z2FC4267kfrzzf3PeEhr
9Uo3YuhfZft2+59i6zRapQdn6TnK5xqIrRSKe44K0zOyN9/5e6vZm9o/17yr
Lk4F59d/3vVkq39uyWJ6xoOPv9jqe9PX5+914HUr1Rbm3Y/W3sNiKrUlpFYL
Q2Rnn3pl97I7gmeBYgrTx268t1VedG1hyGzb2GIKU36d8tgKUVxwzK+23d2N
if3P/GpOutjbbjRUg4mJ3FayOtvb/xRbJ9AhPTiL3V2xlaNiskqr9Iw+YmQ8
tKsuTgV/68e/iTWUylNxliymZ9z8/V91+Anpu/I1UVe2XLxu6bOU13oOjTqr
mnX5Gblw6XKe9D66MEQWFwvSdXMEz5LFFKaGWcpD4r022zaqeOzmDd/9hdgK
NXEFMIXyzqngWxL7nzfedrYkobFW4TDGiEPVYGKRw3TZcz/KSla52P9Mtyxd
arF1GrXY2uEniK2Ui4Vc2qZn9BEPvN7dVRengquderXzxdZ+cFhMz+hc4T/+
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
1JnLrBpoCpzGYqwwP8b9fJvPiN5OYwtDQTPruy5lTnGdGVszxoxtln3YVmx1
DWNqY6gHZkVGBDo94r6H1NjqbvikT3Xzkx3U9mOrHm8XGQbqMqv2NyKTPzo9
UuAA37qx1bhpsdn04DnqxlatIjUWZ2emB5cpLLmt2KqNQOSiawqTPiOR1TSd
CW8qPdirG1stFz1ID/Y12yOz4jo94p6p1NiakcJkTGhcddyqvYgWKkXXpT2f
tSd4C2xhXsTkblxtDbpjN7XnM9iCaafLdQmCBLNVa9/p3GYjNZMr0tp3aydh
6oKLsfRBFZPJ29mlO9Wc01hSJW053BBL/cmgmU1af5+J2Kp2H1snC3r3l1kz
Ymvqp9pcbNXu7uAwUEv+dilMXzvxSz8iGJxV0J62ZRfJIirGVkvG/o4Pya0Y
W3WZZnCKtXB6cLbNxdauoHfkovfTgycTGjVmNZge7FWMrZaLHqQH64z94FJm
f8thRmzN+NXqjlt1mquRStHVZWcFJym2hXm++G7cIFOuCy7xhSHd8e13wQfd
zvVGLtrZ23TNuqXoiGC9AmWac2IvfVBLfGFokWXWRaZ0LJIqzG9O/GzWwWbW
uP4+E7G1b/exNX7YfX+ZNSO2ZthWbA2mdIJh4GAVJh0R9BMag2XWMrtXOhVj
q170/tFdm0gPzlY3tupwtT/FWjg9eI5txVbXbkSSLgbTg+MJjcWazUVUjK3x
iz6YHhzfzaopTP4JSo2tGeqOW7XdaKdSdF06ybbSsLFYsFhKpD+jidAaXCIL
Q1qsT9uNM89d9X/VShPR2m5svWbdUoIaVisNGzUper1gsZTIwpAus977g9/M
+VcKDBuDCvMlRyLF6CKvLgxFmtkCU7LE1r7dx1b3r4+NCPQ8FI1uGbE1w7Zi
69U33hsbBo5VYRr71ytWdr1ZO7bqRdd5+GNID64YW92/pUkXesvpZoqW04O9
bcVWzZoLLvpYerDOFWjWXDATXuWo+iR1Y+vYRQ9SmDS6jSU0BilM/iJmxNYM
tcat2l61Vim6Ltdm+q93jTaz8BbmRQzuxo3vPXn49Av9NjN+kKW2mYtv0tS5
zX3UrFuKjgj662jzjcX0lv352vs+svsRweLLrNqvWDxdPK/C/Bbp+RQ+UEaa
2bXHI8TWMbuPrYMjAn/c1WFoBS0jtmbYVmwdDBnxKkyDW5wGl1lLqhtbBweh
+kW5ocSyn6cdFWOrDkJ9P6HAeHkN24qtOr7wFz2eHqwTvL728oIz4cVUjK2D
Fz2eHuzu/37IiFc4zIitGcqPW3Wa69a7ThUoMrYt6+UTLri2Xpj7tPowTu49
0QLm3cOoT9NgvSl9GBcvYK5zm7upWbcUvS2X3c8Sz3dtmaZTuhZ4jWXWYB1t
2dsyu8L85vTboslmVtffl83VJ7bG7T62as/th2de1Dg4tsyaGlszbC62asqH
G2hEllk7/S1OY8ushVWMrf3RTZm9JC2oG1v7SRd+M8Um0oO9zcXWoC2aTA8O
ki7cM7K5FCavYmztX/TJ9OBnL7/hf6BLaJyscJgRW1OVH7dq9G+zUnRdwVaF
pRLVKm5hni9IVPOR7jC+UVHnLV2L5xu9yFls2oNa8OCwwTlzKJ36XqrWq6UW
XMs0nVK3pi64zBpsXl4qZcs9kkeVnqG5BK5psjSzK9WxJLbGHUNs1RGBthtj
PeSM2JphW7E1GAZaqjBpORTXbZ5zkNyyKsbW4FjMYnVWW1A3tmrShQ4zt5Ie
7G0rtgZ5epb04CDpYospTJ26sVUvurvhLc+I1l7WZyQya50aWzOUHLcaz3I6
cjPPoeuru4V5EZol6F/xYzd1T59/jR2Z19Hs4kUODtPGdn8165YS1LBapPtq
OSexZVof0r8ix9Hm0XW0RcoZ6UCmzPmqLdCbzdjMLn7GK7HVYvexVUcE/hVf
Zs2IrRm2FVt1GOhf8TQ/TWj0r+oHydWNrXrR/TNS4AziFlSMrVpx2r+2lR7s
bSu2atKFsd3QKWX/2lAKk1c3tuq+NsszorWX/Su+ozMjtmYoM27Vaa72K0XX
pXN987vWk8dZboKmnx1sx27qnKclJga172Z+YE1E3GvNuqVoDavuEMA5Jo+K
3gRN7V6wLx3QdbT5f5vGxONJz9CFIWMzq11rN1ya+QGIrXa7j61Bu2FZZs2I
rak2F1t1S8jBlubnExq7VyMHyVWMrXrRu9fm0jPmqBhbda7ysM304M7mYqsm
XRjbDZ90sfVnpGJs1Yue94xYKhxmxNYMS41bb8EKLFew9mfcJ775Wvjaq+CG
r4WvvQpu+Fr45mvha6+CG74WvvYquOFrsXzzAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHbg2tt/rf0RAAAAAAAA
jsX1Gx9+9u4nHnn697U/CAAAAAAAwFH4xkPPHm7/709/5SdXXnu39mcBAAAA
AADYubMXXj3c/t/d6wvfPPPh3z+u/YkAAAAAAAB269rbf73lq4/42Rj3+s6P
f1v7QwEAAAAAAOzTRx//4/b7zupUTPc6f+n12h8NAAAAAABghx564rKfgXn4
9AufvfuJ7r8/c+djb717o/anAwAAAAAA2JXLV/7yqS+d7KZf7vzuueBP7njg
mdofEAAAAAAAYD9ufPCRZsK88/7fuj/XbJmTT71c90MCAAAAAADsxn88/Jyf
dXn28hv+z7WSzKe+dPL3f3qn4ocEAAAAAADYh19c/JOfirn/5MXg/9VTlj53
z09vfPBRlQ8JAAAAAACwD9fe/uu/3PFoN9nyxW/9/MO/f9z/GZ2uue9HF8p/
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
meDV9IzJ7velV97030nXMjQybNcJ3stX/lL740xzXQg/tXXrXacmu98uCGoD
O/mMZC8MdYdktTDJtpLBCvNj4hVLIrrqPexYV13qo/tmjD+fWr1HF0+7ZdbF
uxZBfchNzLb52Kq1E+O66m3xyfmApjD98MyLkx/peGJrUn377hmh3ZjDx9bW
ju7KiK3dYveOT0i0pAd7Ojlv7H/quQb2dsPfQrX24K/Nx1b7wrdPYbInNMYr
HPY/0uZiaxnZsdU4taVbnLYSW3eje0baGbe6QON6zgdDekZhGUkXOhXc/gSv
pmcYR0kaPaunMHlBIl/S+nsVLjb5r9EyStKRqfEZyVgY0kOydrkwNFZhPkKT
LoyVLnQXPDvWO5r66L4fy1uMKUyePiN5qekWWh+y/YJCGluNVaS0eptxZURH
ScbZlaOKrcbEJH1GaDey+dja1NFdGbFVR0m7PCFRV/eMM5A6MjX2P/VcA2O7
4W+h4BTR3fCx1VgUQlOYjAmNkxUO+7YVW8uYGVuNsyu6xan92Lob+ow0Mm7V
k3GSsqMLSEq60Kng9id4NT3Dfif4ZrmRFCZPuy729fcqHj9/JaOX5Ztl42D2
ZuLCkB6SdTBklm5OUL3f3lHXpIvJhSHdBb/qtMCGaOqjcToxKYXJ88/IqoNZ
PemstfX3gMZW45DHV28zDnmCFCb7zqMjia0H25R78IzQbuTR2HpITGhcT0Zs
1QUm4y20Lbrz3ZIe3HFBvGs37P3P1KLuwS20v8SkYOe7uwqTnX9dhDVOC/hJ
sKQU+g3F1gJmxlZ7erD7MV21aTm27olOFLcwbtUjrat/mD570oW2+f7V8gSv
LiElZUm5kZSLnu2kMHk6wWufsijsz9fe7x8XbuTCU2rKin1hSA/J8iOCPS0M
TVaYH2OPibqE5F9Hvht3cC9zvC+dkcLkuSu79kaP7Gm9wjS2+ld8nkrTM/wr
3pfWFKakqrzHEFt1+igy3tQUJtqNbBpb/auFo7tSY6tWivAv1+na0/ZhrbWe
NNHk2o1//ffHx+rBDtK53Hi7oSlM/rWnxCSNrf7lrkXkLUGBgu4VT2icPKR1
zFZiaxlzYqt7RpLm83U5oOXYuhu6Vt7CuFWTohtJ1OkzJl3osFcfojYneHX+
P6PybZtXqtktb55r4vwaWaTCfETqN29cGHLdIX8/fO3EL+MnEm6R9sciFebH
GPNFdQlJG4Fj3o2rc6T6nYx10ub3xwq0TnPmi8oIYqulVKb2x9wlsOSZ56Uw
ebuPre6TW/ZiaAqT/rLH3G6kCmKri2J5A5nFZcRW3Y/jRsr+FnJvL/zhV6Kj
9Yy5jowW3pJ0oSlM7jLpLbSPxKQgtuqk8dgwMEhh0nKyY2u4xkNax7QfW8uY
GVsznhFdi2kztu6G1pFwg9YWxq16pHWkUnR1k3up3B/6Hzjx6KWb/1c8f86A
YlVX33jP3wmpZdUb12A5aOXuDX+fFNsHpLtx73jgmf534gZuLs76gZsLfxoI
drAwlJqrPEh34w6WQL/48jX/PXeLTdpuHOdu3H6BOD2ifTDpwn23/i3uOy/+
ka20oFDqSRMFBLE1iP79Lq7mKnc1kydrMC7Sbd59bNV2YzAxqZ8enFHpAkFs
zU7yX1ZGbO3P/Osk/2Pn/lD+t1iWjta/+K2fl+mkWSb5NYXJXSatK2vfS9Wy
ILYGE5iDw8AghWkyodF+SGtE47G1gFpTUi3H1t3on7FSfdyqE3GTlaLriidd
DE4Fv3f9Ax+Fm5rgDeb/a/VS1tOdXNC92qkzfPP/Ej79B4unhi4uvjCkAzff
Ausa9NYXhnR048Y+2X9PpNLFYBWmoIbqse3GHTw8MV7cb2YKU2FJBYVKGoyt
8SpSg3X8IueTBqOb7CInxxBbfbvRT0xyv4uObrrfheNFUg3G1ryju5aVGlsH
D5ILeu8ZKbXtCEbrJX+X+AmJmsLkd7fpzNjWTzobjK26ua8/DOzPhN+cKi6h
M4dztl00G1sLWCq2Zmg2tu6JTor62fWK49bNbVLT/aTaakWmgvVUhXYmeIP5
/9ofZxU6wdvIGdya8Gkpm7Ys3YceTHqPZSfuZmFIexT3n7w456+K7Kwcq8Kk
7cZgYtJe+XKL/R7FWNJFkMLU/i2nJXHamdmOxFYdBmrSxdgZlzoMdNFNK10s
mMK0+9iq7UaQmKShStODJxMa4UVi62RC46oyYqu7mf1b9CA5zW0rlk+yhqVG
63nGki76KUz+/9JdY9s96SwSW8dqvERuubGExn56cLY2Y2sZddOD24ytu6GR
Pdh5WmXcqsthfv6/fYOTV/HgotmzLUx9DM7/748mKhgP11ubbtCocrL84MJQ
fFJU242NLgwFSdHza+AMLgzFqzBpu3E8u3G1E9vvUQwmXSyVwlRSC+vvKh5b
B5MuBlOYvKBP3j1BOp+2SMuw+9iq7Yaf74q3DPoEHU+7kSEeWzU7pWTkzYit
uompn72m/69PVNgWrQdbOD3Y0yRA325EaiboStZ2TzqLx1Z9groDr4N5+CBl
UZMA/f8b9LrnLzi2FlvLWDy2Zmgttu6GdsD6I9Mq49btllPQFXDXak0GF13d
qz7Bq0lowfz//ugEb+o5RIvT1YeMmslL0RXw+350wTIpqlucNrcwpE/fgudD
6Qr42Quvaq7vWBUmbTeOYTeuJngPbjgKOnvuO9R9NNsqVdTUltvJ2Nq/NGMp
TF5waVZKYdp9bNV2w10azQgaTA+OJDTCm4ytVY6KyIitWili7DgtzW1rJOnX
TlOYKp7Z0U+6mGzAdSXLXdbNnWswGVuD7cPuf+pyyWAKUz+hMWjAF/nkTcXW
AhpJD24qtu7JZANeeNw6uEi0FcHklWUqWFfn607wbqVm8lJ0abVYydy+dm6A
m59cGPLD4cMnk6LVzIUh1/OpuN9kpRsgWBjSqhdjYUvbjYzduO6vzTiYIOnn
F6SlDyI9iqCu7LIpTIXVWn8PGGOrJl1oIxBJitZehL5lwYpSu4+t2m6458JS
UUrTlvLajdRfJOMtFc8uNN4AmrYUObprTMZ3onHWGFv9vRGJs9q01k36zbjo
1dODPU1bcl+7pWaCbnGqOGzJ6FAZ04M1JcO18P6/I8+LpgRrUFh2wbGR2Fqm
LdUUprrVGtuJralfY8Yz4n6+QGzV5MZIZZhi49bIBuqt0K2RvpWITwVr5Ypa
E7zHNsl8s2q9uMHP0MIks56c4l/x4/PmLAy5v7nWoZy6tr74JLOenOJfZy+8
GnmLthtJ5xV2y6xJz2y3zFor7VDr78U3HOmanX9Ol0phKikoO1Bl2dceW7Wk
j3/FayZrhq1/LZ7CtPvYOthuxJ/TIKHR/qm6ZdakhMau3UgaBbir497SfmwN
Ehrt/4obubtLlpSYZL9kGlv9K37JNLetVtJvxkXXFKbyBXz69Jn1t1C8ZoLG
tYqxNam4fdAHjsdWLVdijGV6Rraflll25N5CbO1mxZMuuntOP/2VnyS1G62l
BzcSW1Mv+v0nL6YeAOF+vkxs7b7M+KlJxcatfp5zuxswb35y8upgK4Ds5zyr
TPDqWkD19IySFi8bkkpvlUY2YOrNcLAtueYtDPmp4PKJSQU2YOrC0MG25Jp3
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
bL+Z1Y7x4kFfLzrpGYHI+vt8xNYxu4+tg8eLxJdZB2dRtOd55rmrwVsGa9Jq
z7PfzG4rtupoyOfeDy6zepoi0iWraxuedEjWgurGVr3oXV3ZjAPZN6pubO0n
XWwrPXiOirFVN0v6i67HvvfbjX7SxUZTmOrG1v5Fn5ym6G9xGkth6pSJrRlm
xlatP9Nmpei61qt7GVlbh+P6cv77WbD2XeHabnW5304XhlyEmgwu69W91KTo
h0+/sNRfW0AwInBfoy6zDn5FrselawSWZlbX0RZMiA0i10rbE7ZrbP19PmJr
3O5jqzYUt9931lIpIkho1AHC2PpyULM9qCs++JZtxVbXT/af9sSjl7THO5bm
p7kHbqQWWWYtqW5s1YvuvkNdqZk8E3zrKsbWd97/myZduJHj5tKDs9WNrfpQ
uItuSQ8Oki60GVlktF5MxdjaX77UFKbBZyRYvnRv0RSmwUJbZWJrhuzYqtNc
zVaKrm7OmbBjtINReAvzVgRp2IvUvnMPaby87f7owpCedhpZqtCswqVyh3Sp
YotJ0Trxrt9nZJlVhwA+UsSbWV1Hu/jytUU+uXYwSM8YtEY2MrHVYvexVYcA
/h6LD0x0mOwH75HaC0HShe+ER5rZzcVWHQJY0vyCRe12DpKrGFv1omtPoM0j
rRdXMbbquM/fvRtKD56jbmzVhDFLuxFMr+ngff7HLqxibNWLrieJR54RTRjT
1imy06pAbM2QHVt9jFuwgdqfsWpC2fReHVtbx81PpmEv0o+KVHPaMV0YOtim
gjUVfP7Cmca47SZFa6U+S4zTNQJjM6vraC5GzP/M2g8kPSNCuxmLLJ4SWy2O
IbZqevzBsMyqCY3+Foof5KFJF8ZmdluxVcdfvtcdT/PT1dLuNbbMWljF2KoX
vXvtPj3Yqxtbdd6me20rPXiOirFVq8EY2w1NuvDPyBZTmOrGVr3oxmdEM5G6
12SFwwKxNcNYbL0FK7BckdqfcZ/45mvha6+CG74WvvYquOFr4Zuvha+9Cm74
Wvjaq+CGr8XyzQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAABAeQ89cfnCi/+b9JZ7f/CbK6+9u9LnwZhrb//1nu//Kuktl6/8
5f6TF1f6PAAAHCFiKwAAmO+lq29/6ksnP3PnY++8/zfjW07/+o+H2//781//
2Y0PPlr1s0F99PE//u0/n3bf/CNP/974lus3Pvzs3U+4t5y/9Pqqnw0AgCNB
bAUAAPPd+OCjrkfhXnd+95zlLa+/df2Wrz7SveU7P/7t2p8Q3n89+VL3tX/q
SyeNiUn3fP9X3Vv+5Y5H33r3xtqfEACA3SO2AgCA+f7j4ee6HkX3OvnUy/Gf
/+jjf3zxWz/Xt7AwVEaXwuS/dktiUpfC5F//9p9Pu8tX5tMCALBLxFYAADDf
2Quvao/CknRx4tFLwVs+c+djLAytTVOY/Ou+H12IvOXP1973KUz+9V9PvlTs
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
4tcpppNPvaybEMcWT/NSmLzdx1bXMPp2Y8HNRJrCVGwadluxVe//umcN6Ey+
i79bSWhclaYHl5mG3UpC46qC2OpabP+duCsy+BYdrd/9vfOWpAvXOOh0iqUe
QlB7tvHYWkaB2KopTO4/3Fftb4+jfUaO04bqa21iYchOW9TWNhzNpHXhjEUP
iql1YOgaC0O6m7Ub3BmPja5CexTZn22NShc6cMvudWgKxKobFjLoiL5Lmjp7
4VX/J/2ki5kpTCUVKCiUrR9bJ6tI6WilS4rWmu2DU6xzUpi83cdWbTcWOd4u
SGEq9oxsLraul9BopylMrqG+uZGExlXVqgu9iYTG9QzGVl2lctcleEswWu9G
9PGkC50Uvf2+s+4fnTwrpJ8e3HJsLaNMbNUUpi49OJhJm/U7YDu2dfZc4wtD
dto53OX8Z3eu6CG6/l6F3kKpmylmWnZhKNjN6v82XX9vJw1bexS33nVqTt7O
spUu9G9L2gUfCPJP1ivmmUp3yWlBIV30CZIuZqYwFbZ2QaFsg7E1UkVq7Bby
NdsPvWnMBVOYdh9b9Umff7xdkMI0+1Mn2FZsXSmh0U4HlfrENZ7QuKo/X3u/
Vvnu9hMaVzUYW3WKpl9vTUfrfuIlknQRTIr6iRdtN4L+p3v74MRLs7G1gDKx
VSdetDerF/3YnpHj5HoRC/ZPCgjamaYWhuy0f7LjvYHazlgqxheg09RVgov2
4eeM/SO7WXX9vZ3EBh9c+mP/DME2hOy/Z9lJ0SCxoYUpVh37BzWT9RbS+TH3
fTabXjVG198LT7GOicRWnR/TrcG6mTFIrxqcYl02hekYYqu2G3PWnvopTIVt
K7ZWPLorGPsHFz3yxO2Y1oOtPj92VEkXkdiqY393dfwzMjZavzmedKFj/+A8
Av3btP+pe9aCsX+DsbWAMrFV58eChlGXL4/qGTlO7gazFBVsjebgNbUwZBds
Ya79cVa07Bh8Jq1ZV6t9C/Lbsye947tZI2PwKhYfO2ill+xKF1qzbqlJUZ1t
qz6/HeyL6fco+vvatA/QZumhQVqis8r4IjAZW3XvWBcCdIqmv1Lv/obb7zsb
dA4XT2HafWzVdiN7X3aw57RWFty2Ymuto7viDXKwDbCdhMZVaT3YFvaOHUnS
xWRs1X0x7hrd/OSR1oPTmP2kC52iuef7v+p/jH7She5Z6++LaS22llEgtk7W
TNCt/UfyjBwnfcQ2F4YaXBiy0zC0+zPlF9yfMl9k/r+k+QtDZ567Ghm4dcb2
p5S3Ul79/EoXWrNuwbrK7ez91ISKsc0UWnrI9TqaGuIlqbj+HrDE1mBEf+mV
NyerWFx7+69jtR8XTGHafWzVdiPvzAJNqDj3u9fmfeR8m4utSyU02mkK09iC
o24DbCShcVXtDPGOLenCEluD7cOTKUzBiN5dXN2+NNi3DJIu3NM6mR7cTmwt
Y6X04CC26kza2KSoTgodwzNynLQl3GKK5pxRw2Pn/lBrc1AwEj+G2nGL1G6d
Lz7/X9ichSHNaI2XH+zXbi1v1ZqTcypdaM26ZSdFG6mLHpQVGvsxTbrQ1+ZG
4jfrrb8HjLFVh4r+Fa8Hq7WX/XsXT2HafWy1HC8yRme5u3qwFW0rts5MaHR/
85zzlCMLjj8886L//KkJjS9dfbvWjJz7NlJbuaa2P8xMunD3Q63YmnHRjbPc
un1Yo0MkhUmTLvxbfD3YQRnnKTcSW92jmnTRu2ckqd1YNT1YY6t/DaYwdYKC
QrUSk1zjmVobLeMZcT+ferKw+1SpmSQPn34haUU4o5lNooPBjZYvCxaG7JG9
a7uqTPAGW5j3dKR1XPWioBqwGqmZrEO2YG9vRNJu1qAoaJWDa1ctDRosDAW1
7yIW2bAQofUhqwzZImWF+jTponttdJfKzU+uv0e6o+tJiq26jaJ7TfZ5dPE0
b8Jk0u5j6+TxImMiFZhr2VZszU5o7KowJR09aU9hmjzpbEzXzNaNrUkXvbXS
oNlJF116cMXYmtRuJKUH6zLKwbZgp1M9xgkTbTcOtnnp6rG161YlXfQuPTip
3Vg1PVhj6+Gf89LxSVFdfq0YW5MuejfRmhFbk6aIuxSmpLptXbuRtFkgo5m1
0yWkTR/tpxO8XzvxS8tbtBtWfoJX+947O9I6ru6Budl971UFC0PGT5Xa99b1
9/KLpwWOzQ124xpD1VLFPCP0wOvytaHiZYX6NOmitWNzkwTr74UXf1Njq+5r
O9jqweo822G1FKbdx9aM+fnsMfuqNhdbM+bn/ZjdPoeQmsKUN8/mm9mKsdV+
0ds8Njcj6UKXDyrGVnu7kZoerNuHjeNTnUOwjNm13TjY0oPbia3Gi+7ntexr
3wU26gaJSZYpDi0oVDG22i+6X2vOiK3GzQLuk/h5LWNCo85rGefZMprZJH4J
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
AAAAVPH/AEMv1SI=
    "], {{0, 875.044967588612}, {749.0384922558519, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9926, 143.9926},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{749.0384922558519, 875.044967588612},
  PlotRange->{{0, 749.0384922558519}, {0, 875.044967588612}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[6]=",
 CellID->644725124,ExpressionUUID->"8d910e5f-c5ce-408b-8b64-1db414332256"]
}, Open  ]],

Cell["This is the same as the 6th Catalan number:", "ExampleText",
 CellID->99521618,ExpressionUUID->"6bec463c-f39b-4c92-b0d3-b643ef5f4836"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CatalanNumber", "[", "6", "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[7]:=",
 CellID->386216129,ExpressionUUID->"a38c5448-882a-45e4-b4ee-cecdf1856ed5"],

Cell[BoxData["132"], "Output",
 CellLabel->"Out[7]=",
 CellID->243636594,ExpressionUUID->"75a06abc-6212-4fe3-a54e-245aa250d661"]
}, Open  ]],

Cell["7 elements:", "ExampleText",
 CellID->93217530,ExpressionUUID->"4810567a-becb-418f-8e66-28f9036380c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", "7", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[8]:=",
 CellID->9973158,ExpressionUUID->"0ad40cc5-e5d4-4557-b526-52e4c49ea888"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3duvLVeZKHaUKFJeIkX5D/Jf5DWPeT1RXqfEIc0hQpwgn7RQEBJCNCDL
AmQhLi3Lai6yLMCyuPXG8q3NbtttNqZtjI3Z+AK7N2AbY3yT29jYrIy4skc+
jxqjZtWcVTXnWvv3UwltT9aaq+aYVV+NyzfG+B//4//5H97/X73nPe/5L/9t
+p//8N6P/M/XXPPe//t//e/Tf/xv//m//B//6T//zf/+v/zn/+tv/tPfXPM/
/cf/Or34P/x373nPL/6b97zn//33CQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANPdcvfF
zSf+sTvu+dd/O/TpAAAAAJw1j//6j+/95LncA/P+z9z2++dfPfRJAQAAAJwd
r7z2xoc/f1fufumOj/39P7/5l7cPfWoAAAAAZ8T133wwd7x85daH879vuu0X
hz41AAAAgLPgjgu/KbpcvnTLQ/mVhy4+d+gTBAAAADjdLj/3yvs+9cNi2tHr
b7x1zfV3dy9+8Lo7Xnj59UOfJgAAAMBp9eZf3v7Y3/9zdendp3/3Ul6Y99pv
/Pitt/96wPMEAAAAOL1uuu0XA9tPn7v/qfz/fv/eJw9yhgAAAACn2kMXn8sd
LF+65aHqz1z7jR93P/DeT5578vKLK5/hbi5e+tOhTwGAlbz19l9Py+MJAICr
00uv/vmD193R9a5cc/3dr73+ZvXHXnj59TE/djxue+Dp933qh5eeefnQJwLA
Gm667RfWKwMA4Jhdd9OFkcktDz7+7NZUmSNx6ZmXu7Vr/vYL//T6G28d+nQA
WFZO5vy7f7jfemUAAByhqQu8fPUHPx9YLuZIvP7GWx/54o/yeX7l1ocPfUYA
LCgmc6bjlrsvHvqMAADgXYpNjsb8yutvvPXRL5/PWyY9+8JrS5/kDmI3UXf8
y6O/O/RJAbCUnMyZUzqtAwYAwPF4/Y23rrn+7q6yOmni/OXnXnnfp37Y/eLH
b7j32JK941SpfHzg2tuff/HfD31qe6kuvHP8q/EMO+3nP8mbf3k7Hf3Xr6pC
OO18Wcfptgee7of9U7Fe2Q7O5IcCqBLxgLPkS7c8lGuqDz7+7KTfvevBS/l3
v3XnLxc6wx3E5YL/9gv/dPHSn3Jn0aleGeD79z553U0XihfTx0kfKn0XBzml
/b35l7c/9vf/PPXaO72++oOfp6N48fU33koX6iNP/OEgp8RU13/zwTGzNVnT
pWdejnF+zNZ+p5eIAVw9XnntjWuuv1tCI3A2nH/4cq6j9luFY6SWSE72fvSp
52c/wx289fZf45bZT//upZN3j43ees+vDn2Ou8iTxdJnia+nj9PNBbv83CuH
Ord93HTbL7r8q5de/fOhz2VxOTWr6HG64Ts/Sy9+6LN3Xg2FcNrd86//FmML
xyBOjM25jl1s6Y70sDv0Oc5JxACuHl1b46wmNAJXlWdfeC0127va6Ue++KPd
tgpKwfDDn7+re5P0j1dee2P285zq+/c+mWvd5+5/Kr/+uZt/cnpXBuhGPLvz
j5trpw+S1/D52N//c3V6yzF75Ik/5C+rn95zxsTUrDjj718e/d3VUwinXQyb
dlg7HnHVrwuPPdO9+Nbbf01R8cjXK9uBiAFcPWK+/dlLaASuKqlq+vEb7u23
6HcQOwE+d/NPZjzJHTx5+cV8MkXV9JXX3oidRaerI/3G7z0SVzb46JfPv/mX
t9NHyGv4dMdNt/3i0Gc6QfpGPvTZO+P5xx6zsyenZsVVr59/8d8/cO3t8fUi
x4njEVv03ZFuzEOfFCcXHnumlcwZe8zSd3d6p6BmIgZw9fj986/mGN4d9z3y
20OfFMCOvnXnL2esv91y98VjqA3GHonqrJZHn3o+n+f133zwICe5gzjiGRsa
cQ2ffJyilQGKXUvO9syOmJqVj++ef+Lv/uH+4sU9e0RZTpzVkg87rB1W7JGo
JnN2s8ZOYx91X7fql4gBXA26dQKLiHeWEhqBq8rjv/7jvFkrqVr4iRvvy43o
Q9UGv/Dtn+YQ/dDF56o/c/Ptj+efuePCb/o/kKroR7VfUtG+qPa63PCdn+X0
ng999s7xc8Hue+S3hxpNiCvzpDLPn/Ga6+8eP7MjfYOtL/ogUm0hfUH9uWBx
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
WiXVToMDihnvFx57Zrc3SdfzpO3MZtSvauZAt/+D48nLL45Z72hnuYI0cux4
YDRhkuoDfQf5Th8Zo7rRhGKtgNaDY6rYITxX9uAYuRCKkowPjs/d/JOd33/p
iJFjZjES1MXMfkkeKmLkm2XPQugiRvEmc1U1d4gYXbJBKoQi0SLe7F2y+kBu
avcmeey4+iYLRYzuI8+y6tdI60SMbtRs3hnunX4Fqdj/ZbmI0V3n45sAsYLU
jZqlE8sP3GrE6I5u6DDFh/ihlosY3XVeNAFaEaMbNesXQrcISforY27bFSJG
vs6Lx2tMT+paE7EdND5ixCZV9yZF+vdCEaP/ZBxY/LlVx+jeZGR+2joRo/9k
LFIEu1ZP7MPchNZEtTFVFMIKEWNTq0vv2WlQ7PiQym1qSe4gRozWdT6y02Bq
xFitjtEd5+5/6mSw06BVx6iK3bZdxsKY2DtvxKhe5/06Rj+X7+vnHs2vFDPm
WhFjtVbJmCdjjBgjN1nud9tOir272Rox4nVe7HO0udJPMpADv1CrZHhS5EHM
ssny1oX7llOkW8coVFzzU03a82tnqcAnZWvstnZuNJDUuoN0SY/fjipd8OnZ
1C/JInlytzNZaM29MdIzMUX+/uv95Mmp1okYqQJcfXSmD9UvyQNGjHTlpOtn
z0JIESM9evpvEivAK0eMVALVPsx4s6draTg3Nb1JtSRXiBipDrPoql99K0SM
dJ2noltol4fYZP67f7i/PyF9uYiR6ifjkznj4zW1oWJCfjVixIz31PzvL5O1
XMRIj9F+HmYrYqRLuloI6Vk2fvxohYiRPlH1nYv0pP6iNyMjRryv+0tYLBcx
4pMxXVTDK3K06hjpTcbnp60TMeKTMXZ/5SN9EXH+Sz5uvedXw83zdSJGPoq6
9P7p30Un26SS3D9iVK/zSRNnJkWMdeoYxc2e/7PaoGjVMapikzkVV4zqK9Qx
8lFc5zFHolPk8sVCqBZvNWKs0yqJR+vJGCPGmDzMTlEI8U22xt7lIkb8IvoL
63URbzgHfp9WSfW0i0lzM04t31MR26f++vDCbiuIKZ35+PTXHohxY4e3Hb73
D6VIAp/663HS3Cy7lswlboKww6+fu/+pGN9mP73dFKMJU39dxFhZHEDZ4ddn
jxhx1CwfU7NNRIyqg0eMeAKxynRsESMulJePVm9wTALPR/r18w9fFjH69okY
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
zz+RIkm1ox7glEoxLUU2CY3A2fClWx7aMznkrgcv5Xf41p2/nP0Md/DCy6/n
inde+yWuCXNKVwY4d/9T3fl/7uaf5BfTB0kfp3s9fRcHPL3dpPPPGUqPPPGH
Q5/O4nJqVuxxSpdoulCvnkI47XLYtMPa8ahG+P4Gf2fbk5df7DJaP/z5u051
ViRA1o16XG0JjcBZdf7hy7MskHL9Nx/M7/PoU8/PeIY7KDbLjqsKx821b7n7
4gFPcgdxslg60mfpXr/1nl/lF6vL9Ry5vGtJOj543R1ne2bHg48/W+zt3r1+
w3d+ll/80GfvPNuFcNrd86//lr8sO6wdiSLLMU6JjREmfXcHPMmlpUZKzmhN
R3ouH/qMAGYQWxlHvgErwLBnX3gtNdi7gFbsczRV7p0+hvZj7JHoj1DHVQIO
3lk0XsyR6I73feqHl555+eKlP8VumW7Fm1O0oEqxa0k6rv3Gj09jetIYMTUr
9zilF//l0d8VhXDdTRcOfbLUXX7ulRw2iyw7Dij2YRbJnDHL7jT2UY8XM1pP
b1YkQBQz7a+ehEbgTIqV0q4tv+cbxq6AAzaiH33q+Xwa1WbsK6+9sXNn0QFX
j/nKrQ/HvpfuHx/54o/yZ4mbbp+WBVXiKg2xVXvrPb8a/ybpCz22HqfqRVWk
ZuWr9BM33pc/e/wSj216SyrkYvWhTusOOi1LLU06z9ffeCuuPZ6/rHR7LneG
uzkt5T+LmMz51R/8vP8DMw43rKn6JabbsPp4jalZOZKkfxxbj5MEP2C8uNpk
rCOd9oTGqyoSXlUf9rRr1TGYS0zMnmuYLCaf9Le0XsHI3pWtvTRVFy/96YPX
3XGQ/Z7ue+S3sX3RT5nYvLN4SBwAzdNbjtm13/hx7pF48vKL8T9TaY98k/QN
Vttch3LpmZc/cO3t/S7N755/It4dcf/3XLV4+ncv5SV9jm16S4oY/Zulm/rR
DyDp60uFUN1A7ah0ESPdUCN/Pl1p+ftKrf4YRdNNuuipTpI+0dWTpz2yd2Vr
L82xSSHi4zfcW1SEulW/+mtRdouZb66kQcZMrf6i3wfUihgAfcWOq6lmFf8z
xb1Dn+COUo29S4E+9ImsoRtstcLhqdCqYzCXhRYnjEvCTmpEzyW1EGOPxMBP
fuvOX07qLMp9O+sv4RvbF3mGUWwJbq4sgBxnKh1/bI9dEF2+R5ykk0q7mnHR
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
iNf5Zq2O0BUiRrGMZF6MIo6zb67kp8VUjU3INilWchhfkpM+VDVitJ6Ms6hG
jHXqGNUn46JWqGO06tKzaEWMFeoY1br0mHfY7DpjboVWyZjrfLPr1matiLFC
q2Trdd4dXeZ20UfdX4JjjK0lmX/y/afQmBI49Dnu4qr9XIc+wV34sk6Rq/bL
Oquf69AnuAtf1ily1X5ZZ/VzHfoEd+HLOkWu2i/rrH6uQ5/gLnxZp8iYLwsA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlnPh
sWfeevuvhz4LAAAAgDPr8V//8b2fPPfd808c+kQAAAAAzqbXXn/zw5+/a/OJ
f3zvJ889efnFQ58OAAAAwBl0/Tcf3HziH7vjmuvvfu31Nw99RgAAAABnyl0P
XsrdL93xpVseOvRJAQAAAJwdl5975X2f+mHX8ZL/kY57/vXf+j/81tt/feW1
N9Y/yR289OqfD30KAKxH2Ae4epyiVglA9uZf3v7ol893XS7v/8xtl555Of7n
759/tfj5b935y7/7h/uPf7+kR574wwevu+OFl18/9IkAsIa7Hrz0t1/4p9ff
eOvQJwLAGk5LqwQg+uoPfp6TXv7l0d+lVy4983LOhPnY3//zm395O//wI0/8
oXs9RbzDnfJ2L7z8+gevuyOdp7AMcDXITy5TaAGuBqelVQIQPfj4s7n75Ybv
/Cy/fseF3+TXb7rtF92Lr7z2xoc+e2f34ns/ee7xX//xQGe93bXf+HE+f5tr
A5xtMZkzHfc98ttDnxEACzpFrRKA7IWXX//Atbd3sesjX/xRkbkdt0Z65Ik/
pFc+d/NP4lK9H/78Xce5X9K5+5+K52lzbYCz7evnHo1h//2fue35F//90CcF
wFJOS6sEIHvr7b/+3T/cn/soLj3zcvEDr7z2Ropm3Q986LN33nL3xWKzpHRc
/80HD3LyA57+3Uvp4xTnaXNtgLMqJnPm4+M33GsKKsCZdNsDT5+KVglAFHtU
zt3/VPVnHv/1H/u9GZ+48b6bbvtF/s+7Hry08pkPeP2Nt/72C//UndgHrr09
brF9qlcGSO2L6hTXG7/3yMVLf1r/fOaSvpR+199ZlWoL42+W51/898/d/BPt
x1MhhZ3rbrpgL4ZDyat+dZ3t37/3yRz2rQwAcPbE9SqPuVXCgEefej4vc8GR
0yqZS+xaSW2HgZ+89Z5fxe6XD1x7e/oW0lfw8RvuHdgv6VBu/N4j+VQffPzZ
9EoMy6d0ZYBU4N1ksW4uWJY+Tpd1eUqbft34xUe/fD4u9XxWdalZqcIwpscp
31/aj6dCF3aGAynLyat+pVss3WgnYQqtlQEAzpi46teRt0poyWv4PHTxuUOf
C1tolczltdffzNOLPnjdHS+9+ueBH46TlTZXNktKnn3htRTlNrX9kg4lnVs+
z6/+4Ofdi+nE0unlsJxO+7AnOVUs/7i5dnri5PL/3M0/OexJ7iCOX+Qv66yK
qVljtspNIa5YgomjdeGxZ7YmE7KcmPGS/t29GKfQnt4+agD6+lu4nhxlq4QB
eQ2f2LThOGmVzOUL3/5pLskxfY95wd6ipdzlYGzevV/SoeREkX7s/f3zr+aw
fOpWBvju+SdiDtK13/jxyTvdMp+48b74+h0XfnPoM52g2LUkJyydVTE1Kx3p
Pwd+uJj696HP3qn9eLTiYuabxoJaLCeu+lXkIMX7yMoAAGdDXPXrmFslDIj7
7abj01974HQ1za4qWiVziUujjA9QKeJdc/3d/bH7r9z68DE0omP+4fs+9cPL
z71S/MA9//pvpzEsP3n5xf46POfufyr2RuZPfYqafsWuJTmP9NDntYiYI5GP
9GL1h2N+Wj5OY47T1aDIDxyf48Qs0s2Snkp5EK2fzBnXOrvtgacPcpIAzCUO
tva3cD05mlYJA2IOfD6+e/6JQ58XFVolc4nZIFOT9KpJYin6xTrwoRLJYo9E
KxskZv6cihyqomxzF9N7P3kud8t8+msP5C/0tCyo8tDF5/IXcd1NF/JnSY3Z
/fvAUzvrUIWQZ0BEMUcitc3jMtHVmyVepalwDp7jlB6U1Zvl/MOX+33g6es7
LdNwUnmO7ydpFULMT4t7Yg7nOC0nfaLTlQu3py/d8lAu82oyZ8wVPC191Cks
VNcru/DYM9U+6uod13qTA6pGDICqVh1jeAvXk6NplVSl2qmxgGINn/iFnuqN
Rc6qY2uVnFIpdi2xIkrM0zhIItmjTz0/pl9u0uo3xyD25Kf2RTHfYXNlfYO4
+s3Xzz166LPeIhV73rWkG79ILYh8/rfcfXGfN++yTQ5SCN2nKFpD6V5Id0Ss
LaRj4GaJmVo33/540X7sZ3YtrYsY/Zul+xT9e61LOUifYsVz3EUXMdL9NeaH
0yWaLtR+IcS4181/iTPTWzlOi0qfKJ1SOrH1//T64s0ycMvH9bKqA6ZHpYsY
6YSLzpbuU6RoUESMLpG73wmT7s2DRIyWVsQA6BuuY2yuZIO3fv3grZKWLv37
INWD4xFz4FNRxEbBNdffnVpqhz5B/n/H1io5veKuQOcfvjzjO8ex4JUTyfJi
2psRc9PiXLZuQZWjVZ3NGme/pg+SGpLd6zd852f59SPPuoy7luTxi/jizhuX
xB6qlVdWz/0qxaBMvC/ywEe3A1T/ZqmuVhQTbtfPccoRI94scfwijubkm+vI
tyGIEWNMnkBewycWQhxlS+/Wdc6kF4vdGRb8GD05YlwNdZh4s2y9L2IsPVR6
0kg5YsT1yuIc22rEyDtAdXKEOZKsyFbEAOjbWscYU4E/YKukJad/t1Kgrwax
FZMfxzEx/gvf/ulhz5DsCFslp9QjT/whX+FfuuWhed+8yAxccxA2Jv+PmVsU
5ysd7YyJgRXd8zh73BEsbrVzbFmXUdy1JBZ+OuHcB/7hz9+1Q/sxZpts1s1x
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
l/BNl0R1Z5BU1yo2bO2OWPVdKGK0qgGtPZuqhdD6xqtL+KZvKhfCchGjVT3I
rZ54d6TIMCliHKqO0R8V7Y7WHNtJdYwDRoxiccLuSI3E6uM1vZjbj/GEq100
qSRjQyautjpjxKiu+bncqMeAeesY1eu8tY1RVStixDyK/KUM1NZmrGOki7B6
nVdzJFp1jFmecfPWMarXeasPpL8x8aY9z6u1oVIr9s7YKhnzZIwRoxr2Z/my
5q1jtCJGfDLGQuh33Wzaqwrv3Cqp/kBMslpnavl4MeZP+sWi//PgUz+iOAl0
6u/G5X127v/cUz/bsEuJj8uzT33PGNx26/9cSOzbn/q7cWPlJSaL7SNOXZz6
u2tGjJh1OaYkRYzCQhGjP5DXjQQVA9bDJXnaI0ac59sd9z3yWxGjb6GIkVpA
sfC79kUrYsTU4u7osp1Pe8SIW+VuruxTdsCIETNzuqPLNpkUMQ5Yx4jXeXfM
OL30gBGj6D/pFqOImTnd0eVIxHH27uiyTfrbzKWSjFmR3dGNHc8bMarX+dS3
ncWMEaN1nc9ynnEtka2xd96IUb3O9/owu5oxYrSu89av9zdHG5gxF7vmtsbe
eSPGmCdjjhhT/9wkK0SMeJ13R7fyTFyCqTviGj6FnVsl+ZX3n0JjvoVDn+Mu
rtrPdegT3IUv6xS5ar+ss/q5Dn2Cu/BlnSJX7Zd1Vj/XoU9wF76sU+Sq/bLO
6uc69Anuwpd1ioz5sgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAD4f9i799dLjjJx/P/pgQ+CLCyCCIsggsiuLhJUQlBXQlh1CUENwduOIbeN
Y5LNxtHEGHcck6jjqEmMMTdiTEx8f2unmPo+U3053ef07cy8Xpwf4tv3nHef
Pt1PP1X1VBUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAnKj33v/7LXc+8crrb699IAAAwIFSVn/r
1y+8+Mpbax8IAJ3uvPd/d5/8z3/598dS0F77WAAAgEN8+/yzKav/+Jd/+O7f
3l/7WABo8fSzf0yBOr++8cAv1j4cAABgtOeuvPr//vlczuq/du6ZtQ8HgNob
b73zoc8+UHpgUtC++Os/rX1QAADACG+/895Hbn2oZPXp9eSll9Y+KACu87m7
fhQDdXp9+PMPvvX2u2sfFwAAMNQX736yyur/8Zb7LfMIsB33P/GbEqI/8x//
U/77tm/+eO1DO9y7f3v/3sd/tfZRALCyp5/94+UXXl/7KBjkxVfeeuLnL6x9
FAzy9jvvpQRy7aOg9ujTvyuZ/C13PlHmIqUMf+1DA+D/XHnpjQ986vs5OH/y
jkffe//vXzv3TAndD//kt2sf4IHyp5DIAdzMXnvzr/94y/0f/cIPUmtx7WNh
j5SBfPzLP/zgv9778qt/WftY2C8nWs88//LaB8L/L9076Q7KOXxeg/e7jzxX
svpzjz2/9gEC3OxSZP7Yl87nsPwPn7kv5zzxhymM/+HlN9c+zNGevPRS+VCq
LgFuWqWw847vPL32sbDHXfddjONBax8OfS5cfDF/WR/67ANvvPXO2ofD/0l3
zSduf6Qk8FdeeiP/sITB//fP5371+9fWPkyAm9pXvvez0jH+38/8vvz88guv
l8KYj3/5h6eVCOURz/K5Pv3Vx0/r+AGYxLnHno8rIaiK3LJnnn85fll3P3Rp
7SOi0yuvvx0Trc/d9aO1j4j/840HflG+lAcvXC4/j9/XP932XwoCAdZSxi9a
Bwfj4jB33XdxlSM8zC13PlGtP/bdR55b+6AAWNTlF14vCyCoity4N95658Of
fzB+Wem7u3T5z2sfFy3ee//vn/7q41WiZUGY1cU+zOZCjqU4PL3+7Z6nVjlC
gJvcy6/+JeWi/f3ht379QgnXrfN8X3vzr1srPY0jnmV/7ZTIPXfl1bUP7XDp
23nxlbeaP7/y0hsnXd6T62NvEulmSa+1jwJuQK2r7Kaw+dEv/KB0vJSuGFWR
21Q2ZEzfVBmstyfjNn37/LNxh538Hx/41Pdvqmf61qRsvCS9XTdOXObx0ad/
t/xBTqg17G+wVQJQpPzzX/79sb1zQuOYVPqPZli75c4nbv36hfmPd6g44pk+
4Muv/qXkBh+59aHTrbr8yvd+lpdTiz9MH+efbvuvbzzwi7WO6kj56rp59qtK
N0t6rX0UcKN5+tk/pqZfc72yao5tXItSVeTWxJrb9FBL32nPUD7runT5z3Fv
nTic10xUWEwp/07fzsVf/6n1d6plHluH9k7Cgxcup/R++60SgOjuhy6V9KZ/
XfT4qK3CWqk22ch+SdWIZy41vwGqLp/4+Qv5+O+893/jz9PH6SlP2r484nmT
jJqVm+Xm6XGCBZRVvz5x+yOxsqWEzfT6yvd+ln8YWyjWotyO5oaMZ2FJ3u3k
GCRvvf1uGZhLt15OtOLtViUqLCOWf/cPzMVlHquweSpKxNh4qwQguvjrP8Xx
i72/f8/DvyyBvbQfU/pa3qQst76u27/103KcFy6+WH6e8oHy8/NPXVnxCA+Q
0psyupReT156Kf/80ad/FydbnVzVZRzx/NiXzp9uedIQsTQr/Udr6SwwVtzg
Izb94qB8DC+vvfnXUqX/kVsfMr1lC9K309yQ8axjSxdWd9s3f9yaaN3xnadb
f84CYo4xpFMlZfLlyzqtZR7Pro8YG2+VABRxYlEZv+jXnLKUEteUvpYAmLPc
dUtPzz91pRzM1849E/+vdGAf//IPS1g+oc2145mPX9mLr7yVPkj8+WlNb4lD
MLuOhaBvGHmyWPywtiGAScTRgdL0iy33FGeqDs84vUWx+hbEoZNqp6r4pFs9
x+Ds6tSPrkQrPuliTxpzi2c+3S8Dz3zcsSJFxbkPckIxYmy5VQIQxcV1S0HF
XtWyvXEQpLxKpffy9uZpf3j5zfILJzRPudm+2F0tWyrti/g6lekt1fhFecXN
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
efo46UOdUHlSJaXWN8+icLk0K71u5qZfPgkf/vyDKXda+1jYIy9mniJMFXY2
KK9aVjX9Utj8yK0Ppcdc1Ud98dd/Sh9KVeTW5Cd1lWOIGNv0jQd+UTZuKE4o
YtyQYvl3rm955vmXq7qXf7vnqbPr62QevHB57QM/UGvEANiylHnmfYLSq9mu
r+Q8Nv/yxtuPz115tXT1f+Y//if/MGVuZSAgJXKnWHVZKnliX1n6IOnj5J9/
7dwz6x7hAV57868lWzj32PNrH8680h336a8+nj9s+o+bs+mXPnVq9pbhubUP
hz1SVMlf1j/d9l89XfSre+LnL7Q+y8rYQXrYlTsuhs3WshlWkR4BzRxDxNim
2K6P5UmnEjFuSDHHiKONua+s+l7KVqE5bF556Y1Vj/0QrREDYOPuuu9iicn3
Pv6rvb//q9+/Fns2ttl+TKl16Sn60GcfiHNbUpJQjv/Wr19Y8SAPkHcVLK+y
uXbeVfCEypMqpTZpdxMsChdLs3Y36zYE9zz8y3gShkQe1lItZn77t3669hG1
e/nVv/zDZ+4rx/mxL53PTYzzT12Jx1+m0Kb4H8OO6S1bEBOMmGOIGBv0xlvv
lD7MPKqVy5NOJWLcqGKOEefmlIV5qyzrDy+/WcrgT66OuitiAGxZHL8YPq5U
Opw3236Ms6Waq23EgYATqrqs2hf5deHiiw//5LfVD//xlvtPaEGVlEtXx38D
j5pV2cLN0OPUlGfMxZOwt/qOtcT6tPJqXVBlXbFGIvZRxzm28aEQlzWr2o+s
Jc+xrb6XlGOIGNsU+zDLqNapRIwbVcwxmkW2KY1M8bBZaRzTyJNY5jHrihhr
HxdAnzh+MTb5jCvcPnfl1eYvXPz1n9ZqRO9dMTju0HcqiVw65k/e8Wg55lLh
8w+fua+0L9KTqDx5T2VBlXTyyzF/9As/KF/cF+9+cu1DO0rrKrvVJL44Tbv1
ZtnaoPwrr7/derOk9tHwUbM49eNDn32gdCqu2O2Wvqzho2ZdJyFFvE0NvaWD
mWSp57h2Vsl1U8xJmfzxbz6h2K8eI0mZdpqOuVx46dYrW/vFsLm16S3pjkjX
VfPnqZHVOoV2axFjrDh0Ur7E9O2UULmRiEFy/xO/ab3jyl228YhxQxqyUEBr
xn627WUeu3KMroixtVZJl0me0Vv7skaZKlE5Faf+YU89xxhl1ohRxi8OKMBu
LvMV/9/X3vxrypRWKT298tIbQ8op48BoKVbfsrsfulQeNPc+/qtmKUX6OOmz
x1Lt7ddpp9NeHpo5W8iraOZX635PJ+HCxRd3V8uTqp/H3bjS/5t/Lb/ymnhR
Xpq4+SYrSu3T5s2SQ8HwUbM4bJo+Y5xYt2LEGLg5Wt5erXkScn3aptYSSZ/o
+FZPrE/77iPPXX7h9dJx8YnbH9lOj1OcW3rLnU+0Dow+eOFys5Qir80be282
FTbTHdFcryzPsW32UW8wYowSJ4ulB0HMMTYVMTi7GjZjKEiJVhnVOomIcaOq
coxR/zZO3t9UHXVXjtETMTbVKumSnjXHl0Cnk9DV43QSzj32fG68rH0gS8gN
t03lGKOceo4xyqwRI45fpNb9Ae8Q249VNliGTRcuPY1LiqWb+g8vv9nzy3ED
7rKgyjbFhkMZpY1zwdLr4Z/89uz6Fdi2X94T+1vyTZ2+wdS8jY2jtY9xtJQG
5FHaagQqNhzKasllucLqZin1adtZWa5EjOpmKTf7kL79GHZKQhU3xFwrYgzc
HK3Mr48nodSnbWeHtRIxjtnlJ9anlcXMY5/MRnqcYjFnemLmYs6qj7os+fXt
88/GsJmeAmdbrYosEaN6vJZVvzYeMUapxkTy0EnMMTYSMThrJFq5mzdPbynf
y5Yjxo2qNccYJW5gsZ066tYcY2/E2EirpEt5vB5Ty1dOwokWBJaTcHKrDx2g
1KdtJ8cY5dRzjLHmixhxYOKYFD22oHMPwNn1D9zUFF2y9HTstnqxgnGz3Xpx
1kY1WaxcIfFZEwcCthyWy64lVXv2pEfNYg/YLszCjmv4xGdNayp7drXapLzJ
FrbKjV9KeqXvLv88dgPuDctx2DSehFixsGLEaI6aVapGfYkYsT5tCzusxYhx
cKsnfinVNxvXzd5CSWpVVVV+XrrLYtiMy8XEsBnz+bjN3FqqVb/K4yzOsd1y
xBilpwes5BgbiRicdQ8clB6AjUeMG1JXjjFWXMV3CxtTtuYYQyLGRlolrWL5
966tBHqIuI9ts8dp+6pS1RNafegwsT5tCznGWCedY4w1X8RI33spMzjyneNb
5YqFqqW25DeV66N214949quqLrfZrRcni1VrAuQqqWajLw4EbKrqsojZQhm/
KE531Kza52h3tRI7NvqapVlx3lzucWouTTxwjsxM4m0e40ZzKlzPNgT99Wnx
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
5xhxCm15pW9qgYgRr/NyEp678urRH7TPAhEjXue7a8n82I7cauZCOZML5BjN
xe3TFT72bScxYcTous7nOOy9JowYXbn0qPdsLvp9QMnHtBGj9Tof+7aTmDBi
dD0Zu/55cwPWb59/NnbBlSth7PKky0SMaobO7rj5QUMsEDHidZ5feX5Qsyjo
c3f9qLlC/u6g5UnLmSw/+eAJGvJJ1z7GQ9y0n2vtAzyEL+uE3LRf1o36udY+
wEP4sk7ITftl3aifa+0DPIQv64TctF/Wjfq51j7AQ/iyTsiQLwsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADhddz90
6e133lv7KAAAAABuWA9euLz75H9+8e4n1z4QAAAAgBvTlZfe+MCnvr/75H+m
18M/+e3ahwMAAABwo3n3b+9//Ms/zN0v6fXBf733xVfeWvugAAAAAG4od977
v6X7Jb8+cfsj773/97WPCwAAAOAG8eSll0rHyz/d9l/lv++67+Lah3aUS5f/
vPYhrO+5K6+ufQgAACzh8guv21MDYMtee/Ov/3jL/bnL5SO3PvTW2+/ecucT
pRPmmedfXvsAD3Tv47/6wKe+nx5Dax/Ims499rwJZQAAN4OUxqdk/t/ueWrt
AwGgU+lv+X//fC7XS7zx1jsf+uwD+Ycf/vyD6X+ufYyjXX7h9fRxcknPTTsQ
UE7Cx7/8w3f/9v7ahwMAwIxu++aPcwL/38/8fu1jAaDFuceeL+Uu333kufLz
p5/9Y/n5rV+/sOIRHuDtd9776Bd+UI7/5hwISCchTii7897/XfuIAACYy4MX
Lsc9NV5+9S9rHxEA1/nV71/LNRLp9Zn/+J/q/41r86aQvsoRHuYr3/tZtarw
TTgQcPu3flqdhKef/ePaBwUAwPSuvPTGB//1XntqAGzW2++895FbH8oh+h9v
uf+V19+ufiEF7bI/9Qc+9f0U2Fc5zrEuXHyx6nlIr3/4zH2nPhDw1tvvDv/l
/37m9+Wzl0629C2/9uZf5zvCA4z6UKfu3b+9by4YzKE1kqRH2E07BfUU3VSP
g1Pny9qglGCUpL0kfj17apz6l3jqxw/cnL5495MlPl+4+GLr77z4ylulO/0k
1hJ55fW3y6rC/3Tbf126/OcPfOr7+X/+y78/droDAd995Llb7nxi4C+//Opf
yrf2sS+dv/jrP5Vn8fA3WUDOFrquvRvPV773s/Ra+yjgRnP5hddb1yu75+Ff
psfcKofEWE8/+8ePfuEH288xOLuaGX7osw9Y4X9rvnbumZLVn3/qyq1fv9BT
Ap3S44/c+tApLvOYiRjAKUrBuUTm/lbho0//7lTWEnnv/b9/5j/+p/T//+r3
r51d3RGpHH9KyNc+xkOUyWLps+z95XQSPnH7I6VyKW8F9d1HnisnYcibLCNP
c9tgZc4cSmnWzdPjBAt4+533Pval8831ykrYTA+7tY6NgdIjIC/+v/Ecg7OQ
Y5jesimx/Dv3PL/x1jsf/vyD+Sfp/oqJVt4s6RSXecxEDOAUxcqWj37hB3vr
tP/tnqdKYH/y0kvLHOQBYj/DuceeLz//3F0/Kt0yly7/ecUjPEBcUHfI5trf
eOAXzc6WlCZ9+quPl5OwhR2641LPm6rMmUMszWqd8QccJq76df8Tv8k/jHNs
08POYP3GlQ0ZN55jcHZ9jpH+e+3D4f/EHCOFvjI955nnX25NtGIN/Gkt85iJ
GMDJaa2R6Bc7ATbbfnzuyqtdc23iQED6j9OaOnrHd56OC9p87Evne6oueyYc
VfOz1l0eIW533uwxu/GU0qxdx6rXwAGe+PkL8c4qT7TYvshTaA3Wb1bckHHL
OQZn1+cYeUAn/WTtg+Isln9X44zNUblY2Z77qP/w8psrHfghRAzgFLXWSOxV
7Zq0tWy2VFR2zWqJAwEnVHUZF9Qtr65ZY1XFaXN6byxSvf1bP53/8DvF8YuS
NuRZYzeeWJpVXnHnd+AAL7/6l3/4zH3VnfWxL52//4nfNO84xerbFFOL2Ee9
tRyDs+tzjPJqXYKJJcUc49vnn63+32rU9Ymfv1BtlrQ7kWUeMxEDOEVx/OJz
d/1o1L+NQX5r7cfbvvnjvRWJd913sfxOKVbfsti++OgXfrB35eS46tozz7/c
+p6xYn+tHbrjyjypWVQ+40dufeh0Ny5J2Uv6gpo5TMwWPv3Vx+NcsGaPU0oh
/u2epzaVCKW7qfVm+cYDvxg+apbCTmvESG+y1oS4O77z9PBRs66TkK7eTe2w
lj5R+lwzvcmjT/8uvY588wmlm+WTdzxa7qa7H7rU7HVJzYoYFVsfDemO21T7
Md0RrTM70h303JVXj3yTrYmTxdKDIK8M1pNjrBgx5pNOQnp2nET7Md5N9zz8
y/5Rra1FjKlsLWJUOUbrhRR3ZyivD3zq+3FAdmt91K05xtiIsTXpyknXz9pH
sbJJEhWWscFWyYmqJuOMfYhUa4kMzwbn9uCFy0MeIgdMv1pROtp/+ffH4tH2
zwWLJ6En905v8tEv/GB3rfR0+fZj+iBld6qcLTSXjztFuWvra+eeiT9sfmX9
c8FyJ2H1JivKEaN5s6SW7G7wzI78Js2IkRcCWmVCXL5ZBm6Olr+y5knI9Wmf
vOPRjTSdSsR44ucvHPM+uT6tWhkgLx22SsTo0izmjOuV5bB55aU3qvLIKmzm
YYWxgxHzyRGjebNcuvzn9MOBfdRlR9rm7idbUw0r9OcYK0aMWeWTsP15uM0c
I96D248Yk9hmxOiKb1GzoDp/ZfEe3E7E6MoxRkWMDcqP1+3f7LNqzTHYpq21
Sk5XGb84eOpuCu+xYmELC6qkHHv4ftlxCeKPfen8lhO5OMBUJot1zQWLJ2Hv
9gSpIVneZOG9DMquJXn8omQLsTLnFDcuiZ1IsTzp9m/9tPnzrrlgzzz/cvle
NrJfUokY8WYpexAMHDUrbxIjRnyThSfExZtl7+ZocXu1eBJifdpGdlgrESMd
2MGtnlKflk5ROlH5h7HveiO7n8SbpSx4FYdHd6HQMXdfNMNmDKcb2SGuRIx4
s8ROpCE3SxkXrnY/2ZrWDRm7cowVI8asyknY+Dzc1hwjRoaNR4xJbDliDEkb
4qKCpWwphpeNRIyuHGNUxNig8njd+M0+q9Ycg23aYKvkRMWpH3c/dOng94kr
H65esVAG+3bXRjz3/pOHf/LbZgzfmnjZV/W9cQmy3PSrujWGNL7imyxZrN6V
LVSVOae1cUksa9mFcag45FT1VHzt3DNVj1NMOY5sRE8lRozS6ok9EkPCchw2
jRGjWghosQlxMWLsBmyOVq3hkyNGrE/Lb9I16W8xMWIc3Oqp5teXDu040r1w
xGgVizmrVb/KeuxV2IxzlHKxehw73m2jKrIapC4fIU792O3ro44dvLsNL4/Q
syFja46xVsSYVezW2HL7sSfHiNNbNhsxJrHxiDFkNKQkWtWVFrexWD1idOUY
YyPG1sTy792NWMs3RFeOwQZtsFVyomLZw8Da+x6xYuHhn/x2qoM8QGzJDi9p
i3WMR1bszyHuE9Q6Wazkorn9GMc1huelMaFdpv0Yl99v9n3Fx9MJbVwSi2DL
K/0kZgvNp0zsB8g9TlXKsVt7ekuMGPHq+vb5Z6sfxlqmSmpfxJSjRIxqI4Pd
ghPiYsQot1hXqyfmpTFiNJccWXctyubOYul1130XR71JVUCSX+l0xTXMF44Y
XT5314/KkTTL5r/7yHPNlmzsNMvF6tWUpWZWv7DWhRruf+I3zVWFe/qo43Bw
eW1weYT0dcShk2ZLtsoxVowY80lPgdKtUV63ffPHax9Xi/4cI/YDbDNiTGLL
EWN4SzYnWs0CjO0s89iaY6QPOypirHLkPeIgY3ndbAvCdOUYax8X7bbWKjlR
set+kl6sqv3YuiBnaqfM/U0dvH7I5CdkWrGDpTVviT2TMd8eVZu9d+OkaQ2Z
/7V3PZ/0TY0q3VxgnDRmC2Vd0Pi9dFVaxtHP+CXGN1lr6LC6QWJ5Upy/1t+p
G9sX6R/G/y7/MIWR0kWzQLF6jBjxPLcuI1mtH1JOSNdJqDZ/X1KMGKX4fzdy
Un/sl269klO4WDhitN7ssTSr6wZp7aCItWrxjotnbIHlAVufjNVsjnKzpLuj
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
vlRx3nZIflq+8uOZXCZi5Ot88qpfef6xOJNd+yUdoCti5Ov8mPPWFTHy/GPX
mZwvYuTrPJ63eLMXVYWHWzFixOs83uxdEaN1z4g4dxzfJF/5XWdyvojRep3H
FXPH7DO1hYiRr/Oenela59m79vhbOGK0tqWPPG+jzBEx4vc14XmrLdwr2YV5
9rhcaEjz4LCI0XUmJ4wYu462dLGsJrcx4s2Sb/aijZGzIoesLZopYuzCJhEx
0sY2RtzELUf4mNE6KmJ0nckFIka8zuusqiy3CePjdQu9kiHXeWzl5ggfT/4u
9CK78tMmiRhx/mLJ7bnr2YQ6w3aS7b02ssdcHPA8uE7UVK2sqUwyzxKv2OP3
CEjXTH3vx9mB5k/U+XIpntRlyXdHVCZfoOJ3M5swsJMST8IxIycTRoym9T5w
JXIT2+unT+vujWMdFjHSVTR8xVzzJ4YP9a8VMYpdhFIbJs53DKxd0Kzzrc/k
AhGjmTWbaVfKpjVYn8l6v6QD9EeM5jo/eESi0RUxbvve2XogdJmIka7zumnd
ZOYcuSHjihGjab3XIxKtEaPOzIlHWEeMFDa7zuTcEaO4zmP/4shEixUjRn2d
92/IWIxR9x/hYhGjqy19ZMQYZfKIkV93Png+rtqYKf17sV7J7soQQfph3OJn
YPNgbMSIf6I4k9NGjF1bW7pO/25u9vpmaXL56psltTqGlyedPGLkV3p69mcb
Fk/wWO1keMQoamrN1yvZe50XWVXF7dwMetQNlXV7JUOu85iF1byacZJ6yVu6
lfpnnI+MGLFpfcz8xWHieYgXas7H2x20jcXeDTtWEQdI0zd1wDsUO/4skFY6
xPFrjWPe4JG7lpy8H9tbhwVi5EwdzPzf8Q6NCd755+kSOuAwitbCfLvejyqk
Fi+hnrXGPSaPGKOWB6ZvtrXdFfNXF44Yo85/Ov7ht+2KESPO/sSbZVR+Wmpb
tk6CLBAx0s0+XzJn6zdeXEIHvO2QiDFJ1cTWN0m3VWvYXCBipOu8tWmdjuf4
qZMVI0Y6z603S+v5j2vBPnnzj/YukG8NmwtEjOKDTzXd3FgxYsQPHtuirWts
48qOeBK6VswtEDFiMyYef7rOD3jnY0wbMfLnSu+Zz/ms6d/L9EpiGl5+1O5d
tRGNjRixAlI8k7H/OPZDnXzw6+5qS7emf6c7fdTNMurZN23EyJ8rnau99Vfj
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
aY8YcbFz82rW14sYhZkiRr3opn/ni2LWu8lPWyBi1LPek2z43lgxYsTrvHn1
dLTHtjEWiBhd1/nypo0Yrdf5DEe934QRo+s6H/W2XREj1hLZG3unjRit1/nY
t53EhBGj68nY9c/jqFTzOvObl7oiRhyaGxV7x36o4RGjWHTTmoc5rQUiRrzO
m1dTeSZm/zavJqsqbqe4uzKGWa/162+t5TOZf/KRU2jIt7D2MR7imv1cax/g
IXxZp8g1+2VdrZ9r7QM8hC/rFLlmv6yr9XOtfYCH8GWdItfsl3W1fq61D/AQ
vqxTZMiXBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANvxyFMvvHnp7eKH7773
r7t/8lz9yy+/eunMb15a5LhmceGlN84+85e1jwIAACaWWukXX/v72kcBQKcL
L73xoc/e/cU7fl78/M4Hz++u/5+HfvnH+MN33/vXp7/64498/p5TGtsvv/3u
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
+D/s3Y/rLUd5MPD/9AulIAURRChCEUTaWiSoSNAqIVQrIVRDUOubBvOjMZq8
MUYTY2y8xkTj1SYxamIkRmPifYcMd94nM7t7ds/ZX+d7Px8OJT3ee+6ePbvP
PjPzzAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAeG/+
5e3O9996+68rH8k6Luv3AgCAVl+2zw75sc6IdiXH+cTt333q2ZerN19+5Y8f
+ty3Xn/jzU0OaTl3P/LcbXf/z9ZHAQAAa3jt9T9/+JZvv/qHP219IByWWvQ3
3fboled/t/WBMEpqV6bW5dZHwZm559GfX3zk/7z/k/el4FzeTPf+P/3bw+n9
z9zx+IbHNrvnX/j93/7zf6Xv9eQzv976WAAAYHE3f/l7KftN7fqtD4TD/vPb
P00/1gc+df8bf35r62PhgNSiTD9Wal2mNubWx8LZKD0SVVi+4/4r+c30euD7
v9jwCGeU4tgHP/3N/KXee9M9BgIAALjc7nvs+ZLVp9b91ofDkOd+9erf/ONd
+ce6ZOPgl09qS6YWZf6xUhtTjxljpOvkH/71wRKT0yvXUD39s9+Uez+93vMv
d//vy3/Y+mBncOvXnoxf9mNf/M7WRwQAAEu5+tJrKZMv2W/K8FMbf+uDoltq
mn3gU/fH1sqDT1zd+qDoldqS8cdKLc2tj4gzcMtXfhAvmxyWn3zm1+//5H3V
+x/63LfOfUmo//vUr6ovZSAAAIDLqh1szdNbLt8yj5fDZ+54vPqx3vMvd199
6bWtj4sOebJY9Urtza2Pi1176Mlflqvl5i9/7+8+9o32KvrsnU+U/+5cvfbJ
Z37dLuG7obfe/uuX7v1xuyT1y6/8sXzBv7/5v/MSN2c0EPD8C78f3wfedxJ2
6K6Hn71x5oKlm8XqQzC7N//ydop4Wx8FwJb6coxY/h3/O2X+6x8kw1KqX36g
z9zxeKlc+od/ffDcx8EvnzhZLLUrU+sy/3dqb6ZW59ZHx069+NvXy32dp609
9vSLVfdL7nKJnbGPX3kpfshvf//Ge2+6p1rCd1tfffCZdJxVNv7W23/9yK0P
5a+QF0rKR14GAnY+ay8dXrqvxy/xlL5+exJ2KC9ddYMsCpcvufRK/7H1scCl
8vmv/zBFknse/fnWBwKwjb4cI5Z/f/bOJ669s2lLeee+x57f6HjpEJtmH77l
26nx8sD3f1F+rPSk2/oA+f/iZLF838WFVVOr8yzGwVlZuio+9LlvxR6J/H7O
Y6tpR+01Vj6kVJJ84vbvbvZlgp9efaX0RsaBgNwjkV8lS3/8ykvVU2m3SiXS
mCWennr25fK9dlWeVIlLV9318LNbH86y0s3y0S88kr9s+g9hGeby6I9eaJ9l
ADeOvhzj5Vf+WFr0f3/zf+cEMuX2sQlgestOxKZZ+tVe/O3r+f04Dp6ed9se
JEVnfULeXDi/9j8Ozvpu/8bT5QqJ25ensJznilZL78Y6q4998Ts5tt/5wE9i
wczm26C//sabcemq93383jy95alnXy4H/6n/eCz+lTgQsNtZe9XyNcN94K+9
/ue4hs+uypMqN932aDnOc5kLdrRqoqjVh2AWcXpprtPeeUEjwOw6c4xY/l1l
WSnDLz0zl2CZx8shNkkeevKX5f3YuknPO3XUexAni1VrdKSWZrnp9jwOzvpi
jURbu5JrqNq6xLsefjbG9ivP/y5ulrSH8cd26arUxo89Euk/qmXHYofzPmft
Ve2L/Hrs6Rf7/ny58cur6nTaibsfea46zjI6c/nEDswbpMcJVhDrMEf2UQNc
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
v+/j97YnISX2H/3CI+2fT2dy6ZXlOq/zkZlnW+mUf7XYr1hy+Kd/9pu4FuWi
NU5913lc9SuFhThqVl7pzeMixgr6rvP0C7aDCNUaPvHxGhtcsY+6vNI/tHKO
0V7nL7/yx3T87bWXfqCzqMxJESMd/8jrPBZa5GHfqjby4p2K1rjxR3mlnz4+
9weWrJzFpCdjPgnnW5lTRYxZPjNWOm01vSW2VWOOUV4jI0YbdtbJMTr1RYwq
x5j0mdX+I5uEnfRIbRsUOWK0N3tfjtFnhRxjklPW8ajWu95VHXW68NprLzdt
dtUqOVNx6scKCzelJ1o1R2ahfyi2CoeXrpokztqLOd5A3fuM4tSP4Z7ttvZy
uFUY24/rh7Vq15KBPxkTuZF5RR4J2mRlgDgImHu2q2rt4RyvaomMKU8qZ3K5
0tPOiFENa+aIPbB/YpkrV90s5fxUNU55JGjliBF3oq96OztnzE2t0y4fsnLE
mLoCf+l5rk5CyfGqD8lnctEd1vqu89jzPDy9tOqjTr/dtXcv+h3PT2zOLDqr
rvM6j+lZiRixJVIaREdEjBX0Xee5H6mdENf2I6WfMn7Zcn6quXV5ju3KOUZ1
nZdVv/oixsgd1rZSIsbI6zx9nSrHqGaElYrWajZuPj9xVKvdL2lGk56M5SSs
UJmzhM6IMYttN6Zs52u0c0hHRow27KyQY3Q6GDEuumblj7FOq6RPGdit0oMc
MaqbvS/H6LNCjjHJ6et4rJZjTFIS8qoyJzdt9tMqOVPV+MU6sztjgfHNX/7e
Ev9EWX7/YvqkgIMe+P4vyvHHSrMVxh/j4+/gemKxGv/gSYirxaZTt+ai3LHV
MGYaVKytvefRnw//4RjWPnLrQ2uGtc49CK69e8XCg3Op4s1ysDwpnsmFSk/7
Ikac2RHXE+sbNYs9No9feSm/GavZY94Yz+TKESPe7GVmRzVjruQAk7YhqJb1
WDNiTF2BP/bYlKHD2McbI0Y8kwuV9/Rd57Gy5eBO7nEd9Rh2YtiMNUIx7Iyv
cZqk7zqPhfQlYsRGVmw1TIoYK+i7zuNYRrzZ+1oNpRo/FtTF9aVj2Fk5x4jX
eexn6IwYK1TmnCJGjIPXeXy8xrAZe7NL+yvmGHG96BX2ZJz6ZIwn4WCOsUOd
EWMW6RYrM/5Wnt7St2ZpzDEmRYyVc4w+ByPGKf0MW1VFxvLvmGPEiBFv9s4c
o88KOcZUMWKMnyxWWSHHmCR2b8bKnHiz7KFVcr6++uAzm/zii5aeVlM/lijo
yuOPVaVZ5/6nMzqiBDRnsyNPQrzd1tzGbuozIqb0w+3Hav+XMbF9LgNZZWm6
jjyY8RUL1YjwEgtyDkSM3P5tf5H4bMplCXE9qHJ9tguN5vZvPJObRIxYbJCv
z4HwFTsB2lWvo3gm148YMZsdHl+rpg+U9eWqGpIcMdqliWPf41w6r/NY+TAy
fJWTUIWdvGxONXa89GhF33U+UDmfs9m2RT+1xmlRndd5O583FxvEqrMqbJZL
qwo7+SS0YWe1HCNe53Hf3r6IcdGzKt0eVCWaw9f5cOV87mOv8vOSY1STgvtG
K+Yy6ckY59h2PtF2bniuzek22ZhyeNQg5xiTIsbKOUafMRHjlINZulXSJyU/
8UvlHCNGjPzKPWZ9OUandXKMSfq2cJ1qk4qIAdUUv1wnXG3IeDDHWKFVcqaq
qqc1/+lFS0/bqR+zS0HgI7c+1HZrxEgy7/jjwISOYanlNb7rOyZgS68IlB1X
J1nVZ/a1tqp7/2KtLWCqbKG9vNM74+sMR1YsdK6KMG8CdjBipH+uzRaqUbOU
bLcLAqRPi/3/5XXXw8+2Ky+tHDFi2pBymIee/OXwPLjYNdG3+lA8k+W1csSI
ddp9aUO7a8nFO+3Hqsa7RIx265PZg3DfdR5X/xifujzw/V903iPpl20LFZab
sdu5wli+WYb3REuNi3boZGqN03L6rvN215KcyMU1fNo1QtMXSX+38yS0SeBq
OUZ5PfjE1ap90UaM8trh9JZ2QsfwdT68emQKHSlHalt8KRvprE+LK46uEzE6
/3DbvrgYzDH2Zp1dFNffmHK4Vzm17lPTtR1e74sYMdlYJ8fo1PZIjMwxJlmu
VdKn3UYw5xjVzNn8Sl+2M8fo6yxaIceYJEaM07eTXnlVkAHtFq4X70zPr8ZJ
h3OMFVolZ6oav1h/wngchJ2xkOyUpasm6Xu0xdg+4/hjtYPq+L849RF8cFes
W7/25FxlRdWI56RDPfhDx/1f0jEPL+GbvtFwxcIkt3/j6fJP99UwT/qycYym
s2KhOpNl06jxO+IdNCZi9H2pWDVaXulB064XnZOEUn8bX+msbhUxOhuSfUlC
nJ7TOSO4OpNxVtrKEeNgqyf2YcYFH8orfZHOjCi9Wb5jOgkLRYy4OVp5TS3m
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
57lv6KQvxyhNv/ghMZdYKMdITaHS6on/9NR1yE83b47Rd50vFxzWyTE6c+m+
PszlRsbnzTH6rvPO8u++9KDvl42VJ+XD+2LvvBHj4JNxTMSYxYw5Rl/E6Lzj
+vYC67tZVm6VnKnYr7jQ+MXR4jr8U/9ufDjuao3l2Dc49e9Ws8XnWuxukjhr
r+RdKYbHOuSpnxmLCasl144WH3blShhY1qNdnj0dVSw9nXoAVSH30otRtFvA
DJzJOGA39R8SMU7Xbrw7cCY3jBgxh7m43r6YazHzvUWMWZx7xGiX18v15CJG
a4mI0S7hmwdwOyNGnEJbXumXWiFixOu8nISfXn3l5BMwZIWI0ZayDKya1Zdj
VDMXyplcIcdoF7dPV/jUj53FjBGj7zpf4rAPmjFi9OXSSxz2sHkjRud1Pstx
tkv4DsfeGSPGmCfjwYgxi3UiRrnOy+uI+UGrtUrOy3vOkO91Xm7ML3VZv9fW
B3iMG/bHuqzfa+sDPIYf64zcsD/WZf1eWx/gMfxYZ+SG/bEu6/fa+gCPccP+
WAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDSnvvVq2+9/df2/SvP/279g1na
q3/404u/fX3rowAAAABuLK/+4U/vvemeL9374+r9B5+4+jf/eNcl64R56+2/
fuyL3/nQ57715l/e3vpYAAAAgBvITbc9evGR/5NeTz7z6/Lmi799/T3/cnd6
8/2fvO+11/+84eHN6z+//dP8ZT//9R9ufSwAAADAjeKuh5/NPRLp9d6b7vnt
79+49k6hyIdv+XZ5/1P/8djWhzmP53716t/8413lez329ItbHxEAAABw+VU9
Eun1sS9+5623//qle38c30yv+x57fuuDPdUbf37r72/+7/ilSo8TAAAAwELe
+PNbH/jU/bkvIvbDfOaOx8t/l/f/9p//6+pLr219yKO8/sabne9/9s4n2u/1
0S880rkE8Q71fa/1P2RGezueRb35l7etPgRLuKEiSR8n4Yz4sc7IufxYfTlG
3/Gfy/e6ofixzkhqP6amdPu+H4thsafl0R+98LEvfqeqe3nfx++98vzv8mow
6XUWq9e+/Mof3//J+9qtjv7vU78q3+vzX/9hWQ0mvdJ/b3Kok6SDvOm2R0/8
kPsee/6jX3hkluOZRbqc0kV148wFSxee1Ydgds+/8PtLtl7ZEdLD+gOfuv8G
Pwnn4re/fyNdsem63fpAOCzPyk855NYHclhnjpHLv+Myj5mIsU+f+o/H2laJ
iLFPdz7wk9SUrt48o4jBJh584mrskbj2zg3+3pvuiT0wOWI/9OQvyzu33f0/
Wx/4kHTZf/QLj6TjTBd/rGx5+ZU//t3HvpG/wj/864O5H6n0OP3NP9713K9e
3e6oDyuTxe5+5LmjP+TqS6/lzrRTPmRe6XLKc8Fe/cOftj6WxT329ItWH4LZ
pfZFiuqXab2yI7z+xpu5ovVGPgnnIm/ImLORzvFTduWO+6+kHyvlkCmT3PpY
hvTlGLd85Qd5RDUmWiLGPj3w/V+0rRIRY59K0yw1qOP75xIx2ETZ5yi9Pvjp
b5Y7ugTwqrMlzt95/MpLGx31YbGy5fZvPJ3fTLHrI7c+1M6lyntw5/f//ub/
3m1Yi8vXpOM/rg88V5uUHqc9dKQ/+cyvy491ennPzsXuTasPwYw+//Uflkhy
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
q+R8xfGL8VM/lhBTkRO3Qd9kp7kyOFKdyeG+wUnGzEBZR1XxfsoIS1WDfXQN
YeeoWXyQxVSk70zGTaNO7DOJnULz7kFw7d3bEJS8vcr/S8V7PAmnr0U5S8SI
I4lxBbwS22PqG+fIxFQkjh2vHDHKs2NMdWhMReLNEqvZS5V4rMxfOWLEAox4
s3SumRk/PBYV9FWJxw9ZKGLEEutFl/tYOWLEJ+PBHok4nHp02KmWE1woYpQn
YyxcjDf70Td1/JC+M7lQxIhPxnRtlD/fOc4eO4U6qzdHWiHH6LzOY1/6wQ0Z
+8SI0XcmV4gY8TqPnUKlyHOuitaFIkbfk3Gd3WwXihh9T8ZTbpZOK+cYfU/G
zoixxBo+C0WMUlTTuYj9tXffRDFixJu9M8e4CEMqY87kjBHjYkQuPX4L1yOs
HDHKdd63UU5fjrFhq+RMxXbQchNFx4vVaI/+6IXjPiTdd+svDpblB0d1Jud6
cPz06is7WYU1G14pcbx475+yOFicC5Z+95TcthNG8pDKwJnse3BMVU2MWmIV
1hjzc49TPJMl1YypUX594vbvHv2Pzhgx8s1SVZuUm6WqZm9rnFJ8iF9q5YhR
Rs1GnoQ4QThnWdWe3aVxWlKjTSJG26SKqVE1Tb6chKrapFopMX9INcVsoYiR
v/JCq37l9crak7BCxMirD42skchLCrz/k/edEnZigrRQxMg3e9sEyLf2pDV8
WjlitGdyhRwjPxmrJkA1ezRdqDNWtK6QY7TXeV+H7RFy2GnHjlfIMdrrvJ0Y
lQd5//2up8o7p8x/WSJi9D0Z476xS1siYnQ+GRcq/14tx+h7MrYRY1KOMckS
ESO/7nr42WuDnQb5Zs8penw//cWBHOPi+rTiMWdy3ohxcSiXnrqF61RrRox4
ncfCtioh78sxNmmVnKl4xR49fjGvWYont9og79o7fYPpQmrPZOwbPK6QbG87
EWfHrZ0bVZvLnHg81eOsnV568U77d/hMVsWTxx3JQitoRVWxQRwsKK+U4bdL
WFwcO0Fj3oiRb5a22iQ9zjofnbHGKX3Zam329SNGunLydk4j/3xcMiIlG+2i
N+lxFvOWrSJGTIDTmRlewiKd8M5Cizg3If1w7TJZy0WMlK8uVNSafuv0i28S
MdKTMQXb8XlyuoOmrsjRimUbC0WMlOl1lmaltO30hRdSk7nzTK6QY6Sboq2R
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
9DjF3uCVI8YksZA7v3Ih2Sdu/258c/McYxYxYsQc455Hfx7f3G2P06QcY+uD
PVVfxKgqqy92sF9wjBhVh20e6Glvn3Z6y94iRl+O0Rcx+j6kWpp4n6WhpUbi
oqtp1rZKziViTLJhq2SqsuH7xTuTxeL/1C7TscOIMYu9RYz9i1M/Tp8UOZAA
r6mvN7JIV0U6vPE38s1f/t6Y2L60eHrTIbV/IAbh9DytsoUcltOvXN37F++s
lhDHiOOHrPC9YrYQ9zrP4rSCM2o/xvGLGJGq1DS/brrt0VhCNr4yNibA67Qf
27nkOYcp2UJ89c3s2NszNEaMMTlM5/FX9Wlt2InLUq0zq67dWexidJ32nnWe
/9iH2Xl6q275drOki+vtx12JNRIxYnT+4bZ9ka/GzrCzYY9T378bRzzLK/2s
d9x/pT3+c6yKjKr6tJiNV73Bq0WMSddD2yMxnGNsGHZmuc6r9sXF9fZvu7rg
tvsFx4jROWj4pXt/3NbRVYnWDiNGZ45x5wM/6YwYfTdLNX6UX7ta5jGr1vBp
/0BslWwYMSaZevHEXsHyWqdVMkmsqurs0Itp8w4jxiza7dW2jRj7F7vmSvno
ieKQa1uxkP6JFACXLvaOvZGzhNbX33izNJ3aIo11xKkfA8N/1UBhft3z6M/b
tDy9U3Wb51cK7Gv2OMXO/PTDdf6ZmJbvtg88qsYvHnziapuRpi8SV30pr6nl
o3EJpqVLT6uI0dlrlzKiWJnT3uxXX3pt/MoA60eMux95briW7+mf/aZzG4L4
a/ZN9pk60ewUVcSI18n4HCZ9/Y/c+tD4YoN0JttO1Hmlc9t5nZfQN9B11hnx
UsOqWgN80ePv1HedxxqJKmK0MzuqrU/SiWrT8nRvpjt0tYiRTmbndZ7+3fYe
qXZ5Sz9WGzbT1biHqsjO6/yNP7+Vwv74myX+mun2LDlGeaWfPj4fV4gY6fjH
zx6NGzKOyTH6nu9L64sYk8SK1hgxqkRreB/DFVQRY1KyFOuot4oYfWIfbMwx
yquKGOlx0H5IlSxVVZHrf6m+iBFrJPqmqMRWyVYRo0+6WTpv9hQxDk6hLaoR
552Mg7fiqEecLFbZbcTok26W8ZU5ccR5JxFj5+JE0RmLhaqB4KpiIf8ueY7M
LP9cK/ZG3vKVH8z1sXFZs01m7Y3cGCiOs+dXXhCpLU3PCWTViM7zX6pJxMt1
pFddKwNjZHFR8c3ngh0Uxy9yQylOlr+4XiOR7oJ0L8T3j7s11lmCqY0YcdQs
v3LXSqzMqb5RqTaJa3QM2CRixC3sq2KzchKqrt102vv+SiX2UY88CcdpI0bM
YUb2k+SZU8PfqMhnMmUjS0eM9jqP99fw5vVxsvzF9W0i4xTagSRqOZ3XeVtV
FSNGOgnVzI522LQtTc9/ZeWIUV3n+WZp04N2DZ+YyF1c79EdzjFW0Hed56qq
kTdLGzFijpFfuYZw5YgxcvZotSHjtXE5xtLds62+iDFJbF+0ESO/crf28MaU
SztYh3nQthGjT7xZ2hyjL2JUN0scP0qXejpXV196reSfi+YYfTojRt8aPq3N
I0ancrNUN3uOGCMbFO2s/NVaJVONXMdjnxGjT75Z2hyjUww7O4kY+xenfuTl
KebSuVnPtXeHi4X2MhhY1P10sRN+5Vl7k+oc4jh7XKwsDvSXDuq4lkjs2+lc
SH9e1YhnWVW4T7vFzD71nbq4DUEZ/40jVkcPxIysjzpRZ8SIo2axPKxvc7SS
jY9ZGWDDiNG3KVU5CTG/raYXDZ//6rJfaHmEzohR1fId7HWP8+sPFhvEM7lC
xIjnedJWU/HHiuf/9A0Bj9Z3nXdWVcWIEa/YOGwaK1pjVWR5bK0cMeJ5jhdh
HKOP57+MX1dTD8qsxr4cYwV913lMpA/eLH0RI+YYpdBu/YhxMCGMF+GkHGPl
jT/6IsbUDykXYV/EiBdhLA2aN7U+aEwd5kEbRoxOfSXo8YrtjBjxx4oz5uJF
GJ9xK++w1hcxJiW6G0aMTvH8x/McI0ZneVIlVrSu2SqZatI6HjuMGJ3izTKm
HV0Vc+Y3N4wY+9eOXyz3+bmjr9rN4WLEhg5TVTXYs4ed4fHH5QxUFPTJfeDV
QZbygyplLZ9fBZC2kGNeUzvqhxfs3Yl4nVfzcEuvfjXkUW6WU/bDjeOPIwdh
JxmIGGXUrBryiEMDuQ88VptcHNovaduIEW/20j0Y63svwlq7cYndMWv4xNKv
JZZHGIgYcTBxuJavWpFjuNig2vpkhYhRrvO4hs/IYs5yEqqwM7DO+XL6rvPY
kd4XMS6uj5pVGy7Ek1DCTpWyrhkx4nUeC7Eurhc0DqzhU5bfrMJO36Zji+q7
zqtVvw4OKPRFjBJ2qkKsNSPGwftoIBE6mGNczDfhfYzOiDFVbOR2Royq2mTg
ZlzUQMSYZKuI0WegdDPnGH0RI+YYsZFbfUj8/NlzjD59EWPqxh9bRYw+1fJB
Ocdoi72HE/5YiLVyq2SSvi1cB+wqYvSpFrwarsxp69OKrSLGzsXeyFxRucS/
EiNeanlVtd8XCxSSxXtzoRqVGDbXmbUXeyPH10jkqrA2QKUgn46/TQ7Tn2z7
dqr26bzrRB23aPOY6bHbitd5+zRPEalzn6N0s3QuLTLJcssjHIwY6Vu3jaCq
Dzwl4e3SxAOxffOIUX3rdPztin/pWx+3zXScVTfv8ggHI0as0+6Lk+0eBBeD
qwq0yzYuGjHidR6H3cePH6VEqA078VuvNr2l8zpP//TwYkRxGeH0reOwabsF
ZApEnV3W60SMeJ23u5ZcvDPOG0c827CZvlHn1LAqx5jx+Pt0XufpqdQuqDvQ
6hmOGOnUpR+rvXfWiRjlNVBLNrwYUV+OESsW1lnvui9iTPqQ2L5ox+7zPNy2
t7bd/eSkbzJC1Yd54ojz+hGjT4wYfTlGGzGqRXtib21778Qam3Wmt3QuwV3l
GOPX8Fk/YvRpt/jJOUa74OFAZU6saG17axdtlUwSh07GjwjvJ2L0abdwHcis
qntnDxFj56qx3eUKOWK3Xlzd66bbHl2ikGy1dVoOztpLp3TGOTKxN3LSqsJ9
/ah9gaLzz8fRhBl7nA7uWjLg4BLx6eR3XtUpV2xT4vSNZpwnG7OFvvGLzvOc
DuP0c7vQplFjIkb6BTubG7EPvNye6T/ihKzOyp94JjeMGDFzK0Esnds4Dl5t
AT/+AIa3ADvawYhRLRPd+YPGseP4Y3Ve1fFMpk9eIWLEEuvhaNwnXa6dYefg
ylTLRYx4nZfv1TeHOraa40noq2jtDPvrRIzOmyX9u3EuWPkDfRMB+sJmzIE7
/8zpOzwWfdd5PP44g6Pzt4jti76I0ffsXiFixJu9s59kYMSz6MsxDq5ll+6s
pSNG33We2ontbxEni/W1zfu+bJyeMGOPUwrpnZfH7KsurBwxOscCxqwT2Hf+
41Vd7ri+ftExV/UR0kXeeZ3HHokYMWKOMencrhwx+nLpGI3jwiCx/m24MmdM
RetCrZL0sZ350mNPv9i5ntLR53YnEaPzyVid25Jj9P0WB5dHPtOtbJczUFE5
u7ZHNPfrxmOYpZDsuN7Io8WV5aq+wTyKOtcxxN7I02sk9nMMnXM8RxruA89j
Iu30lvwt2oGA9I3m2v0kroiy1YZN1fIIsxzDiREjlijkV8q14soA7X5J7Znc
MGLEcfb8euD7v2i3IThiDZ8lZtWNvFs767SLtpp9oE67PZMrRIx4nfd9i6PF
OvB21HXRiNHuuTxQVdWuRXnEiigrRIx4nZebJf277TKSRyyG2bf6TZbrLmYp
iB2+zi+uN6auDVbmxLi324gR2/LVdR7j3hF73caqyLYWNIedFSJGe53nW769
14YrWg8aOJPHyRGjvc6Pq8M8znIRozOXjhFj0mfGe+3iev/GwNzAJXKMdI+0
9Ujx8dpGjJJjnH4A15aMGJ25dDn+x6+8FHOMGDHiEHb7ISMrWhfKMdorJH+L
vojR9y2OtlrE6HwytrPyh2ePjpwxt0TEOFOxp3edfcpixULpAZt9QZUj9vg4
RQprsZ825lGl5ur0OpwYwTbZnqM4ug6n0/hdS/oMnJkyyhYHxOOfj5dHqXDo
nBk0Sey637and95No06PGPHMxPuib62SzjO5YcSo2o9lNms8M0ffF9XuDMd8
k2BSxIhr8sSbpd2D4FqzO0NseXWeyRUiRrzOZ1+Vq+/yWDpiVPPlD/ZIxDOT
PuTgYuadVogY8TpPr/Qv5vfjhLjOnevHiDlGHDosEWa5iBGv83JfDEzqP/2+
WCFiVPuCxes8Ll9z3IoZfSsDxLCzQsSI13kptKiqR+JiFMfdFwNn8ggxYnRe
52MixiwWihh9uXSMGJNUfdTD40fL5Rh913lnxLiYe8WM5SJG55PxIgxbxBwj
Row4hTb2UfflJJ0WyjGqypzSoOiMGO2fP9HKEaO6zjvX2ImxNH5IPAllRcQ+
57WV7UKq5ffX2cwrVrzHWWB9a+kfYaHeyGGdu29U845PqX+ueiNn6Q492nFr
0XSatGvJgM4+8DjT/OJ6F3q1dmIZCKiG0U/c/SR23W8+2zGWR56ystxcEaP8
6NVMgc79evrO5IYRo4yzV+NZpZb4lItn0lr6A46IGLGWr8wFi6MwsT4tViyU
9RD6zuQ6EaNc57Ov+tW5+8Y6EaNc5yPPW/m9Tgk7K0SMcp3H8xbTg6PXIa9m
1eUrvxoBXyhixOs81mB3VubEZ9bOI0bnvmBz7RoTr/wy1h/nYqwQMcp1Xi14
VSL8XBWtM+6wFs9b53V+4nmbZImIcdGTS59y3kqOMWb/nYVyjL7rvDNiLLFr
zBIRo+/JWNVhlhwjRozOfamm7mO7UI5xEWaPxvPWGTGWWMdjzYgRr/P4zKom
4rU5YTW3aEx92lwR43zF8Ys1t+fOd1Z7LcVqtKP3Y9pwV8o4RJLaj7HCtpzn
o9eJmitmzmWWcZZq7smJK35X7ce2Jj//E1UUzeGlcyW0oys/97bidxxSOaXn
ZMaIkbP3dqJoFduHz+SGESNdRe2Mudz0O30mclweYc2IUc25TjlM33hHFodI
UvQbPpMrRIxcmbPQrpTVygBrRox8nY/skchNmBPDzjoRI13n7c2SF7c/cUPG
tpYjPh0WjRg5e297JKr7cd6K1hUiRrUvWOyROLHQos3eYyq1aMRor/Nqs6R8
Px7Rvhgwyw5rMWL0Xeen7KU41ewRo7yqXPr0myVF7/FHOHuO0Xedt5UAnTnG
XGaPGJ1Pxrb8O99K7e1cTW9Jf+yIfWxnzzHK67GnX6zqNjsjxkLreKwWMcp1
Hm/ndsGrti461qeNLECaK2KcqZhar7zr/bV3stnOKFpt6DD1Y6uJosfVYJ8i
zjUubZn03zHXOuJjqx1/djJv7vS5xrFu8PRd7+NcsPTrxzWjytlLf6D8d+wf
i/NiyvvpQ444jOG57VuJl9CY0Z/W7BGjc7JPrLpMYfngmdwwYnSuM5Yy/NMH
QeLoz8oRI47+xJulsz4tFhukvxXHXjvP5AoRI6VJyz3K43qJK0eMSWu5p5Nw
ethZIWL03SwpPTh96CRWsMeqhhJelosY6cfqvFliqyemB6fv37FCxKi++FzD
zVk6jbHYoISg+IxeKGLELx6vk/hPx/ePm/8SVWfyiE+IEaPvONOT8cTjnGre
iFG+V3WznF7+nR4Qk+64eXOMzuu8b9bGjFt4VOaNGH25dGcd5ou/fb0zYsQS
6HglT6ponTfHKN8rNSLiTNLOiLHcOh7rRIz4ZIzvd16EsTIn/uFJVTqnR4wz
FdPsgzO21hQLydJ1PvWvx67CTaZ+xL7B8vrqg8/EbHDqZ47Z32ErsWJh6t89
uIfUEarqwfxK/1DbV5/OZHoKtKPYKYrG+YxHHEPfrI3NxYqFqX93zYjR7hk6
cCbPPWL02TBixBymnNi+RlauWKj+/MCZ3FvEmKSz7kXE6LSHHKMd3UuxIuWi
W0WM2Oopr7kqWleIGPE6L6/Tl1zI2n3Jc53AChGj3VL8/Z+8L52E2LK4mN6+
GDBvxOi8zjdZJ3DGiBHHYsprnV3LK/PmGH3X+RJHPmzGiNGXS0/92NJHXV5H
rFQzY8Ro614u3qmH6YwYi1ZxrBAx4pOxvNqtB4pY95JfR4w4nxIxztSM0+WW
EAvJJv3F2HDbcOpH1X4sY8dlCt7UD1xo/7hZxEm7k/5iLMucN1uoCphL4Wjc
VbOcyTjP9yJMuS1Pyan/+t4mi0WxYmHSX1w/YlSl4MNn8twjRp8NI0acnH5x
aOCv2gJm+EzuMGJMImKMsZMcI04euQjV7BtGjKoUfN4ZcytEjKr9OFePRBYX
N764PolmhYgRr/OL0BFaTR6Zd/uDGSNG33W+vnkjRl8uvb55I0bndb6JGSNG
35NxkqqP+rgR53kjRrWYZF71qy9iLGqFiFEt3TC84FW1ZNZx9WlHR4yz854z
5HudlxvzS13W77X1AR7jhv2xLuv32voAj+HHOiM37I91Wb/X1gd4DD/WGblh
f6zL+r22PsBj3LA/FgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA8P/YuxuXW67yYNz/6YYiSEEKRSiCCEVaLRJqCUGt
hFC1SLCG4NcbQ6I2HpOYxmjiMW0a81HjMSbxNOaLY0xMPL/1y7xZ75211sye
2Xs+9n7OdbGR487z7Gf2zJp71se91gIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAgIvh6it/ePb5V7c+CgAAAICL7NNffuijN//g
zbfe2fpAAAAAAC6mb9//9O6T/ye9Pn/Ho1sfCwAAAMAF9PSVV/7i7+7qemDS
676f/XrrIwIAAAC4UK69+fZHb/5B7n5Jrw//w91XXnp96+MCAACAyV5944/N
919+7c2Vj2RDfSeBbd38tUdi30v3j49/4ZIFYQAAADgvqSX7sc/98PuPPFe8
/+Rzv//Lz9zz4svXNjmqlaWT8De3/PsDl3+z9YHwAalY5u6Xr979X5ceu5L/
75e+84utjw4AAAAmSC3Z1J790Ke++9wLr+U3X7/21l//0/fT+5/44o/e/tO7
Gx7eOj5/x6NdisUN0uN0FlKBTMWy629J5fCdd/98/f0r1b1+/PjzWx8jAAAA
jPLIEy/m9uzHPvfDPLMjTv346t3/te1BLu2By7/JX/Zvb72/a+mzrbf/9O7H
v3ApTz7KPWOpiOZlYf7yM/dcfeUP2x4nAAAA7PXya2+mNmxc4/S2b12+/sGp
H93r8lO/2/pgl5Ka8Hl1ke51+z1PbH1QXP/KXY/nK3LpsSvxPz37/Kt5a6S/
/5cH9ZgBAABwylK7NbVei56W9Lrzvl8WPRLp9Vf/+L3Xr7219SHPL52Ev731
/vokXOAep7MQU7M+f8ej9Q98+/6n8w9889JT6x8hAAAAjHTHD56MvS4f+9wP
i16ID33qu/c+/KucbPDZ23+y9SHv9+Zb79z01YfrXXKefO73X7nr8frn/+17
/52/710PPtMtfZNeH7np3pPaGumRJ15Mh7r1Uazk5dfeTOe/uxAfvfkHfXse
feZf/6P7mVREn77yysoHOZd33v3zzV97pF596Oorf0h3nPQe2CvF6hT23SzA
jezuh56t99Toq2NwmlJV3xDwufjx489/+/6ntz4KzswT//O/uWsl1V2vv7fq
aX6ne9378K/S+3fe98vinVN227cu11kT1958u1s5pFi4NZ6EW77+0+vvddTk
d1IDf9VD75ca491ksRskLMeulWeff7Xvx1Kz66/+8Xt7O2pO3DcvPVWvd51T
s26cbjc4WBcxzB4Fbljd7OxiT43rPXUMTlPXKvnITfe+/NqbWx8Le3RNs3S9
Ustx62PhbFx78+1mssddDz6TO1tyxkucrFTH9pPy48efz8cfBwLy7jlxQde8
2VN6pX+kc9K9H1OD0gnZ4Gt8UDz/N0JYjtOL9vYtX37qd8OTlU7c01deyT1+
MUcrpmbdIN1ucJgYMdwswA3ozbfe+Ztb/r0Lg+kfeUCqr47BCYqtEiscnrjY
NEtX7UIu08ESbvn6T3OV9dEnX4r/qRtMLIpTXLA37pd0UnKiSO4suvLS6+n9
+37265jYk7c6yps9FR2Y6b9+8rYH8n/avMepG7/Ir9PJzFlCXGK3S83a6/Z7
nsgnJ13rpY9wRnFTp3gzxtSs3cVdggmOFyPGCc4eBVhBl/6dX92eGn11DE5T
3IJ2Z4XD0xYH69MrXbutj4gzEPc5qreZTtXXVIl9/JmrxfsP/+cLRWw/Kc0F
dT/+hUvPvfBavapw+tZ3P/Rs/r/pPio+LXbmxNGE9cXxi5PKzFlCniw2qSWV
Lv0nvvijnOP026tvLH2cc8mpWbH9eOWl1/MgSJ2QBmQxYtwgfdQAhVg/z6/0
ZrOOceHzqM9UbJXkIeDzXeHwYivGSbtXuoJbHxcnLbVPc49E37TQvpZv7GMv
FlTZXJy1kZqrMRMmt80//eWH6vc/edsDzUy/OKFpqx6nOH6Rnpu5i6kvM+fe
h39VX9D0Iae2es8jT7zYXBQu1hYmjdSMKdUraM6ZSrWdBy7/pn4/vZm/7E1f
fTgH81wyu/fzv7e6iKmkNWd2XHrsylln5qTzeXzP6n0/+3WevZileLJVH+kJ
3uyLihEjhv1JK+OlWtNJLY/QFzH6nHWH/NSbJZ2Zs24/NiPGGWnWMfo8+dzv
z3p5hPTg2zwFeoyYo/43t/x7notU1CVOcIXDYc06xoaP10WlkpavV6rqX4AV
Di+wOFksXancNDvxZTrYVpEtMHVp9BQH8n5JKeBffeUPCx3nVI8/c7XIFvjn
Ox8rOie7mk+RXZBOwsC3+NJ3fhFHE1b8Qv9X/BaPPvnS8Fyw9AO71jzf9E56
v05q2kr3LVI5LDq+4mSxA2Yrx1+vM7tW0K2hVNQN0nf89JcfqotZ+r9Fl1Fc
y6J73X7PE3FCXJ5Vt6YuYtT5SN2q3eebmdNFjHR/HfMhXX5at4J31OWmbhUx
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABgaZceu/L6tbdG/vCLL197+D9fWPR4oJOK5X0/+3X9/uWnfvfcC6+t
fzwAAABwsNSS/Yu/u+uzt/9kzA+/8+6fP/HFH334H+6++soflj4wSMUyFc6n
r7wS33z1jT9+5KZ7P/a5H7751jtbHRgAAABM8vaf3v34Fy7tPvl/0uvuh57d
+/O33/NE98OfvO2Bd9798wpHyA3r3od/1RW2j978g9jZ8pl//Y/u/du+dXnD
wwMAAIDxvvSdX3SN2fT60Ke+Ozyz4/FnruYfTq87fvDkasfJjebKS6+nApkL
2z/f+Vj3/l0PPhMLoQlxAAAAnL5HnngxNmbTa2Bmx+vX3vrrf/p+/OG/+Lu7
nnzu9ysfMzeCt//07ie++KOicP748ee7GXPxzb/8zD0vv/bm1scLAAAAva6+
8ofUeu2asR+56d7cpO2b2fHZ23+SO17yz//1P33/2ptvr3zkw6689Hr95jvv
/rn5fjoJzR6nU1vlNR3kiy9f2/oo1vOVux7PBfKv/vF73T8+/A93/80t/547
XnJXzKe//NBZT4g7tcIGZ8dNBNzgXn3jj+lVvy88npG+VgknKLV/rYnKVKnF
+vf/8mDuUXn2+Vdv+9blmGxQ/HxekSO9/u17/335qd/l/3vL13+6yVdoSl/k
Q5/6bp2Zc+d9v0yN9yKspZPwt7fe/6Xv/KL44fS0Sh+SvuOyxzpFOshPfPFH
b//p3a0PZA2PPvlSLl2fv+PR7nLU+TDfvv/p/H/Tv7c+6gO9/NqbH7np3u8/
8tzWBwLnKsXqFCJ+e/WNrQ8EYDM3ffXh9CreVMc4I32tEk7Trd/4eWpKn/UQ
MOu74wdP5tbrXQ8+c/29LIuYYBC79eKKHHkB3rwkb3o19wteX/oKH/vcD7uF
W2NmztNXXunyJfJaIp18Eh554sX6Q9IzqzmasL6H//OF7ji/evd/bX0si+v2
OSoW4I0dgOmVH0+pshF7ETc98EOkW+nTX36oW4KpmaMFDMsRI1VcVYSAG1Ne
Ii/uqaGOcV6arRJOU26aWROV8Z74n//NMzg+86//kd9Pbdj8fu5pSU3gvFlS
7Jnpumrz9JBTiO23fuPnuZF+89ce6d689ubbqSGf37/02JXu/cefuZq/bFxL
JOYCxZOzlXRgebJYej365EtbH9GCUqHK+xwVnSrpgnbvp9KYc5lS4yvPUSq6
3c7CNy89la9s+l43SI4TzCVGjBukjxqgEJfIS//I047UMc5IX6uEExTX8UhX
LV27rY+IMxAX1P3ITfcW93ic2fFv3/vv6x/s1ij2nXnx5Wsf/oe7TyS2X3rs
SjFRpRsIyC333Fn026tvxJZ79+oSyX78+PPFh2w7vSVOFuu7ZBfJnff9skjN
yrpyW/f1xQlxudvtLDz53O+LVYWlnsIkMWIYOgRuQDGDvXt1k+7VMc5IX6tk
6+OiIWYg7N5frzI1UrY+Lk5d7JFoJlTEJISv3v1f+YebK/Q+cPk3pxDbY19Q
fn3oU9+Nx59fn/jij/LsleLZFLNNmpkYK6vbF11mTjMs9/WAnVoM7zvOWFto
Zh89/szVnMIUxau84WTnSee/SM3a237c8CJOKmzHf/I6ZvnTJzieuNwpTZ98
apGkbl9cjD7qSef5BAvhJKdWqBZ17hfr3I9/kjMqmXGcNL8+f8ejk+oYp+Zc
KrRzabZKUhNg6+Oi4d++99/1xaqXYIIorqfRl7DdLdtVFK16Gdssxfn8Y/US
viuIOxd/6FPfffg/X6h7Y9IP3P3Qs/Utk+6jOu6lWn36kNwbk1cjWVnRIxGX
7qkzc9JJ+ORtD9RzwZ59/tU8oexE3Paty3VHynBq1rCiAGyy7H864I9/4VK9
cFC6I5pLVac389VMZyPXlJqpp6nKtFV6T7prmoEi3TXHZ12mD9mkNpgKzN/e
ev+RPavd/Pon/ud/5zqq46WIsdyoWQqVJ1UbLCJGutFytDzrocO+iNGUTkIK
fSeyXtkBXnz5WgqbZzd79DAnGDEm6atjXFRf+s4v4oIqJytmbt/6jZ83e2P2
1jFOULOOcVEjRjH7IK5wWG8swrZi4n26UrE35nz3BGFpcU+ZVG0bqKOmZtH4
PJA4mv/hf7h7/Z254s7F3RMzZubs3p95dL2akdSt3JgqsUXuXzf/JS+ytKuW
8F1BOqtFj0SxfdXTV16pT0JcI+V6yE09neURurNaTybKe50fNkaTrm/udvvY
5364co9ZvjRFelK6F7qjKpaq/v4jz+Uvmy7c9bBY9K7aXDv3iK5fG8wRo7gi
3Yp/6a45punXfUix6Pc6upvlyIWDusduuklPpDaYI8YSi8J1VY6TmuxcR4y4
4sGZrozXFzH6dCehLyvyxKVj7nrOz2v26MFOLWJM1axjXFRdReX0V/jPEWP3
/jhpPSNpbx3jBDXrGBc1YsRLU7dKzjdiXEgxRaGbeRRnJNVNM7j+wQV1U8R+
8eVrwz//pe/8Yny3XszWWDnjIu5cHHPAYmZOnpkSh03jSSi6NPOHxJPQnP+y
nOZksbgqb2w/xh6zW7/x8/whcTTkFJbwjUtXxYWDYmrWwXPZYrdGc8bccmLT
L/27ezPdBeleyIUt9zilf+QqU9xhPA6C5GSDgaWJl9a3BHdcr/vgpl9cNnDD
iDE+2aAQFzM/kdpgjhiz95PE2uCJTHZuRoyij/rskg36IkafmNV5UulJI8Xt
FNMF3fpwlnWCEWOSvjrGhVRUtE62xylGjLj6bny87q1jnKC+OsaFjBipdMUh
7Gar5BwjxkUVV/5P16h7M66DccoRg61M7UzI7a+Rjay4Yslq449x5+Kitzxn
5hSxKy82XpyEbi2R4kOmdlvNJXYmFOkrsSL0+Tsevd6aNdbNBStWFd58c+16
VeFuaCbudX7k+FrstipWjV5OHL/YhT7wOGssV4TihKmikVV0tnSpp7HKtBuc
DDi7GDF278/sqMfXDsi6zBu+bxsxutfIZIMo5qftPtjHu5UYMXbvjZrN2E8S
s03SK/3fuT75MAMRI/bxnt3QYTNi9P1wzGjdnWGyenoQxy97sbfKPcGIMUlf
HeNCyts359f6KdAjxYhRpMh23bNj6hinpq+OcVEjRipdfU2zE1nhkCxv+F43
zeJeMCcbMdhEnFDTNdvHSPEtRcKRzfb42Fpt/DH2RtbDvs8+/2o6/roSfud9
v6wHcbpEstylmY2fujWX4i/WlfDYNL734V8V3RrdYzed/3oxnG03124uXZVK
Zu7jOv6RGnOc1pnsHMcv8iu98+iTL9VrhH7lrsfjjLn6kRoruumLpNJYf8j4
+/cYMWLkV7qCMbUs3+xTsy7jhu8bRox8s3RTFMeLa/jkorvJ6kOdojG+m7Wf
JGabxLAzy4cfIMXD4YgR+6gPznFaX8yRiBGj+cN1I2V3Vj1O9czf3Qlsp7ic
U4sYk9RDJ7uN5puvI2a05tcDl3+z9XGVYsRoLgF689ce2VvHOMGI0axjpArV
hYwYccGEutl+CiscksXUsm6yWPEDsTPtBCMGm4jDglPzoybF55Vje+yN7DbO
rjXjczeUP/KHr49bvnguRdZNs20Y2yCx0n7rN35e1+HTO3EuUrHF82py6tHu
vY6g5hL9s3Tyx2rJCpOdY8htroCXqg1FCsFw2zDOkcmvdP8WK/cu+qWKiBFH
zeLxNyfE7RX7dtKZ2SpipGrecM9qOgnNhXfu+9mv44fkfs5m+lYKiUvfcUXE
iNXX4xcOitkm6SzF2uDS449PPvf75jj7cB9mJ/ZRN3Oc0kWpu2dTXL39nieO
P/Jhd/zgybqcxByJImI0F8WKoSb2Z26VrN5XztMVbI6zxy8YQ2izx+nyU79r
zqprnsl5pUhbl/MUK1J9Y/yTZVLEWMHUch7Tm2Mdo9kGefHla83u2eaZnFdf
xJgkZrT+/b88mPs5T63HqYgYzYzHvgptrGOc2vSWmEgQ6xjxdXDE2EpfxKjX
8Kl/N65weGpLMD33wmvNumiqeIyfL9AXMU5NzNzumxARR0ZOLWL0STdLnXjQ
J33BM11hbyvF1Pil15GIUxcXHX+MvZEr7HwRp7eML64H2Nt26MSW0S70NtT7
PaV3ivSk9TvSi11LXn3jj3Geb66azvXnhjeNmlGc59UtRlHM3Nm9l5pVbzw9
3GVRb6GeWmFj4v8s6ohRz9zp1jquJ8TtFefXd1WODSNGnLlTNEm6+fV1nnac
7ds1QGLzqljCKJ/JNSNGXBTuyFGzYsZc+u7x6w/PkTlSFzHqch7bDgNFrj7y
+F+7Ttr6qdGdyUUjRjfiWR957F8tIka9MVwMO92w6bbJ6n3lvCst9YS4ekQj
dhsW65V1wzr1h/SdyRl1qWV1Oe9yJPoGfQqTIsY6JpXzuMRfXccoTkJ339V1
jL4zOaO+iDFJzGjt7ruYXnhSe0oWEWPqr5/m9JZ4s9R1jCMjxoaaESOu4TP8
pN48YjR1vQ31kXcRY+TN3hcxTlCsaA309J5sxGjqbpbxm892993pRIzTt1pr
NIuLZS10pWJP4zqTTeo+hCX+yqTJYrH9GO+guLl2zk2N6UlrriXSiSOeuZYe
VziZd+mq4U2j5hLHL3I2bExPis/cWI/dO/86th/jM3edCXHNiBH7SeIzd2SH
Yae4LvlDNowYsR4b2495xlzMzMkbMew+2K6PtcG4+lA+kytHjLoee9iHx2yT
nFIbs6b75sgcL0eMWM5jT+DeiBGHDuOHxLHjWCXOZ3KdiBHLeYzkzYgRc/ma
w6ZFsvrKyyM0y3m8WeKEuCKrqgubdcs3f0iOGPFD+s7kjGLEiOU85kjs7Vmd
GjFWMKmc1xsydu/HOkZs/ueIEesYfWdyXs2IMVWzXR87DEd2uy2tGTEm2TZi
NMWbpa+OcXDE2FBfxIiz8vcmgWwYMfrkTKRYx4gRY8zN3owYJyhWtPZu83GC
EaMpDs2PmS+QewJPJGKcvliLW20NkDgIO2ZDhwPEHOwDdi4+zN5Zt0fq2+do
QM7MiSchT7EvclO32stgYA5XN71lidSsY2bejTFQyPNWR0WSdp5dnjdLGpDb
j8VM5zj+uMSMiYGIkUfN4tyW2OO0d/wxZrPHD9kwYsRkg7wKd5wxtwt52nHc
ME7yjR+Su3fimVw/YsR+ksNGzWK2SREulg6/xcozuZzndt/IiBET2nPkidmM
edOoeCZXiBixnMed0foixu79vtBi65N4Eooep9WWR+gr57FbNTcxitykOMe2
uftJjBg5aPSdyXkVU0q7cl5kMxbr9tcmRYwVTC3nsYO6WcfYhUW/i/mzOWg0
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
vhjQ3IT9b2+9PzVCZ4wYcVJG95p9I+/CChHjyed+3yznS3ydrHkmU0mYMWI0
69KzTxaLVogYqXrQLOeTbpY6P2e4jrFCq6RYr6xZzvPfmmUdjw0jRizn+TWw
4FXdrziQT7VExDhTI5ff30q8UpN+sc6MWugID5PL/NRfHF4qfB31XgbdSNZv
r76Rz/mkD5x9XcR55dg+9Rdj6V1zstgYMe990i8uFzGK1WsPa6mJGIUjI0Zs
9XSvbuy4aD8e1hssYhROJGLEGtru/RU5TjBizGLDiFEsPHvYjLlipkxeOWGF
iFG0epbekPH6KhEjlvPu1U39iLvEDrcvBhQ7rOWW2owRIy5u371m2btn2AoR
o6+cL6fvTM4YMfrq0otaIWL0lfNJJtUx1mmV7C3nMWLMYsOIUfSTDC94Vc+t
Gx4/mjdinJ0PnyHf67zcmF/qon6vrQ/wEDfsxbqo32vrAzyEi3VGbtiLdVG/
19YHeAgX64zcsBfron6vrQ/wEDfsxQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgLf/
9O7WhwBtCicAAAAXxmdv/8njz1zd+iiglIrlTV99+J13/7z1gQAAAMCx7n34
V7tP/p+//qfvv37tra2PBf6fVCBTsUyF89v3P731sQAAAMBRnnvhtQ996rup
kZteN3314a0PB/6fm7/2SFcy/+Lv7nr2+Ve3PhwAAAA40JtvvfPxL1zqGrnd
6+6Hnt36oOD/16Vm5ddHb/5BKq5bHxQAAAAc4tZv/Dw2ciUbcCJialZ+ff6O
R7c+LgAAAJjsgcu/yW3bW77+07/8zD0DyQavX3vrm5eeqj/k8lO/O6klfN95
98//9r3/rhduvfrKH5rpPZceu5Ia+6sc2lHSQaZD3fooVhJTsz78D3enwpkL
avMk3PXgMy+/9ub6xzmXO+/7pSWY4GBv/+ndFPa3PgqALaUKeXqN/OFU0brj
B08uejzM6PZ7nrAx6Lk491YJi3rx5Wupbdu1aj/2uR+mUPzIEy8OJBvc9NWH
0/uPPvlSfDMVsI/cdO9JLeH7zUtPpeMsauPvvPvnT972wF/83V1PPvf7+P5v
r76RTsLf3PLvJz69JR1eOsgPfeq7Z9FZdLwvfecXuSj++PHn00PnE1/8Ue6Q
SUU3/vAT//O/6cr+/b88eKb7JaUvaAkmOEYXMe59+FdbHwjANroKeXqNbPql
en4Km99/5LmlD4zjffv+p9PFSk+6rQ+E/c69VcKiUqnITdrYro8t3/t+9uv8
83c9+Ez3Zozt6UNSAeve/+ztP9nga1SevvJKKvbdIcWBgH/73n93b/71P33/
2ptvd2/Gk/DPdz620SGPkg4v9pVtfTjLevg/X8iF8LZvXe7e7PrKujfTVcth
LV3NbrOkutvtLFx95Q/5e6W7bOvDgfOTI8aN00cNEKVK0ae//FAXCdM/9jb9
Ug0/h80rL72+zkFymNi0Sc+7rQ+HIefeKmFpt9/zRHPp3bf/9G6c/dElGzz7
/Kv53k+vz/zrf3Sx/c77fnlSS/imYv/Rm3+Qj+ev/vF7r77xx/T+489cjcd/
89ce6X7+q3f/Vzz+Hz/+/KaH36vLkcivi90HfvWVP+TZcKkoxu6mS49dySch
XbvuzbxZUreE0UlNiNurS82Kx6/9CJPEiFEHDYAbQZcjkV/p/w78cMyB70a1
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP4/9u7+5baj
PBj/f7qhCFIoghREkIJIa4sElRDUlhDaKiGoQbTtE0NeNJ4aG4/RaBobj3mp
MaYxpmneiMfEpOc738xz5rkya9baa++93vZ9fz7sH07u3GeftWfPuta8XDMD
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzt2Rdee/e9/137KqCWquXTz7+6
9lUAAADABF578w9/dsv9X3vgF2tfCNTuvPc/UuV85fXra18IAAAAnOqWO6/u
PvV/0uvxp3639rXA//PYtZdyzfyrv/+BHC0AAADO2j0/eCZ3ctNLsgHbkVOz
SuW8+zvX1r4iAAAAONKzL7z2J395T+nkptdnvvJDyQZsQUnNyq9UUa899z9r
XxQAAAAc7Prb7/75rd8p3dvS1f3n7z/d/P23rr+z8BUep+86mz8/lw9146wu
9XT3PvJsHH7Jr1RdL2QhXMgPBUtyEwGX3Dt/fC+91r4KAIZ88e7HSt/26s9f
/MxXflhGY7qnzzz+1O8+/oXvbT+2v/zq7z/6+Qd/+8pb1c+v/PT55l4it371
0b4Rp01JF3nLnVfXvoqFPPfi6x/69LfLDjBlN5j0SpV27aub2PW33/3Ybd+1
BRMcLUWMFPbfeOvttS8EYDX/8C//nl5rXwUAva789PnSq80R+5XXr5dtN6pk
g9fe/MNHPvtA+vmd9/7Hepe837vv/e9f/+Mj6To/efv342DLy6/+/k8/c1/6
+Tce+mX8/Yd+8us84vTsC68tfrEHKIvF7n3k2bWvZXbX3373E1+6kuth+tbS
d3fj/RORSnVNVXfta5zS7d/8WfpQ6f5Kd9na1wLnp0SMW7/66NrXArCOR5/8
bW4jpT+sfS0ANPz2lbc+/Df35lj98S98L7Vg889LAK+SDeKOHI9de2mlq97v
n7//dLnOu+57Mv/w3ff+91N3PNzdSyQWwsdu+24phK3JORL5Oj/06W8/9+Lr
a1/RvP7hX/49pmblH6Yv8S/+7l/zD9O31s1xOlP/9sQL5cNenhwnmFCMGPdf
/dXalwOwtDiF6kwNgA1KndlP3v79vh59bM0+/PhvbnzwsKQtx/ann3+12lU4
r+z42gO/iD/86OcffOv6O7FHn193/NPja3+CtnRh8To/8aUr218LdrSrP3+x
Ss0q4ohZ+u4uwH7RJTWrvC5DjhNMKEaMSzJGDVAp2wiUMzXWviIAPiCOSHR7
fNfffvfjX/heSTb4tydeqIY1tnle0lvX3ym7CpfXRz77wMOP/6Z7/bd+9dG4
qqW80odd+3PUYo5E39DEhRFHJGJqVpFXjeXXxhfE7ZXuoL/6+x9U36z+I4zX
HcPMY9SbTWgEmFxM/y6vs9jhEOCSePI//7uMSHzurh81fyf1AbujFqmhG0ct
mrH9aw/8Yq3+421f/3G5tru/c617/R/9/INVMkkZjSnJMGXXkY2oRiTizsnN
db7pA57FXpT3PvJsqofVD6vFYn0VKX7RzQVxf/uNn65SCO/88b30BXXTk9IH
SfdF9/e/deWpOJpU0nu2luOUCrm5siN9qP96+c3lr2cq6WaZKZcvdf9TTVhl
jDp9os3m8k2uihgp7F+MMeq+iHEhrXizcIRzaWNcKmWfwPT66398JO+FuOvZ
4TDda6mNNL6hsqJmG+OiRoy+hlZqHHZ7JRe1EM5FqpbNKeD0DW6qV8KmpDrw
0c8/WEYkBqpE9yzg1OUv+9zuWuclPf7U73Yrbajy4KPPVakRsTWeX08883Jc
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
RozuJsnxr+QRtm4PPTdUFm5jNMUxvVIVUxujygnZbT49aaRYwtXNkkfYul2b
VXolB+luwb2dzJyLId778x2pkO67Zss2zj9O2H+stq6ab4FG3Pw/HnZT2lTT
9h9jN/Bvv/HT8X/x6s9fbM4AxlnCeP3lMZeKsZRkbC0f9K/vtXdLzPTBTw/R
qRCaM0Fx46xpDx0e3lA3PWGbuwSkm2V8XzjOnvT1H9NXP+FA+t6Ikb7BPANY
2TtrVo3tlMd0qpnN65/wvh4TMWKyQfNmSX8xbkdcfiE1k6qNgCpx9mThiJH+
rW4uX6WvnGPLNkaM5l027TBajBgxHaukWh10mkBsZvT9xViS5V+cL2LE+hMr
W/PYpngkWbqDmvtqNh9P6Q9xOe1A7+YU1Yxnqedl+C5uKZmuZ3gPnzGrzPpK
cqY2RnWzd+vJrqfXEz9LX8TY+yXOFzH21vNqJezeNkZzv7K+kpyvjbG3nveV
ZxzDjEcGlLCztyZMGzH6rjOOYR500FtqkHQLJN2DD/3k191fjhka00aM5ueq
RiSabYx0ncdFjL6SnLCNkS6j+WSJmcx9Yb9Z/ukvNj9Ls3E1Xxujr4jiiEQJ
VqmNUSJGjGx9Y9TN6+wryWnbGM1362tLNxeLRam6Nrs2C/dKDqrn1Qzd3syc
vppwUEleKjGjcpU9kaqveKoMnL0P/al0Z4FzSVbrASf5t5rrnk7UHabOwbA7
p5NLMva5Hn78N6dfwI0PthZWGe+Ns2NT7UUZDx3uzl9Mq7lGpsjr66fa7/qU
iLG3BRUTuVMrotrTrPrlFCvSp14yYlQp5fmVmhndCdzd+3Nt3Ymtge16VowY
w3naObu7WyZVtkmMGN09B3JPbar5xypidFM+jkjmjB3PbiFUJZlu57kjRro7
Yg9uuOVz44NlUt4kFUJ30+9P3v79dP3ds2WrkpxqC6YqYnS3kdy9n4PdTfkY
mGsb3ml5oCTna2PEJ2N+pQqfrj+mJ3UbonEGpy9ipC9rrTbG3no+Zje/vevN
B0pypjbGcD3Pd0e31xMXi6VvqkrO393sK8WO59wRIz1Pu9kOcTx27lUMc0SM
VIbpidO99+MMzsgNrou9EaOvJCdsY6SK0c12qHaDjxGjvA46TWzAHBEjb8vc
bR7EteTpi+tuPJsjRkwS645Rp580F633leS0bYzuoGJfW3qOociZeiUH1fNq
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
VvNrpZZVG3Lm9fVx/vHQN5wpYlRheXiOKS5vKU/bGyJGx4kRI6YnlQfljVb/
cWBspztBllPizyVixGT1MSV57hGjaYMRo6m7e+1wSa4YMarZ8IGT0Q61TMSo
ej3HjUhUE9nDJblAxIj1PL/ygYzVCWvTHn8wYcToezIub9qIUY2TTLhPYF/E
WKCN0fdkXN60EaNKHTku/buvjdGMGMu0Mfa2pWPEmNUCEaM6TnF4T+OYmZNf
OT+tu5BwZEmeUDZn4MNnyOc6L5fzQ13Uz7X2BR7j0n5ZF/VzrX2Bx/BlnZFL
+2Vd1M+19gUew5d1Ri7tl3VRP9faF3iMS/tlAQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAHP72gO/+K+X31z7KqCWquWd9/7H2lcBAAAAE3js2ku7T/2fv/i7
f333vf9d+1rg/3nnj++lapkq59Wfv7j2tQAAAMBJXnvzDx/57AOpk5tekg3Y
lFQhc83808/c9/Krv1/7cgAAAOB4t9x5NXdy8+uxay+tfUXw/3v8qd/FmvlX
f/8DOVoAAACcqX/+/tOxk5tef3bL/a+8fn3t6+Kye+Ott0tqVnl968pTa18X
AAAAHOzZF177k7+8J/dtP/GlK+XPn/nKD7vJBuknjz7521Wu81DNPUPeuv7O
E8+83P35tef+57U3/zD/RZ0qXeST//nfa1/Fcj53149ybUzVMlXO8uenn391
7UtbSLrj7H4DI7lZgEvu+ZfeSK+1r2JlqQQcLHIu+rpmbJBeyVSuv/3un9/6
nbLJxiuvX4/5MOnP1e/fdd+TH/r0t7cf1lL1SNf/8OO/qX5++zd/lj9m/GG6
9z/6+Qc/85UfLniBR0oX+ZHPPvDGW2+vfSFLuP/qr0pVvPs711578w9/dsv9
+T9TpU1Vd+0LXMK3rjz1J395z6UadoPj5IjhZgEurXf++N4nvnQlvdIf1r6W
1eRCcLDIubjt6z9OzftL0rU5d3olU/ni3Y+VTm4e1Erx6q//8ZFmskHZkSOF
tS3H9ldev5676h/+m3t/+8pb5ef/9sQLzb1ESiHc84Nn1rjesdLl5ev83F0/
WvtaZvfci69/6NPfrr6vuCdM+tbWvsbZpbsv56R99PMPvnX9nbUvB7arRIx0
s2jIAZfTl+95IreR0h/WvpbV/MO//HsuhK898Iu1r4U9Hnz0ufxl3XLn1bWv
hT30SqZy5afPl/7sHf/0ePn5K69f/9PP3FeSDXIhxwyELcf2OIIUD9d++dXf
f/hv7o05Ffn3H/rJr8sPU7169oXXVr38XnGxWHrd+8iza1/RjK6//e7Hv/C9
5vlH5Vyk9Erf3YoXObd035X8tPS69auPrn1FsFExYlySMWqAyqNP/jZumncu
mwZMK+fAl5flLVv2/EtvxK7ZxufBLzm9kqn89pW3SrX/xJeuVGs6YgT74t2P
vfve/37mKz+sNkTdZmz/xkO/rK4z9dnT9X/y9u/HH/7JX96TwnJ176fXx277
7gaXt6RLShcWr/NDn/72cy++vvZ1zeX2b/6sSs0q0lf5F3/3r/l/pe/uAi92
jvlp+fXgo8+tfVGwRTFiXIYxaoBKSf8ur0t4psbLr/6+zCDn10c++8BZbPN4
Cb3zx/dKe3778+DolUwidmP7+vIliy+9YlZJGbKokhO24IlnXi6JInFopXn9
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
L72MgVeTv2Xmrq8kV4wYJZevms8qucSx8sSZu7hSoBRCVZLNvfSPcETEaJ4Z
EVNhy1kG8fyXXdhLpK8kj9u9qmkgYpR6fkqSQ/eEr2q31TJ1WCXezBQxSj0f
WW7l+4pvUr6vau44JquXXOIqZ2amiFH+lepmKc2DMbt+NU/4iiVZan7MNpkv
YsR6Hm/25pkRcd72oIixfBuj+WQ89NSYmOPUjBi7xdsY3SdjLPwY4QcyWsub
xEJontczX8Ro1vMTy62pRIy9JXmcGDH66vmYcitf+iln/M3Uxuir582Iccqp
MUu2MfrqeZUjMdzGOCUHfqY2xt4nY3WE69EjdQv3SvY+GasVKyW49Z0Keqip
Isb5ivMXSx7PnVuD3brUbA0eauDen1ucIkmtwbiKp5Tz0ftETRUzB3zrylPd
AFKt2kvFWx2WtDthnqXKJF9yx+/cGuyWZHdn8iNsbcfvOKVyysjJhBGjmk+s
2l3lWTxckitGjFRzuq2F3H/srkTO/0R3qD89v5olGQ90WDJiVKcIpTZMd4/Q
1OJKv1ad/7J7P8N5uCQnmZkdjhh5nv3EZfvdjIXuKp70TzT3TpwpYuR6PnIf
8nwrdd8kzz923yROHabfqbJTZo0YqZ53b5Y8zz7+dq5a77Ek8yvPJ3Zz8meK
GLn13h2RqO7H4fy0voixYhujejLGEYnxt3NMga4ixiptjO6TsTriJ9+P3VZQ
9SapGnfnj6q9ROaLGH31/MSTC/qkiNEd1pi8jdFXz8enf+cRwhP3R5q8jdFX
z7s3e7ONcajF2hjNet5N/x5uY5y428nkbYwxT8aBI1wPtVivZO+TsbtSePf+
OMmJi8WiqSLGmYrVfuFT72+8/2xqRtHqQIdD3/a4zbQnFNcalziT/hzbWke8
bRyNTJFzpkSR9LbNp1XcSj2FptLuim2/49Yax8b/8qfeNz9sVYWOeNvh/XPW
EqvQcaefTB4xYlurlHm6yHiWwd6SXDFiNOtPapc2J0FSxGvets0VTzHDZOGI
EWd/UgQrbxJv9jhHXH6e/lace22W5Om7E+yNGKmZdPqjPLa1+gohJniXn88X
MQ7qR6TrH/8mceowPafi6NPcEWPgZhk/dRLztGPE6Kux5ZfnixipnLt3XFwL
VjUPmj2gvoixVhuj+uDHTTfHHKcqYqzVxogfvBnZqp8317+katycP4rzxTNF
jL7rTE/GI955jBQxmvMv07Yxyueq6vlB6d+TbEEwbRujWc/jKo9oku21F2hj
9D0ZmzkSfW2MSXLgp21jlM/V92SMd9wk+3gs0CsZ82RsRsL0C0ccrzbg9Ihx
pqrt97ezE07VGjz0rx+9mfZU4nrG8vrWlafi+sdD37PaO2uVo+G7Z4bmMfw4
/3joe+49Q2otcVHnEX99kozKOcT5x0P/7hwRo5v3snu/p9Y96XKgJM89YvRZ
MWJ0817yXFXcS2R3s6dW7QywtyTPJWJ0Z/dSSaYP253FTu2uc48Y3dm93fuz
fluLGH36IkZ3di/FitQWXStiVGv38uvQjNYV2xixnpfXoVsu9EWMFdsY3SPF
04MpFULshuTXoasAmnkvk0eMZj1f4NTyrgkjRhxZjfV8jsseNm0bo6+ez3Hl
wyaMGH1Pxr6/3tfGOO0D/V8TRowxT8YSMWbN4lggYsQnY3ndee9/VDsc7iZd
NXNKxDhTEy6Xm0NMJDvoL8Zm2IpLP6rWYBnXLUvwDn3DvWecLaM6LyknuMZO
9EHvFtMy12otDChPyUP/4gKLxY4W5x8P+ovzRYzq9JOSOFqlgg+X5LlHjD4r
Roy4OH13c+Kv6j+Wnlp1BMxwSZ5RxIgb4JSSrE4/KTNB5x4x4oYqu5t7m2ww
YvRpRoy4eGQXthlcMWJUqeDHrZhbsY1R9R+P25egL2Ks1caI9XwXBkKrxSPH
HX+wQMToq+fLmzZi9NXz5U0bMZr1fBUTRoy+et6n2caYxLQRY++TcbfU1MkC
EaM6TrFseBVz+XaTrpo5OmKcnQ+fIZ/rvFzOD3VRP9faF3iMS/tlXdTPtfYF
HsOXdUYu7Zd1UT/X2hd4DF/WGbm0X9ZF/VxrX+AxLu2XBQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAr735h7UvAdpUTuBEb7z19jt/fG/tqwAAgBvX337341/43oOP
Prf2hUAtVcuP3fbdVEXXvhDgjN1y59V/+Jd/X/sqAADgRmqX7j71fz706W8/
9+Lra18L/D+pQqZqmSrnF+9+bO1rAc7VP3//6RRG0uvfnnhh7WsBAOBSe/TJ
3+amaXp9/Avfk2zARrzzx/c+8aUrpXI+/Phv1r4i4Pw8+8Jrf/KX9+Qw8qef
ue/lV3+/9hUBAHBJvfL69dQiLZ3c9Lrjnx5f+6Lg//fle56INfPDf3OvrhNw
kOtvv/ux274bI8lf/f0P3n3vf9e+LgAALp3UCk1t0dg0lafNRsTUrPL65O3f
13UCxrvjnx7vRpJvXXlq7esCAODSufs710qL9BsP/fLjX/jeQJ728y+9cRZ7
cVx/+91b7rzaXUt17bn/+fI9Txz0Jm+89fbUV3e8R5/87dce+MXaV7GQV16/
/me33J9r45/f+p2yh0N6XZ5CAE509ecvxvTOz3zlh/nPf/KX9zz9/KtrXx2j
3PvIs44JOBdPPPPynff+x9pXcXm5WQA27sn//O+yNP6WO6/eeH/X0/KTT93x
cEw2KDty3H/1V+td8ih5xrMaLHrr+jupIz8+vSe/SS6WLXj51d/nxWKPP/W7
ta9lCbGj9OwLr6Wf3PrVR8tPUtVd+wKBrSthM73S8+v62+++9uYfPvLZB8rQ
rk3Pti/v4fPhv7n3v15+c+1rYY833no731+PXXtp7Wu5jPLN4kwNgM166/o7
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADg/2vvXnxuqcrD
8f+nO2lMTBPTxJg0Jo1JY1ptCCmGEK2GkHoJISohau2RyKWKQvGABRGLyEXp
KQVEyi0UQfD81o8J6/uw1qzZM3vPZe/3fD7ZMcfN++539syaZ9blWWsBAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABs5a23373uGz97+533tj4QAAAAgAvrxm8+vPvsv37p9ke2PhAAAACA
i+meh5/bffZfu1f699aHAwAAAHDR/M/Lb378H+7MPTDp3+mdrQ8KAAAA4OJ4
7/0/f+YrP8ndL90rvZPe3/rQAADgIrvv0StvvPXO1kcBYz321O+fe+H1rY+C
UV585a3Lv3ph66OgdNsPn8gdL9ffejn/O72/9aEBAMCFlVqyf/F3l2647aGt
DwRGee3NP37i+rs+/cUf273l9HWJFh//hztffvX/tj4W/p/Hn3k5d7nc9O2f
p3fS/+Z30n/d+gABAOACevdP7//NP93X1brvfPDZrQ8H9rvuGz/rSuwt33ts
62Nhj5xo8dlb7je95US88dY7f/WPd3fX5VM33vvW2+9e/WBP6vTv7s30X2VF
AgDA7L76/V/mcc+Pfe4HZnZw4i498ExctsL0llMWEy3S6/Z7n9z6iPj/5TlH
f/F3l5587n/z++nf6Z3uP8mKBACAeT38xIvFMoxmdnDKuhlzscT+5XU/fOX1
t7c+Lnq88dY7n/zCPfFiFe19NnHng8/mK/Ld+54q/mt6J//Xuy7/bpMjBACA
i+flV/8vtV67mvYnrr8r17onzex47c0/nlqy+pWX3qjffO/9P/e+fy7efue9
F195a+ujWE9vLlY6CZ/+4o9zx0vuivn81x40veUE3XDbQ7njJUeYT37hnm7O
C5t49vnX8o3z9//8QH3jpHfS+zkr8qzDZippvasP/c/Lb4oYwAWTKuTptfVR
ANAUq9mpQp6q5bd877HcCfPvjz8/8nOuv/Xyjd98eNFDnSR9kdRqqMfZ7/jR
b/76pn873/Ser37/l5/5yk/e/dP7Wx/IGh576vfpIqZWUvF+nDGXiui//PTp
/H/Tvzc5VFruuvy7fHW+dfev0zUt1n1lfSkApjCY+zBbayPHzvmzDjs3f+cX
dS9Tt9yNiAFcMKlCnl5bHwUATbff+2RuEF164JmroyvnUV6R40f/8V/LH/J+
OUciry3ZefrKq92w75fveHTDwzvY5V+90J3nW+/8z62PZXHdPkfpy/7tzT+N
Tad8EtLrq9//ZfdmXM7i2edf2+iQKV156Y2Pfe4HxQK8ce/jE4kY15oUAEcu
oBRvtzMNO/krFKsPdSdBxAAuklwht6cGwGl64rd/yIno133jZ/n9mKC+d+OS
+MMf/4c7TyFZ/ebv/CK3GnJmTtzgI73ue/TKtgc51Suvv53Ho9PrkSdf2vqI
FpSKXN7nKDb94qD83/zTfTmX6bU3/1hv6cK20tXJ26vFvtx0cf/25p+eVMS4
ptz/2H9PmmoasyIffuLFFY5wRjFipOdU3lw7xf/8pUQM4GKIS+Slf9hTA+DU
xOUxP3H9XcUqpnFmx7fu/nXrQ4puja5dvG2yeqxax4GAG7/5cHwzNf3q6S0n
K04Wa12yi+SOH/2muIip6Rdb7vV2XXF6y0lNiLtmxY7QItHixVfeSjfgiUSM
a0o88yPnYx6QFXkiYsTYhc21r7z0Rj4JIgZwMcRYPSnIA7Ca2CPRm1CRkxDi
0GHhS7c/UrSU49yQ9cX2RX6l1vqtd/5nfZytlQ1a7cEN12yseyS6tKXeQzqX
9mzrOONOuLHHKY7F96bXxqt8z8PPLXz4TZPKT+uHT/AiTir///7488OJFjET
Y8OIcU0txBp7JCYNj+5dtndbreP51t2/rsPm9bdeTpG/fn/DiNFyaud5E72R
0Jk5Tb3XJb3peq0jjnrkV3pz0oec2sWaWhc6wbrTJJPO/6ldrKnO/fgnFbZz
L5nnfvynIy6P2Zrd/8rrb8eNS+qtjlKVNbahYm/M+CV8Z5SKR65af+xzP7j8
qxfq3pj0A3EP1rrplwLC57/24BO//UPx/ouvvBWnvawp9khc942fxaV76mUk
00n47C33n8XMjtQwr+eCFalZqSDVvTGtJeaKArBJ/m26a1I5qbchSF+kd+HZ
dNfc/9h/F2+mk5C+yEntZZDumvHLgIxMtDiFiPG3N//02lkGJK7AM3WJgJFZ
ketLN0u64+rMnJgUlyJGb29MOgmbR4yWVsS4pqQ6Rm/7MV3Qs5sQd+GlQNo7
aT3denf86DebHNI1JY56pLsm9saMf7ym2+rUEgLTzd4aAq61Isa5SM/ZSRWt
rVols2hFjHOR6hitcfBaukypsnEWTbNeJ9gqOVOpnpmXx0yndKD8pGicY/gN
tz3U+pBuHkGckZTaX+snq3/90uNF+yKOs+/CzKOY/1PMj+gq6sVWuekUdRX1
9ZfwTYdRTBYrtq96+sqr8ee7k3D6YblbHrNeBiTvXLz7cNGJ7973VLyI3TyC
1sem65vb/p/+4o9XPgn50hRhOd0L3VEVC892fZj1zdKdhPGxfWn5Zh/T6sk3
y27fMqcnEjGukWVAYo9EEcxHikszja8SL627WYr1uuPwQRcx6hlJXUNj24jR
0ooY15QcdoqO+m6h0fOaEHfh5fkvRfuxCzsDedTMIkeMPOoRZySNfLzmsHk6
S/h2N3uK4WOafq2IcS7yXiGTKlpnurFIK2Kci3yzjOxe7gYcT79p1nJqrZIz
FZfHTGH5xVfeGv75uPPvXZd/17357p/ezx8Shw5jtsbKfZuPPPlSb45EHGfP
eeYx0SJV5PKCKnFp4jgQEKe3rBzbeyeLxVV5Y/sx9pid8kBAsaBuzm2LqVk5
PalYAyfV6IY/PKZmjVlodEaxsyj9u3szHX+6F/Idl3uc4mIUsf0Yc7ROYeiw
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AACAd//0/taHAMB6WmH/vff/vPKRAADANeWG2x56/JmXtz4KANbw7p/e//t/
fuDKS28U7z/3wuufveV+nTAAALCQuy7/bvfZf/3kF+554613tj4WABZ32w+f
SGH/M1/5ScyESf9O76T3v3X3rzc8NgAAuKiee+H1j33uB6nKnV7X33p568MB
YFmPPfX7Luan11e//8v8fvp3fl9WJAAAzOvtd977m3+6L1e50+vOB5/d+qAA
WMprb/7xr/7x7hj2H37ixfR++t/4ZvoZWZEAADCjm7/zi1jlTq+/+LtLzz7/
2tbHBcD83nv/z9d942dF2P/L6374xG//kP63eF9WJAAAzOX+x/4717Rv+vbP
c/X7Uzfe+/Y77219dAdK7Ytv3f3rehnJl1/9v7NO73nuhdfve/TKkR/y4itv
3XX5d7Mcz6Le/dP7vctQPH3l1X9//Pn6/UsPPPPK628vf1xM8MZb73z3vqfq
9x976vemt2woXZQc9m/+zi/+4u8u1Z3wsWf+rMNmK2IAXDzp8ZpeWx8FAE2p
Mf7xf7izq2N/+os/fvud92IK+pduf2TrAzxQ174o2u/vvf/nz95yf2pZPPnc
/251YMdIV+evb/q3j33uB8+98PrBH9KtsZlOwjEfso5uMYqisyidhE/deG8q
tKnoxvef+O0f0pf6+39+wO4tJ+X6Wy+ni/jIky/FN195/e1PXH+XRb+3kgJg
7nL5/NceTLfMnQ8+W/TApHfS++m/5g6Z048YvVoRA+Di6R6v6WVACuA0pQp2
t+FFesV2fVyG8Uf/8V/bHuQBnr7yam5fxIGAb9396+7N1PR76+13NzzCw3z5
jkdjX9lhH/L1S493H/LXN/3bKec4Xf7VC3XJTL50+yPd+6no5s6WdDXTNe3e
t3vL6bj0wDPdRYm1wXTV/v6fH+jev+G2h7Y9wmtQvFniden6yoppR11l/iwi
RktvxAC4eGK3ede7vvURAVDq9iGtk8zf/dP7eWHesxs6TO2LT914b1xG8rU3
/5jef/yZl2Om/Y3ffHjrI53m3x9/Po5Qx41LxnvkyZfih9z8nV/MfpyzePnV
/4uLUaTS2DX97nv0Sjz+W+/8z+7n09WMsydMbzkFzz7/WrzjrvvGz7ra4B0/
+o1Fvzd007d/Xiy923njrXe6hXmLpXdjVuTJRoyWVsQAuHj+5adPx4iX/u/W
RwTAR6RWao7S9Uh03Jz6b2/+6Rl1pOcRzziemxoUedg3v+55+LmtD3asokei
bj2N8dqbf8zD2fl1gssjxByJ2OMUZ8zl12NP/T5dx+JN01s2182YK65Lqg3G
+S+9OU4s6kf/8V/5zH/90uPFf+02p64XEMiJc6cZMVpaEWPr4wKYXzHqsbOn
BsCJiT0SreZqXBngth8+0fshvbH9id/+Yatk9dgY//QXfxwzYfLzKDcMW02/
dPwn1ePULV+Tjzln+PzldT+cNM83zzKIJyG1UF5+9f+WO/gB6eT3Frw8Wax1
EdMxx2kUuaswfalc/dhwektvEy/dEalc1e+nO6h3QtyppfGkkjapnyR2hOaL
mK5O7gNMVzN3Km44vSVdrJO62RcVeyQ+85WfvPun9+ufefrKq/WbRVbkVhGj
pVhlqBPn2BYRozdsnlrPTCtirP8hG2rVMS6q3pJ8LtIdd2o30aJO7ct2C17l
KJcftWe9p8bVD1Yt631U9Tr3iDG1onXWzj1ipGJ51o/XqU6tVXK+8qyN4Skb
cWWA+sfSh6TYXrQfX3vzj6lttUmy+pWX3ojti/TQqVMpUus+NkPy9JasyzY5
qbVEbr/3yXz8dz74bBzmGD/PN/an/ctPn948x6nLkajngsXJYqn49aZS3PPw
c3UqRTddLvbebDK9pZuyUacnpTuiXn2omzFXr3fdpSJMzXFa1A23PVTfLC1x
6sdXv//LuJZITEWIE+s2jBh3/Og36//p9aV7PN3p+WZJ333Sr28eMVq6iFHv
EHfrnf/Zihh5QlzWBdWTmhDXGzGm+vqlx/M83HPUW8e4qFIZToWwtwv0LFx6
4JkDAsuZOsGIkdcJ7CoPcfZo+k9bH92BusrD+NmjZx0x0lMpPZvGV7TO3blH
jFQsU2vx1AakFnKCrZIzddfl3+XInFr3Az+ZVwaoU2XyhxTtx9xps3KyerfF
T25f/M/Lb16tJu/khkPcgDsuqJKzTU5nv6TYcMh5HXmB0924eb6p9RRbH92b
sU9m/R6nvNpznAsWU7PyYhRFYm3utInb6aZXuqZXP9rMXH96S6otdOWtGGfP
XQ3FzZJX5Ig3Sz4Jp7OXQb7Zx6w+VPRwdqNXsTa4C8tx3PK9x/KbW0WM07nZ
FxVX/TpsffVtI0avfLMU65XFBa96I0YMm3ns+HQmxLUixiT5JOR1lc9Lq45x
IeWweabrXec6Riu57iI55YixC9NLz3T2aJQbFGOSJc49YuQ1fA5b5vG8nHvE
yI/Xa2ED1hNslZypOJQ5puR0HV9FVfbKS2/kD4n1+VhFX7lvsBjxzO/nB1NR
RY+zJHK3Xsw2OYX9kuKuJUUPWJxSNDxqFtNIittnOMdpOXmfo64Ok/vA44K6
8YGbH0zxJMTlYuIDt95gfZ0vFfcg2IX0pKIbMBfOOGMuzuy44baH8vunENtj
xEivdO0GfnigByz3ucUHbiycG0aM8x01GymG8WNqp1tFjJYYMXIHe1zwqhUx
4vIIcex4zYjR0ooYkxSJZ5ceeGb241xUq45xIcUZc+fYfixSVS/8etenHDHi
47UYlzy7wfo41Li36XfuEaMYarzYyQbnHjGKRTWHMxkugFNrlZypVOzzdP7x
7Z2icyNG9di5UbTU1rxSvd1E2c3f+cXuwxyJLG6Z1MX2emLL5vslxclixXzD
brbXmPZj9/V7o3r8kNVWr61XFe7qDLFHogjIXXJmfRK6j6q/fjELZoUvdbXa
g2D3wTh7vapwl3UZZ8zF9mPsw+xe286RiRFjTNwYmAXWfVTOT8tixWOTiHGm
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
Rk3EGK/eePeA3mARo3ZMxOgd4n/kyZfqJXwPGMBdIWLU2ynWizTOboWIEct5
boykm6XeLjY1wGODOp+EqYsNzhsx6oVnUwmf+rGzmDFitJ6MSxx21jqTM0aM
uGZO9/rUjfdukv49b8Sot6Qf6JEo5vTtDsqBb53JGSPGmLp0jBhT/9x460SM
uHBQ90oViXpztHoN5L2WaJWcl4+fId/rvFybX+qifq+tD/AQ1+zFuqjfa+sD
PISLdUau2Yt1Ub/X1gd4CBfrjFyzF+uifq+tD/AQ1+zFAgAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAJb27POvvff+n7c+CgBW8vSVV7c+BAAAuOa89uYfP3H9
Xd+6+9dbHwgAa7jy0hsf+9wP7nn4ua0PBAAAri3X33p599l/Ta/Hnvr91scC
wLLe/dP7n/nKT1LM/9jnfvDcC69vfTgAAHCtuPTAM133S3p94vq7Xnn97a2P
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
WTfi2Rs264hxgloR45pyanUMBrTqGKwjRoyip+Lrlx4fWcc4NbFHYleNao23
VR1jqmINn4u6zOOwDVslk8Q6xm6xPOoTt2Gr5EzFQczxZSYWthtueyi1L1LD
Np75kbX65cSnTJ0Em0Juby9lnCuRmof1lKXhKVpLK1bFrI8kpie12o9FAkn3
Sqerd7WHdXqc6uU9u06zVLTyO3VKW3o81S3Z2GnWJasXU5bqfoCFxIk2+ZXe
iT0S+XXX5d/VqwoPrHcdE0hWbj/GiLG3DpNOQuwIrfu+4g5rKWIUmyXtVpze
EiNGvsVm6SdJTY+c35VfN33758d/8sG6RO7dxJZsuk97xzVihXbbPuoYMXYf
Nv1iR2gdNuuIsdXBt+S+ryJibH1cqzrBOgYtrTrG1sd1rYgRo+77imMNZ7Sn
RvLd+54qClWqBU2dPbphHWOSegvX3bU3vWXDVskkMS0hv8bkM1wkG7ZKzlRM
D5iaNxV7JvNpT6EstzVame0phizdLRY74lrti97nTjwh6fhjgn09F2Z9rflf
WcyubHUWxV6mOCErX8T0i3kcOX3a0j1ORY5EPox4L7f6vXsvYmxwxQ+J0yhW
WB4w1hZ6z3O8WVLjIrcv0pvDq3MUbcb8veZN2+hVRIy9m6PFRIve+V9FbTDf
ZenNfEJWSD2NESNerN5kg7fefndSHSD2MsUPX2F5hN6esXiDTM3G6b3KMfNk
nYjRO40rpmb13nGtG2TMCVlhnLT3yVhMFosRY3wuX/qQ3uNvnckZpYjRO06d
2he99Y10nPVJiH2YY+oYK0gRoDfFepZy0vshrTM5r0nH/9hTv++9WVp1jBWO
v9ei5fyRJ1/qHdDZKrOiiBi98796Z+gXH3JqmSFxxmiskPcOHKdv1FvYYmrW
ynWMlt7zXKxRtreZdmoXKz1S9y5nEfWusluMOK9Zx5gqp2YVFfLek9CKGOei
VVHZqlVyvoqUj0m/W6wM0L3SfZRqRAOxvYuiiy6oUlSnpxb1es/cbig89jht
0q0XMxIHMvFielLdWRQTub9+6fFihk4OGnFjrEV7nIrJYqlNEWem5Crc1Idj
kQu3+6Bbo9uTKL+z6DOrWF/iagjRsQFej253wzHxMtWpp7EoXnrgmeEh/nkV
ESNdr1yHqW/2IlOu9ZkxYuRqRvpSA4t+z6uOGLHjqO4nuenbPx/fXx2zwbuN
kIaTgmbURYyiIrpQysfKEaPuJ4lFsYsYxZy+9PrufU+1Pna40773TM6r9WSM
N3sRMcYvI5k+pO60b53JeaWTWTcDuy67utXTRYz6JMQ+zL11jBV0EaMu593N
fuTMju5D6v7q3jM5r0nlvBs6qfuoB+oYm6x3vWg5705CPQ93hYjRUkSM1o/t
rWOcwqT7rJiQnkrR8OzX9I3qx2sxfrRmHaOlFTFiRSs12GOrpO5xakWMrXR1
jPHLgHRFsT4JccR5zVbJVLFpluoYw1MVWhHjXHQVlXoJpg1bJWeqXvZkqrhK
7S4sBxEX3oxXKvfrLhfbiz1WDhv4iGE59+AVeyKvvJZmjMB7eyRu++ET+fhj
WI6J3LniWkwqybXf3vV+Z9e7PGasbx+8pFX85FxxLfZEXij1NI5f5MdQTE/a
hUkoxQoPuV8o7qIeK3IxLTM/huKkkuXWiOiNGHHyVLzZe1eLaokRI37fuEL4
mhFjYBgxn4Qxo2YxQube4Nai3/PKEaMo58ste7JyxIjlPO7KlL9vvA13I6Yk
x4gRa4OtMzmj1pMx3uy9EWNMRS5/SFEl7j2T88o3S1HO833dGzGKk9C7dmir
jrGCGDFiOc83+zH9JPlDijpG60zOaFI5jxFyUh1j/ZUBlivn8SSsHDFaeiNG
y946xumspRm701Ntp3uzlROeI0Zxs8QJ6WvWMVpaESNWtHJwi62S2Efdihgb
ynWMMTd7jhjFSej9vuvUMSbp3QOltVxnK2Kci1inOpFWyZmaqxUwJtblgBkD
/kKJZHHqxzF3aA7LvbFut+42dlMni/Vurl1M9+iNdTFgFi3TJQbrW8tjxvbU
waNIe2tHu8UWy8rlvNWeKsbj8s0S21O9W+UW0z1621O7Zaa3DESMWDvKy/Xs
nTFXyCeht892/YgRb/Yugepqla6Td1LrVWSb9Landsssr1fktuVyvujWPytH
jFjOY59tjBj5Zh/TlOjdHKp1JufV+2SMQ2mtiLHbl8tXLE2ca0etMzmjYsGr
XM6LBXXriLELfbZxavmYOsYKYsTI5bzYYzFHjEmKlf9zHaN1Jmc0tZzHEc9J
dYzdYCra7BYt53Goa+WI0WsgYvTaW8fYnUayQYwYe0d5isUo8nzzuNjgynWM
Xq2IEesYxShP7CzK48K9EWNDsY6x2zfKU2x/EPtsc0fuyq2SSeKQblHHiENd
eXC5N2KckZiadQqtkjPV20I/WKoP1PdCnXpa1LuWiO3x3j/yw7tnWSvfb1e1
lxcV9wkaOXembi8P3wvpdNVrmsVEstlj+/CSNV0EPnK1lu5Z1ppT0L1mnxAX
y3md15oicD0vsrtZ6jNct5d7+zo6A7Xf4w1HjDoCH5Dc252EuuUy401dG/7w
eLOnKFfUFnqvQhTHa+p6SHyWzZ6sXuws1pXz3vr2vFaLGLGcxxyJunHa3ewj
W+gxbHa1wd4zOeOXulr1SOSiOLCs+vg++XoqVro3W2dyxi/VO0k5XaliU7De
iNG90pHH9sXwnILVprcU7YtczosNO3qL4l4xYuQ6RutMzvu9JpXzOMK7m1LH
aJXnhSxazou+nTUjRssBZ3i4jpEjxtJHPmB4yZpiFK/okdh9WGeuA3v8kEXr
GC29EWN4keRY0ep62HojxjrH36vIO93ty8yJEaN7pXdSJMkrfdWBfdE6xlSx
FldUBeuHVytibHXwUxWZ6r0RY81WyfmK9/7xWyqkk9ybTxWTDVIVIndpxgrY
jLG9aF8cnzyZqhm9NdtbvvdYjO31D6QTMmNHemwGfvmOR8f/Yuzzj5vy9Oam
pgPuXQgotm4m/fW9ijme9Q+kL358dE1fqnckKC6cNe+mw8Nruw3cLL3PqTje
Gi9ib/bFcssj7I0YcYruZ2+5v1iRY+RfSWegtzc4jiasHDHiOHs8//k8t36x
XgioEEdP5m0/xoiRjzMdTKyaLpczsE7EiN3LuT7W2uNs0uBLTE+KZyyeyYUi
RnwyxsLWu6XCmE0MY99O/ivpH3E67QoRI//pdKXiIrq9ESNueBTHiHtv/FjH
SGes9yTMOI0iRox4sXrLya7RT9KqHsSIEQfxY0mIZ3KFiNFbzmMzsHWcvXWM
mLHQytCYtxutN2K0ynnrT/eWn/hd9paEeSNG6zhjH+akTVhadYx4S/Y+l1NJ
mDG9p/d7FS243pyB2IqPESOf/1RK49prvc3AheoY6XnU+0iKszZaYb93o7f4
i6mw9UaMFVolraAaeyRy+Wn1k8QeiRj240noDaHL1TF6C2GrnPdOFotiHnWq
nPRGjNYU2hkj4aTI1vr52IfZCvsrt0rOVGwrLT05q9jOPkfRmJw/VyJZTOQe
GJg+Xuyh7R1/TPfUXB3pR857qodjDliPrlgFcdLvtrTmtK4mjo7NtUZfsWHH
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

    "], {{0, 1673.0859780294263`}, {747.0383894727922, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9926, 143.9926},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{747.0383894727922, 1673.0859780294263`},
  PlotRange->{{0, 747.0383894727922}, {0, 1673.0859780294263`}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[8]=",
 CellID->602246629,ExpressionUUID->"22698610-e3f8-4e92-ba03-895498a9384f"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "2"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"d1d97f3d-6327-4a16-9845-e36164888e2b"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"ad7bc642-cda1-47c5-b438-e3314dd36d42"],
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount",ExpressionUUID->
  "b0ca50aa-cdbe-4b5d-9220-236d2df4883d"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->295032665,ExpressionUUID->"3878c21c-e3d1-46f6-afdf-cd5263497b52"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"bb96a002-11d0-4a56-8192-9803b921c016"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"07b3d94f-2826-4c24-b94b-331e443027d4"],
 "Filling",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "7afc9aca-f20c-4bcd-b665-a17ba2456bac"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->67077492,ExpressionUUID->"e0e82a0e-e7d1-45a3-abb0-97af799ba211"],

Cell["Specify filling on the bottom:", "ExampleText",
 CellID->233797490,ExpressionUUID->"4cb2763e-5527-49d6-b8a6-75cd559a3a80"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", 
   RowBox[{"5", ",", 
    RowBox[{"Filling", "->", "Bottom"}]}], "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[1]:=",
 CellID->231994369,ExpressionUUID->"3e4e1a34-d521-445a-b0c3-eb4905094507"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq4DJq8App+
JTTzVdDsV4PJDzn3AgAUSxO+
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apq8
Epq8Cpr9ajD5IedeANnME2Y=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GZg8FCig
ySuh6VdBk1dD0z903AsAuUYWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 11, 10, 9, 8}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmryCA6q5
SmjyKmj61WDyQ869AHlVFwI=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0K6DJ
K6HJq6DJq6GZP3TcCwAV8hhQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 5, 4, 3, 2}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
06+EJq+CJq+GZv/QcS8A0wYWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DpV0CT
V0KTV0GTV0OTHzruBQB84xdQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{1, 3, 2}, {9, 11, 10}, {7, 9, 8}}], 
             PolygonBox[{{3, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJq8Apq8
Epr5Kmj2q8Hkh5x7AQRbE6Y=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apr5
SmjyKmjyajD5IedeANLpFTQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GZg8FCig
ySuhyaugyauhyQ8d9wIAfMYWAg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 9, 8}, {9, 11, 10}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmrwCmrwS
mrwKmrwaTH7IuRcAcnIY0A==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0K6DJ
K6HpV0GTV0OTHzruBQDZYxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{5, 9, 8, 7, 6}, {1, 5, 4, 3, 
              2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
06+EZr4KmrwamvzQcS8AloYWAg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {9, 11, 10}}], 
             PolygonBox[{{3, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KKzig
mquEJq+Cpl8Nzfyh414AsEYWAg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTR5
JTR5FTT71WDyQ869APEME4Y=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apr5
SjB5KFBBk1dDkx867gUAlmkUtA==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR9Cmjy
Smj6VdDMV4PJDzn3AgBZuBVU
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmrwCmrwS
TB4KVNDk1dDkh457ATXyGFA=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdDkFdDk
ldDMV0GTV0PTP3TcCwDJYxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{5, 7, 6}}], 
             PolygonBox[{{1, 5, 4, 3, 2}, {7, 11, 10, 9, 
              8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJKzig
mquEJq+Cpl8Nzf6h414ADNUWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KK6DJ
K6HJq6DJq6GZP3TcCwCpYxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTTz
ldDkVdDk1WDyQ869AOopFVQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTT9
SmjyKmj61WDyQ869AAy4FTQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTR5
JTR5FTTz1WDyQ869AEZ4FTQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMTB4KFNDk
ldD0q6DJq6HpHzruBQAl8hhQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 11, 10, 9, 8}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdDkFdDk
ldDkVdDk1dDkh457AYzjF1A=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{5, 7, 6}, {9, 11, 10}, {7, 9, 8}}], 
             PolygonBox[{{1, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJK6DJ
K6HJq6DJq6HZP3TcCwAF8hhQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KK6DJ
K6HpV0GTV0OTHzruBQBs4xdQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{1, 3, 2}, {3, 5, 4}, {9, 11, 10}}], 
             PolygonBox[{{5, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTTz
lWDyUKCCJq+GJj903AsArakU1A==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTR5
JTR5FTR5NZj8kHMvAAXVFwI=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTT9
SmjyKmjyajD5IedeAD+VFwI=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMTB4KFNDk
ldDkVdDk1dDkh457AeljF9A=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 9, 8}, {9, 11, 10}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNxQNWn
gCavhKZfBc18NTT7h457Ae0pFNQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJK6DJ
K6GZr4Imr4YmP3TcCwDJYxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {9, 11, 10}}], 
             PolygonBox[{{3, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMmrwCmrwS
TB5Kq6DJq6HpHzruBQBc4xdQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{1, 3, 2}, {3, 5, 4}, {5, 7, 6}}], 
             PolygonBox[{{7, 11, 10, 9, 8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJo+BTR5
JTT9Kmj2q8Hkh5x7Ae0ME4Y=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTR5
JZg8FKigyauhyQ8d9wIAyUYWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTT9
SjB5KFBBk1dDkx867gUAAxUWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0Kzig
mquEJq+Cpl8Nzfyh414AHNUWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 5, 4, 3, 2}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
k1dCk1dBM18Nzf6h414A2ekUtA==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DpV0CT
V0LTr4Imr4amf+i4FwC5YxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 7, 6, 5, 4}, {7, 11, 10, 9, 
              8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMmrwCmrwS
mrwKmrwamvzQcS8AIGMW0A==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 3, 2}, {3, 5, 4}, {5, 7, 6}, {7, 9, 8}, {9, 11, 
             10}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[1]=",
 CellID->56033017,ExpressionUUID->"5d62d226-6d60-4112-9703-f4c3f8e835fb"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "1"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"847e7b15-4076-4239-ad6f-09a90ff35e4a"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"85ae0911-2588-49cb-8f27-043285b46c9b"],
 "PlotTheme",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "03f0bbb4-b486-453f-84ed-8334b216d05f"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->34300115,ExpressionUUID->"feed6293-0b39-47bd-8c2b-fdf970005d40"],

Cell["Specify different plot themes:", "ExampleText",
 CellID->138005736,ExpressionUUID->"a39b8857-4208-46d5-b479-2c8e7ffbb0ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", 
   RowBox[{"5", ",", 
    RowBox[{"Filling", "->", "Bottom"}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Web\>\""}]}], "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[1]:=",
 CellID->53472451,ExpressionUUID->"c32a9a88-1755-48aa-9d6a-77ab3ed7eb25"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq4DJq8App+
JTTzVdDsV4PJDzn3AgAUSxO+
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apq8
Epq8Cpr9ajD5IedeANnME2Y=
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GZg8FCig
ySuh6VdBk1dD0z903AsAuUYWgg==
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{7, 11, 10, 9, 8}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmryCA6q5
SmjyKmj61WDyQ869AHlVFwI=
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0K6DJ
K6HJq6DJq6GZP3TcCwAV8hhQ
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 5, 4, 3, 2}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
06+EJq+CJq+GZv/QcS8A0wYWgg==
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DpV0CT
V0KTV0GTV0OTHzruBQB84xdQ
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {9, 11, 10}, {7, 9, 8}}], 
             PolygonBox[{{3, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJq8Apq8
Epr5Kmj2q8Hkh5x7AQRbE6Y=
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apr5
SmjyKmjyajD5IedeANLpFTQ=
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GZg8FCig
ySuhyaugyauhyQ8d9wIAfMYWAg==
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{7, 9, 8}, {9, 11, 10}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmrwCmrwS
mrwKmrwaTH7IuRcAcnIY0A==
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0K6DJ
K6HpV0GTV0OTHzruBQDZYxfQ
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{5, 9, 8, 7, 6}, {1, 5, 4, 3, 
              2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
06+EZr4KmrwamvzQcS8AloYWAg==
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {9, 11, 10}}], 
             PolygonBox[{{3, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KKzig
mquEJq+Cpl8Nzfyh414AsEYWAg==
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTR5
JTR5FTT71WDyQ869APEME4Y=
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apr5
SjB5KFBBk1dDkx867gUAlmkUtA==
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR9Cmjy
Smj6VdDMV4PJDzn3AgBZuBVU
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmrwCmrwS
TB4KVNDk1dDkh457ATXyGFA=
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdDkFdDk
ldDMV0GTV0PTP3TcCwDJYxfQ
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{5, 7, 6}}], 
             PolygonBox[{{1, 5, 4, 3, 2}, {7, 11, 10, 9, 
              8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJKzig
mquEJq+Cpl8Nzf6h414ADNUWgg==
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KK6DJ
K6HJq6DJq6GZP3TcCwCpYxfQ
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTTz
ldDkVdDk1WDyQ869AOopFVQ=
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTT9
SmjyKmj61WDyQ869AAy4FTQ=
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTR5
JTR5FTTz1WDyQ869AEZ4FTQ=
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMTB4KFNDk
ldD0q6DJq6HpHzruBQAl8hhQ
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{7, 11, 10, 9, 8}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdDkFdDk
ldDkVdDk1dDkh457AYzjF1A=
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{5, 7, 6}, {9, 11, 10}, {7, 9, 8}}], 
             PolygonBox[{{1, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJK6DJ
K6HJq6DJq6HZP3TcCwAF8hhQ
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KK6DJ
K6HpV0GTV0OTHzruBQBs4xdQ
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}, {9, 11, 10}}], 
             PolygonBox[{{5, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTTz
lWDyUKCCJq+GJj903AsArakU1A==
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTR5
JTR5FTR5NZj8kHMvAAXVFwI=
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTT9
SmjyKmjyajD5IedeAD+VFwI=
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMTB4KFNDk
ldDkVdDk1dDkh457AeljF9A=
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{7, 9, 8}, {9, 11, 10}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNxQNWn
gCavhKZfBc18NTT7h457Ae0pFNQ=
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJK6DJ
K6GZr4Imr4YmP3TcCwDJYxfQ
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {9, 11, 10}}], 
             PolygonBox[{{3, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMmrwCmrwS
TB5Kq6DJq6HpHzruBQBc4xdQ
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}, {5, 7, 6}}], 
             PolygonBox[{{7, 11, 10, 9, 8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJo+BTR5
JTT9Kmj2q8Hkh5x7Ae0ME4Y=
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTR5
JZg8FKigyauhyQ8d9wIAyUYWgg==
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTT9
SjB5KFBBk1dDkx867gUAAxUWgg==
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0Kzig
mquEJq+Cpl8Nzfyh414AHNUWgg==
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 5, 4, 3, 2}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
k1dCk1dBM18Nzf6h414A2ekUtA==
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DpV0CT
V0LTr4Imr4amf+i4FwC5YxfQ
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 7, 6, 5, 4}, {7, 11, 10, 9, 
              8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMmrwCmrwS
mrwKmrwamvzQcS8AIGMW0A==
        "], {{{}, 
          {RGBColor[0.790588, 0.201176, 0.], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 3, 2}, {3, 5, 4}, {5, 7, 6}, {7, 9, 8}, {9, 11, 
             10}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.790588, 0.201176, 0.], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
           CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[1]=",
 CellID->68460822,ExpressionUUID->"ffc3552d-d6a2-4e04-b992-b728a71b2202"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", 
   RowBox[{"5", ",", 
    RowBox[{"Filling", "->", "Bottom"}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Minimal\>\""}]}], "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[2]:=",
 CellID->252185352,ExpressionUUID->"f7dcc7f4-4c66-47c5-aff9-27a1f53a6588"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq4DJq8App+
JTTzVdDsV4PJDzn3AgAUSxO+
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apq8
Epq8Cpr9ajD5IedeANnME2Y=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GZg8FCig
ySuh6VdBk1dD0z903AsAuUYWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 11, 10, 9, 8}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmryCA6q5
SmjyKmj61WDyQ869AHlVFwI=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0K6DJ
K6HJq6DJq6GZP3TcCwAV8hhQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 5, 4, 3, 2}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
06+EJq+CJq+GZv/QcS8A0wYWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DpV0CT
V0KTV0GTV0OTHzruBQB84xdQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{1, 3, 2}, {9, 11, 10}, {7, 9, 8}}], 
             PolygonBox[{{3, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJq8Apq8
Epr5Kmj2q8Hkh5x7AQRbE6Y=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apr5
SmjyKmjyajD5IedeANLpFTQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GZg8FCig
ySuhyaugyauhyQ8d9wIAfMYWAg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 9, 8}, {9, 11, 10}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmrwCmrwS
mrwKmrwaTH7IuRcAcnIY0A==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0K6DJ
K6HpV0GTV0OTHzruBQDZYxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{5, 9, 8, 7, 6}, {1, 5, 4, 3, 
              2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
06+EZr4KmrwamvzQcS8AloYWAg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {9, 11, 10}}], 
             PolygonBox[{{3, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KKzig
mquEJq+Cpl8Nzfyh414AsEYWAg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTR5
JTR5FTT71WDyQ869APEME4Y=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apr5
SjB5KFBBk1dDkx867gUAlmkUtA==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR9Cmjy
Smj6VdDMV4PJDzn3AgBZuBVU
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmrwCmrwS
TB4KVNDk1dDkh457ATXyGFA=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdDkFdDk
ldDMV0GTV0PTP3TcCwDJYxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{5, 7, 6}}], 
             PolygonBox[{{1, 5, 4, 3, 2}, {7, 11, 10, 9, 
              8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJKzig
mquEJq+Cpl8Nzf6h414ADNUWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KK6DJ
K6HJq6DJq6GZP3TcCwCpYxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTTz
ldDkVdDk1WDyQ869AOopFVQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTT9
SmjyKmj61WDyQ869AAy4FTQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTR5
JTR5FTTz1WDyQ869AEZ4FTQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMTB4KFNDk
ldD0q6DJq6HpHzruBQAl8hhQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 11, 10, 9, 8}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdDkFdDk
ldDkVdDk1dDkh457AYzjF1A=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{5, 7, 6}, {9, 11, 10}, {7, 9, 8}}], 
             PolygonBox[{{1, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJK6DJ
K6HJq6DJq6HZP3TcCwAF8hhQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KK6DJ
K6HpV0GTV0OTHzruBQBs4xdQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{1, 3, 2}, {3, 5, 4}, {9, 11, 10}}], 
             PolygonBox[{{5, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTTz
lWDyUKCCJq+GJj903AsArakU1A==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTR5
JTR5FTR5NZj8kHMvAAXVFwI=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTT9
SmjyKmjyajD5IedeAD+VFwI=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMTB4KFNDk
ldDkVdDk1dDkh457AeljF9A=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 9, 8}, {9, 11, 10}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNxQNWn
gCavhKZfBc18NTT7h457Ae0pFNQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJK6DJ
K6GZr4Imr4YmP3TcCwDJYxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {9, 11, 10}}], 
             PolygonBox[{{3, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMmrwCmrwS
TB5Kq6DJq6HpHzruBQBc4xdQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{1, 3, 2}, {3, 5, 4}, {5, 7, 6}}], 
             PolygonBox[{{7, 11, 10, 9, 8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJo+BTR5
JTT9Kmj2q8Hkh5x7Ae0ME4Y=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTR5
JZg8FKigyauhyQ8d9wIAyUYWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTT9
SjB5KFBBk1dDkx867gUAAxUWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0Kzig
mquEJq+Cpl8Nzfyh414AHNUWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 5, 4, 3, 2}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
k1dCk1dBM18Nzf6h414A2ekUtA==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DpV0CT
V0LTr4Imr4amf+i4FwC5YxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 7, 6, 5, 4}, {7, 11, 10, 9, 
              8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMmrwCmrwS
mrwKmrwamvzQcS8AIGMW0A==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 3, 2}, {3, 5, 4}, {5, 7, 6}, {7, 9, 8}, {9, 11, 
             10}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->1,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[2]=",
 CellID->72680068,ExpressionUUID->"2f4bec80-5756-4f05-b110-fde575bdb7c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", 
   RowBox[{"5", ",", 
    RowBox[{"Filling", "->", "Bottom"}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}]}], "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[3]:=",
 CellID->228632175,ExpressionUUID->"944b9792-a3b9-43c9-a99d-bd1dba85a5a4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq4DJq8App+
JTTzVdDsV4PJDzn3AgAUSxO+
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apq8
Epq8Cpr9ajD5IedeANnME2Y=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GZg8FCig
ySuh6VdBk1dD0z903AsAuUYWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 11, 10, 9, 8}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmryCA6q5
SmjyKmj61WDyQ869AHlVFwI=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0K6DJ
K6HJq6DJq6GZP3TcCwAV8hhQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 5, 4, 3, 2}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
06+EJq+CJq+GZv/QcS8A0wYWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DpV0CT
V0KTV0GTV0OTHzruBQB84xdQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{1, 3, 2}, {9, 11, 10}, {7, 9, 8}}], 
             PolygonBox[{{3, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJq8Apq8
Epr5Kmj2q8Hkh5x7AQRbE6Y=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apr5
SmjyKmjyajD5IedeANLpFTQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GZg8FCig
ySuhyaugyauhyQ8d9wIAfMYWAg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], 
           GraphicsGroupBox[{PolygonBox[{{7, 9, 8}, {9, 11, 10}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmrwCmrwS
mrwKmrwaTH7IuRcAcnIY0A==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0K6DJ
K6HpV0GTV0OTHzruBQDZYxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{5, 9, 8, 7, 6}, {1, 5, 4, 3, 
              2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
06+EZr4KmrwamvzQcS8AloYWAg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {9, 11, 10}}], 
             PolygonBox[{{3, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KKzig
mquEJq+Cpl8Nzfyh414AsEYWAg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTR5
JTR5FTT71WDyQ869APEME4Y=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apr5
SjB5KFBBk1dDkx867gUAlmkUtA==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR9Cmjy
Smj6VdDMV4PJDzn3AgBZuBVU
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmrwCmrwS
TB4KVNDk1dDkh457ATXyGFA=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdDkFdDk
ldDMV0GTV0PTP3TcCwDJYxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{5, 7, 6}}], 
             PolygonBox[{{1, 5, 4, 3, 2}, {7, 11, 10, 9, 
              8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJKzig
mquEJq+Cpl8Nzf6h414ADNUWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KK6DJ
K6HJq6DJq6GZP3TcCwCpYxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTTz
ldDkVdDk1WDyQ869AOopFVQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTT9
SmjyKmj61WDyQ869AAy4FTQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTR5
JTR5FTTz1WDyQ869AEZ4FTQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMTB4KFNDk
ldD0q6DJq6HpHzruBQAl8hhQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 11, 10, 9, 8}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdDkFdDk
ldDkVdDk1dDkh457AYzjF1A=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{5, 7, 6}, {9, 11, 10}, {7, 9, 8}}], 
             PolygonBox[{{1, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJK6DJ
K6HJq6DJq6HZP3TcCwAF8hhQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KK6DJ
K6HpV0GTV0OTHzruBQBs4xdQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{1, 3, 2}, {3, 5, 4}, {9, 11, 10}}], 
             PolygonBox[{{5, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTTz
lWDyUKCCJq+GJj903AsArakU1A==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTR5
JTR5FTR5NZj8kHMvAAXVFwI=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTT9
SmjyKmjyajD5IedeAD+VFwI=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMTB4KFNDk
ldDkVdDk1dDkh457AeljF9A=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 9, 8}, {9, 11, 10}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNxQNWn
gCavhKZfBc18NTT7h457Ae0pFNQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJK6DJ
K6GZr4Imr4YmP3TcCwDJYxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {9, 11, 10}}], 
             PolygonBox[{{3, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMmrwCmrwS
TB5Kq6DJq6HpHzruBQBc4xdQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{1, 3, 2}, {3, 5, 4}, {5, 7, 6}}], 
             PolygonBox[{{7, 11, 10, 9, 8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJo+BTR5
JTT9Kmj2q8Hkh5x7Ae0ME4Y=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTR5
JZg8FKigyauhyQ8d9wIAyUYWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTT9
SjB5KFBBk1dDkx867gUAAxUWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0Kzig
mquEJq+Cpl8Nzfyh414AHNUWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 5, 4, 3, 2}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
k1dCk1dBM18Nzf6h414A2ekUtA==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DpV0CT
V0LTr4Imr4amf+i4FwC5YxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 7, 6, 5, 4}, {7, 11, 10, 9, 
              8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMmrwCmrwS
mrwKmrwamvzQcS8AIGMW0A==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 3, 2}, {3, 5, 4}, {5, 7, 6}, {7, 9, 8}, {9, 11, 
             10}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[3]=",
 CellID->786550532,ExpressionUUID->"aad0ff4a-97a6-49f2-a380-ff6713b67947"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", 
   RowBox[{"5", ",", 
    RowBox[{"Filling", "->", "Bottom"}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Business\>\""}]}], "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[4]:=",
 CellID->31804916,ExpressionUUID->"1c44b2bd-a658-454a-9fef-8bdcc71cf45b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
fIodf5r0toUZSBOSPjSWXRje6u08vITMt2Rot6157Ew6+jasBfs+vCae4rMv
JcEJv+51KPi2dlKyAH3futEP/zoNo9x5C9LP6MeSbv6x3jFPuuPbtvo2rLf2
H1Vd0+x9R1LC53Y0zStDBz0UA1m4HM6nrm/p3056KzyUIIblUJO+1d2Chmsp
3Tv39vauWrUq3XuqQ+apdnL6oQ13tdp9z/tbkNLvypdPX3Bl4JSb9P4xyfKl
SNQu1YEpAyvFpOtICC1aXqkcBsfGlN7a70RwQs6SdEHEvBySBJIc2rK8UiGU
7oHgzmKZSN07JAsimlpQWlH3dtxbpQvQ5uWw2Wx2dXWRXdabTTjS6g3Od1Gi
RlevXjLfZMQjqrdzfdu2Be+VXXQt+JacGutC2HLVKHfegtKQLZOaKpXxbbS+
lfbWnp0xjk4OC9kyL4cOeigGhKRzfWsgGdC38FAYW3KYA32brSz6+vpWLZPC
veIzOb0kXS8IJgQn6Esv9UuWL73puR1NrfsqDA8Pkw9iUeOpy2Gpb8Kd4IQ8
pRNfyXecMCmHtVqNlaGVORl1IaS057CFw6+j08nz89KtWVNvQa29lSq27W21
ymGz2ezu7iYhtDUno1691Nxxw0vIiEsnXgy3oDc5GHwbtgANo5xWC0pDtixq
qgTjWxV96+utcY9OloZsGZZDlz0Uw0KSQN8aSAb0LTwUp+Qwo/rW/Sxo7Fcu
l1fdocOiJsAXwFnaMr79wCQl6Sn22z5GcIKuNPjNvDdiXNoQ+g5SqdfrrO5s
aTx1OXxww5jKu9hIydK++l3T6YblkCNkbM3JxFKGri2WiVT967TuFjTQW39/
9wK0STmksR9PyNiak4klhx8dn05QvVv3T7atXgMtyOnxVxwNvj32xdyKtTDK
ulpw6FvtYx4D41sVfSvSgRNJeqtvzxCTcpgJD8WkkCTTtwaSbn0LD8UdOcy0
vnU5i0ajwWJWqVRsRQbWTv5iUFb2jBwdumsLu+PnZr2hQc+8NWFd7eQ40XhA
pSGqA+mfLE/iR7JXKpWq1aotjacuh3v/7FxwQp6SRTkUkQkskObnZNSF0M3F
MmMtaKC3bqnakUMa+5HskV3meC0rczLq1fvKHxOGlygKiYEWvNfh4FsYZa0t
6JSmSjy+Ve9Km/YlPDp5qyU5zJCHYkZIEutbA0m3voUydEQOXW5Bd2opWRbk
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
VaBoxE37Em45no+0uTqpUksbdl0x23oSFCMTnMKAECq2oIEs3nj/mu6K2vGn
64mzSAvFxTincEcOXWjBHKC4GOcUikL46ItjiUc1ilk8tTl0tSutLDqxmIpZ
dKJv0yLHRtmFMU8EGbKYBsiih6Ibd4x+J/o2Q2RRGeYDd0TdjL4V88/ZUneL
S63fbLzMFUVpzbaJ3YeuUxIhRpQef+VykYNkKJ25eHP15vHoWqJ0/7rRH8Zv
W2zNRqORRXVHQvj7bU2tQqjSggay4Fxm5/8Xe+/inUWR7f3/mwjexjnGM74T
x6MnxxkNRMCMClEUonKJCBO8Pl6QBxQnmGGAIEeQMMzoy8+M82O5JIE8YAgQ
gkB83k221DTd1f1Ud9etq7+fVYsVmtDVXXvX3rWrdlctFG6ojr2VysrXz98s
WIMe+JDNak3ItBeb979e9kJJnEswDCo3IdNeVMLezR2MIRe6WLiKjvaWy5F/
XO18u5Qq/ueVaaMek6r43Tqz9lYL1XXKihI8PeXvYTFV8ZgWqGiEYhoVe2vH
6Zext1WhosYwDFQ8ZjDjWz7Pq4rm7sS312JmIVZIRiNH5yzMe3he9h2be+TF
c9ltReWJV6YdOnfO0q+iuXt+x3nTSpgtQQtViLL+vYJLtx17qyjNQ5f1Ckgd
ceJwtSZkiAuzN+9/ZtKtHvogwTDg49erNSHDvPXnWcVuTgahWBXZ9laUB/qn
qFMUuP/1Gz9Hx2YmPOb0zM17V2f11vL2VgsVdcq5JOjtNxeV8JgWqG6EYoFs
e2vT6Re2t1WhosYwDDp6zJDGtwMDA10p+PzF3KW5BZJCWqMtXXEri6nmGTLR
cvTUrdQsapZsZduxd9aJNCkETlNCwskjKTJ28qodJZRK0EIVyRLL61Mhu7fG
yrK+M66WLxuNRpoSen7y5qqtqYGqfSVxKMEw4PU4KT6fvElCJ9ErdnMyCGQW
8laRYW+TZVWhj1O2f3JRvYoCHvPmQnv55vgqs157q4XqOuVcEqRfdv28Eqri
MS1Q0QjFAhn21snIsJi9rQTVNYYBkO0xwxvfksXrT8HnKcGBty4k2+qRF89t
2XVxz+ErmI2RFmoWahxqIirvjFwSmxpFy9f/Krh8WYaRkZE0JfQ5Fp6euflA
/1SsAe9acWbNmxcMKWFUghaq2PSRZHBLr0wvnquhMnrrc3+STCY89vI5J8uX
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
27fYYI+VzdUjGaJ56JdzVJf1ndl75Er0n/Yfn4tm2d27cnL0uPzw6+yy6o2W
ShWN0eLbUSq+RZkqnNDT0xOLfEdGRoKciDYtwVA1xAITExPJwd7Q0BBdRJ5q
XsKwt07gGZjoYI9GgEiVAZapj1MG3lKfCCUMQh1/whgCa1AkEvs8k5OlXT2P
IYQ1iBkK5uCJqyJG2Nq8WCBAoELBhUoVZKyu3/jZ6FuUqcIVsQln9sXhWTzT
EgxYQyxAljCWFM0BMuZk8qJub7d/MuutvXVFzBjybCHmZIBlauKUgc/UJEIJ
g4DHnzCGwAmNRoM0bWhoyPWD6OT01HWRSpf2O09u/GWDAvWtJqPl0yNX1Kv4
7ocim5DneotiVXgCeeHe3t7u7u7Avho2LcH6aIgdxsbGSAlJFV0/SMUIw956
AsUjPDGIfY2AQ0J1yqBaBBmhhEF9xp8whsACYuciMneBbWw+emyO7cCmnTNp
v/PG7l/O8tiyq0iezLY9s+pVSOeQ9b5FsSqc02w2xVZa4SUnmJZgHTTEDmQD
xd6qcLt5CcPeOmd8fFxsNI3NZIArwnbKoCoEHKGEQR3GnzCGwA48/BMjwIzD
N3ctUq0r614/XCBGeG34AJVoIJBxJVeMMDB0xPRbCIvnXBZpjyqFTzwU4XCa
53X+UsWuFJBgrrpy+cRiSljRK+2csDEUI8C0X3P+Xn5eyaWHvRv+pm5mRekb
PBG8MSQvHD1qJG07QecvhSvVutLOSdhOGVdcXWnnIewIJYwriFBcvQKuVP1K
Ox1xGmzaHKDzhy9wZfs7Ix1z6vqGWrFc+lxzMiq59KKKbW9/bvotRGagc1mk
PWo2nK6ftoWC85cqdqWABHPVpZI7WlIJK3qlXQixu37aV8PO38vPK7n0cM2W
/y0wJzMwdKQ+xpA/XSe/LB0BOn8pXKnWlXZRgnTKuOLqSrsQQUYoYVxBhGLn
gXElvCvtTHgEKI79CgOx99T+43PJfz36zTz/69IVZ778Zr5ALv1XkT0ns6vQ
ssevuSr8geeiA/tyxLQEa6UhFuDtVUkVXT9IxQjD3voDjwAzVocBsECQThlU
iyAjlDCo1fgTxhDYYWxsLLxTHhqjl9gakNEYO3k1+k9kKIQleeHtH4sFCFTW
N2ZUqtjavGj6LYY/nS1chT9wnmpg32yalqDi/Z/aiM+xVelaxPVTVIww7K0/
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
eUdHHe0tiV5dW2w65ftWTS7tkyQnUKM5F5wo0gVoveNbCx7TdElLFynslKsV
oQQgwTBKnSOUtOPpO9pb9c9VaJhKg9WMKqTj2wefnarb+DZvhNJsNknBent7
RxahH+iv9ENJTZu5vCBNi0qWmnxZFmSRLojEioq2UAzCijc8PEzRB/3JOmlN
CZcgOcFYkU6nZxT1iXouaQsieZWwvZge070IWUXSw4GBAZ6WsamHWCyraJEu
iBTTw8HBQVI8Uj9SQlJF1snyI0B1PczbB1EUi4rHLDk66mhvFbXFB6dMzeVc
ZLHy6ofuJeh/b913TJIuUkwPqxihBCDBMEqdIxRS2o59MFbIuOWqggarue5P
5YP9tTs/JW+EQoO9np4esRZMP/QsUkbTbi7c8Z1az4Zzm3bOUJHm5Q7vRQxS
1XL01LXf3bkgkpS1isI0Gg0ycdHlD75C7tiOEiI5wVyhhn3gzun0DFkU21fq
44NX7lpRVgkJnoSJfi3CV8qEw7n0cM0OLJZVuDyz7Xy2nqsoDKkfT8jErgwO
DhZWwlx6iL3dzBUVj1lydNTR3ioqjHOn7OfebvRI/33nYbv2JViJ3rp192z2
KyjqTBUjlDAkGECpeYSy/dNLikp4618HpwvY2+fv3GUru4q1b9Z0fKseoYyN
jSUXgjlrukyytPhObVlffLfn/cfnomlatfqyLMjy4u2t5tNkraIwnBMY/UiE
fub8QAtKuATJCYZL/+1YtaMs8k7UcxGnzpVRQiK59jEyMsKLI4V08Bbqevjb
gbNffoOJwQqXwQ806CGvwcUWgnmRrrAS5tLDYn0QRbF09JjlR0fZ9lZRYdw6
5XtXTu475unebi+961iCleitWpxydSOUACQYRqlzhNKxD4r737d6qtjnKiJv
sGMVj7x4rrbjW3VjKB3+sRksE4YIQUiP3zp44pctx+9afubgCU/dLopiEdlx
abJWURhpHiCbwQLqxygqIZXn8SWvayURBuFIoQxeLUooHf61F5WzjOdV18Pd
h2uX1RlY0aKHyeFf+7anLhOGqDvlYn0QRZeSlB8dZVehiFunvOVjfwNV5xKs
RG/VYgyrG6EEIMEwSp0jFEUlXLK4UbnpKuo8vlVXQumEc1psosjpqetLbufn
pP3Okxt/Sf5Ezl6ly6dHrnSUdUfSJpylsYkiuZSw6dMuguEVFSUpYxC0KGE7
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
E0I1Aoyu/erBe+YLPHnptU7f2M7NE4s94aO55mRMwkejV+x99YOg6sejsGWg
5qK1O0e8F6rYk1xyqGKMvee5Hk+6RVHHq4ooav/qvVxhPjEJ10cZ5kKNALWr
w94LxZNqPekOQP2Msu0nuZThE3v+s8CczNjE0bzjihDqJy2rfamfh8ITj0+6
RUEZ8sSNEE5PT9fvlofomLVDJ1aSfz32xar6662bznzyxaBn/Ga/ogbHrLlB
xanWbM+moRwiJOGwcR3fuagYyHm5TE5OcssDeKeWRtk2DD7LpZYeClQOlCGU
TqfTGRsb65noUxevp81CV5TW1CVllcQ+Tp+8Ev+TGKzIaBa+CFvSttaSySse
2MkOxO+xuLg4MTGRdDfUtpGanbBqKIe/nDzvK4eNZWZmRpRez+02IpwZcTKQ
hqGcDz31pa8cBkur1RKj3PNQNGRanAxA6TTKKNsmnMFn5fRtczwUCBaUIThD
3SvXo9zU7F/Nbt68sdb9l6e+VIZJ0v07F15854KkKKRT0t1Pfll4nULSsVNX
7912NvsVKp3876u+6yMs1AbhuHJTSyH1u4Z4efWb2x+e6yskPxmdX1i64Tuz
zWJmZiY5/aLiEzjmNy8m+lald49U8sxJe4gP0jP9ImNCpSE5URCc0RyjbBtR
hj/rNzJ0Nvislr5tjocCIYMyBDdEh1iK0hMZEy2n1F39pqBPz1+7dfOZHvMU
T2ITO8dWCttEld4/vnLP02cz3hK9a2V1zXeVBITaICzusPwgciiO8NA69btq
JDpqr2+S0dQNZMQt0bltoglFDtWvoiHxhfPSV99G6bYtc/Jh3/kNCHWIpSBq
UIRQVKLat06QDLikOUbZNjLYu+uX84EMPqulb5vjoUDIoAzBGaL0lJaLqN+i
8LXr39z7TKq1unXTt1GjgyxS9CxYbGstyXdmW8atr33lu1bCQnSdmotW1PLu
109PrRpOyKi078PLvrPcONQmkQiuOyxAtr5Npvt2LNTglIMSEdWn5mEU3P0K
XmiCUXaADPaCGnxWS982wUOB8EEZgktE702v4zsjVtAGJ9z1xPzu/RcOHFku
yyDGk3ynfPOe/RckvfmH5R8/OpfMwEefXemf9YYhWk6EsJY7NC+trP2jbrFs
y/PnREj2HriYHEpt2Pw/tySAS5QyZDamGBn69p3p5XiMfZReeveC71wHh6hB
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
7ND7Gb/eqzfkFnTgMeGUQ2jBwMXQQQpBDAOPUBx0c+itdyOssRg6eEQ4RQjZ
zhW+FK81cZ6LQJU5efRS9J+odKqGny76pZjapPWteZOK2vLXs6INcfcTs2U+
H5+NR8WrgR0aWkiZIoTziHUvn5YzBl9zMg6M0EELNsrUX2oX1FsTfM3J1MMO
a+AxDR/xn6NzBR9gQPhOWboFAxdDB8mwKz3/l++LNYQJgUcov1+fum5u6xHQ
W0Qoon0wEL114DErEaH4Ujyq/D9u+mmrD6UHN829svssJbX/h9JvnjrZ8HUK
SoePXb5v/ansiqK09qXTxeyZ/tfQlj4Nwen1v5+zbQU/4VHxqPi/e75P9QZu
hyYWUrIIgTyC0u1rZ749dU3IGHzNyZj0wfBbsDmmvmL5I7ly9uBrTobs8P4X
5rxXr5sWDNljmoyOOB364lL/2xXCr1P+1ZMn/bZg+GLoIBl2JaqrhUWpeDjk
CKVkH6RH/Cf01qCWEKGI9sEQ9NaBx6xKhOJL8Ygntp+OtUjMxjqHF7x7pRDS
viML9zxzKqOuOLUPXCjWEON/O9f35iuWN2UdO37Frg0wHhXvzLnrP3t0pup2
mG0hVorg/REqUdgotCDia06GeO3vWX2wKi3YBFNXqWbfXeotD2yio47q2qG0
x8zurVY85mN/yhodqfTLx2bJhRV7RDYenfLnX182KbtcC1ZFDB0kw660/k2p
rTLBRigq/Xy4YB+8eu0H6K0JiFBMil+4D3rXWystmO0xKxSh+FK8yaOX0kp0
6+oftxhhkSKaDh/7cesU1Uy2PR+fzf1h9G++u0r/0bBLDjwtsiDiUfEeeTm1
I1fLDrUWYrcIvh6RTNv3iiyI+JqToW6b1gcr14I1NvVYun3tzImuyJYtX3My
1K3ciGEgLVjMY2b0Vlsec/9nC4b3p0Rj0bz3N8GXUz6/sETjZ8OyW2/Byomh
g2TolGP7+W0RYISSTI8UemHh1XfPQm/7ggjF3A4L9EG/emurBTM8ZuUilLGx
MffDv7n56z8fnk0W5PHxM3sOXoRDTEtUM1Q/W3edpfToK5quet/zp3KdL7R4
5Yd7n9XM+z20pUsPenBTfGvZCpkFkampKTLCdrtt/c7ZtA9cSBaQLHPTzvmK
2mHUQoSK4PgRf/77+ZUPa5YJvvzXZfv20G6THZI1Wr9zBj8ulj2v6YMPbOxW
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
EYoJiFDKk6Y8EjFClPIDmyTcqdkerOef3+/r3XzUmN13Cbkt6M6xnYFljgCl
ela7yNIsOflfrItAX7QPFXKLUcr35STUatR/6Z7Wa5IrhOwheuiZ9RNiuU7U
bdW2vTL35KCsl9LQ2t4qMTLvi5ecWFlsiiEqhtyIPIRQh57ZXcpRm5ZV3+SH
ljkXkY+y5HymxdruJSiJr5xIOGUeclPfl8g/20Ps3EWL9+8lrI7fXYqaZQF4
MNxLadNwnLKXnHDHtzvW5beW2IVZF3MHYtgTcMrZYugrLkiCCMUQRCiiIEIx
ARFKedJOmeMpdOuPY9R4265iUKOoM5esK96qyPFfcucvkZxyzfA5QkRJpxCt
4WSdaPessk06PmFVe7AS9zW5E72Ui7F4T1765NqzrngqQOBRq9AJWnzw+KrI
CVrKC5e5J/+QrJO0NSPOg+jnD2L4ygnf3/oOUjkxHL5xXuuqGycVr1rG+giW
t9arw/1KfqgiasNJf+pFgrR4yYmEU+a3ljjP1oevaiaTJ0mGxU6I5fdQ1Pmi
9ENJKVDZ09ZJOE7ZS074/hLvuKXNP5TEjRhad8rZYuglLtCCCMUQRCiiIEIx
ARFKedI8ILsVu89ihM60ZOlWNSmheDGJ431rJWfnYkSHfyoMseUXknWibWWJ
QVFftGGphCIp1EF8FvsUr8epDAspXlTiVG+yOBcdjYVVGGKrFGnbX9MUz+Vq
iJecSJxpKS2GybhD9SaLCzrR4Z/yvHbf3U5ecSlB2XlzmRMhp8zrcey/hOZk
YpMw3JssfmQ2OvxTYYitcCDtBb1AnLL7nKgxlcVYmEfUKsNCczLSYijqlNM2
DbqMC9JAhGIIIhRREKGYgAjFVgacKZ5qILsxCK/HRUdiQooXU2keAdpqFJa7
aM3YHWFC8RTqmHe7bpfnh2NvW1hXvNi+bn6F01YtcVeKOgK7I0zvipeB+5xw
B7cbgzgQQ66QmIbzCNCWbqgz6GLfILA1wsScjELIKXMLxjYYS8zJxHTJ7iGu
sejM7ggTczJRuINbX9nntVT1V6E5GVExlHbKmJNRIELJABEKIpRsEKGUJ+3k
Pevzq73lypSQu95y5cT2GQopXix0sut5k8bcuzEmtBKyJeuEbx77NbZJ6+8A
ZpP8gkbvRl+wuOipbishd8kBttzOwNh1i2GI9jVqVgkrDZGsE+13K3o3FM/u
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
OpOsw7zT6eorctF09xOzW3ad3T15UbtE8pd99hdEyALJDskard85g29PXbt9
bXyx7JbVJ0Ze+95NC1bRzmOlaE1cuOtRzYIjORrzhlheajmZvMmj207TI7bt
PpccEApt2SIjJL9s/bbZUIdK64MO7PDt/Re1g08rLfjwWLe6pm6it08WfdM/
Ay9OOa0FVy+34LY9mj5I4kkSav4I93pbj2Rdbw0JMEKxMubRbk5wpreiHlNO
bxGhqAjFgccU1dtn3vjeVgtOHhXvrYFEKEKcOXdda0tv7b/g3e8gxdIfN2u2
nAktiDhm7yHN5C0J1MdfYlSWI1F1aVWdqtewIT7/+nLyv9+xdmbis0v8iM7h
hZUPx1Vd9B12Z6Qtlq1vzXtv2Wol7ZRCrjeg17+pWWp55OWuesTzb2rGD3Lv
sLuEulJysSzaBx0kGgBItODQlq50zl2mNL2VO2XLJdoWpEGIKr468DOaSEIN
+yD01lYqr7fB0jdCKT/m0W5OcKy3Qh7Tsd42OUJx4DGF9HbTO/O2WpAK+/Nh
2d5a+whleJtm6u+pP5/x7mWQkunA0UVnCyIu0U7e3rr6xJ6DF73XeeUSVVrh
6fTzC0u/ekKjqK++ey76iK27NNPUcu+wO0O7WHbf+lOHj/lv1sqlx8c1CyLk
bkwa4qPPNUstdz8+e/Cf/x4kU6Pc+1y1F0S0UCcaeFozaIn1QQeJhgF2W5AG
qOTCvFum3aTV25+tmznRFTllyxnaFqThR7QFYwd+qkRCavII6K3FVEZvQ8Yk
Qikz5knbnOBeb617TPd62/AIRdpjSujt4OicrRa8vtR75GXZ3lr7CEX7Ztlv
R3DEfbjpzffrtiBy9doP2snb0R1N//Zl4aR9nZMqmao6uy1GXtP4lDVbTycf
oZ1O3/h2hRdEvvxXn+l3pFzp4y8Xf/2kZqzb9w3ouXnNUgs58Z0fxrdudg4v
3JEYKa1cc+LY8WosiGihTmTYB6UTDQNoMGCrBSnt+KCem2+1eit0ypYb0lqQ
hh+xspM8JvsgJZLT7EdAb+2mwnobMuYRSuExj3Zzghe9tesxfeltkyMUBx7T
rt7euW52/1Rcbwu3II3QpHtrvSMU7dTfyodn3juEzQlBpye312pBRDt5+/sN
WCwrnqjqfq87Ait7On3iyIJWiqObE1T68B+1WhBJWyzbtsf1YlmdUoEFkbSl
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
    "], {{0, 560.0287792567117}, {750.0385436473817, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9926, 143.9926},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{750.0385436473817, 560.0287792567117},
  PlotRange->{{0, 750.0385436473817}, {0, 560.0287792567117}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[4]=",
 CellID->804731974,ExpressionUUID->"22ac1448-dfb0-413a-ab8d-86b160bb4443"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", 
   RowBox[{"5", ",", 
    RowBox[{"Filling", "->", "Bottom"}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Marketing\>\""}]}], "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[5]:=",
 CellID->300955255,ExpressionUUID->"89797850-6658-4704-beee-5eafddc6f8c1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 3.}, {
            7., 4.}, {6., 5.}, {5., 4.}, {4., 3.}, {3., 2.}, {2., 
            1.}}]]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 4.}, {6., 
           5.}, {7., 4.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 3.}}, {{5., 4.}}, {{6., 5.}}, {{
          7., 4.}}, {{8., 3.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 3.}, {
            7., 2.}, {6., 3.}, {5., 2.}, {4., 3.}, {3., 2.}, {2., 
            1.}}]]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
           3.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 3.}}, {{5., 2.}}, {{6., 3.}}, {{
          7., 2.}}, {{8., 3.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{
            PolygonBox[{{7., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 1.}}], 
            PolygonBox[{{1., 0.}, {7., 0.}, {6., 1.}, {5., 2.}, {4., 3.}, {3.,
              2.}, {2., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
           1.}, {7., 0.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 3.}}, {{5., 2.}}, {{6., 1.}}, {{
          7., 0.}}, {{8., 1.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 3.}, {
            7., 2.}, {6., 1.}, {5., 2.}, {4., 1.}, {3., 2.}, {2., 
            1.}}]]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
           1.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 1.}}, {{5., 2.}}, {{6., 1.}}, {{
          7., 2.}}, {{8., 3.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{
            PolygonBox[{{1., 0.}, {5., 0.}, {4., 1.}, {3., 2.}, {2., 1.}}], 
            PolygonBox[{{5., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 1.}, {
             7., 2.}, {6., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 
           1.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 1.}}, {{5., 0.}}, {{6., 1.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[{{1., 0.}, {3., 0.}, {2., 1.}}], 
            PolygonBox[{{3., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 1.}, {
             7., 2.}, {6., 3.}, {5., 2.}, {4., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
           3.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 0.}}, {{4., 1.}}, {{5., 2.}}, {{6., 3.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{{PolygonBox[{{1., 0.}, {3., 0.}, {2., 1.}}], 
             PolygonBox[{{9., 0.}, {11., 0.}, {10., 1.}}], 
             PolygonBox[{{7., 0.}, {9., 0.}, {8., 1.}}]}, 
            PolygonBox[{{3., 0.}, {7., 0.}, {6., 1.}, {5., 2.}, {4., 
             1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
           1.}, {7., 0.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 0.}}, {{4., 1.}}, {{5., 2.}}, {{6., 1.}}, {{
          7., 0.}}, {{8., 1.}}, {{9., 0.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 3.}, {
            7., 4.}, {6., 3.}, {5., 4.}, {4., 3.}, {3., 2.}, {2., 
            1.}}]]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 4.}, {6., 
           3.}, {7., 4.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 3.}}, {{5., 4.}}, {{6., 3.}}, {{
          7., 4.}}, {{8., 3.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 1.}, {
            7., 2.}, {6., 3.}, {5., 2.}, {4., 3.}, {3., 2.}, {2., 
            1.}}]]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
           3.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 3.}}, {{5., 2.}}, {{6., 3.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{{PolygonBox[{{7., 0.}, {9., 0.}, {8., 1.}}], 
             PolygonBox[{{9., 0.}, {11., 0.}, {10., 1.}}]}, 
            PolygonBox[{{1., 0.}, {7., 0.}, {6., 1.}, {5., 2.}, {4., 3.}, {3.,
              2.}, {2., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
           1.}, {7., 0.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 3.}}, {{5., 2.}}, {{6., 1.}}, {{
          7., 0.}}, {{8., 1.}}, {{9., 0.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 1.}, {
            7., 2.}, {6., 1.}, {5., 2.}, {4., 1.}, {3., 2.}, {2., 
            1.}}]]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
           1.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 1.}}, {{5., 2.}}, {{6., 1.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{
            PolygonBox[{{9., 0.}, {11., 0.}, {10., 1.}}], {
             PolygonBox[{{5., 0.}, {9., 0.}, {8., 1.}, {7., 2.}, {6., 1.}}], 
             PolygonBox[{{1., 0.}, {5., 0.}, {4., 1.}, {3., 2.}, {2., 
              1.}}]}}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 
           1.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 1.}}, {{5., 0.}}, {{6., 1.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 0.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{{PolygonBox[{{1., 0.}, {3., 0.}, {2., 1.}}], 
             PolygonBox[{{9., 0.}, {11., 0.}, {10., 1.}}]}, 
            PolygonBox[{{3., 0.}, {9., 0.}, {8., 1.}, {7., 2.}, {6., 3.}, {5.,
              2.}, {4., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
           3.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 0.}}, {{4., 1.}}, {{5., 2.}}, {{6., 3.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 0.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{{PolygonBox[{{1., 0.}, {3., 0.}, {2., 1.}}], 
             PolygonBox[{{3., 0.}, {5., 0.}, {4., 1.}}]}, 
            PolygonBox[{{5., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 3.}, {
             7., 2.}, {6., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
           1.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 0.}}, {{4., 1.}}, {{5., 0.}}, {{6., 1.}}, {{
          7., 2.}}, {{8., 3.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 3.}, {
            7., 2.}, {6., 3.}, {5., 4.}, {4., 3.}, {3., 2.}, {2., 
            1.}}]]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 4.}, {6., 
           3.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 3.}}, {{5., 4.}}, {{6., 3.}}, {{
          7., 2.}}, {{8., 3.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[{{9., 0.}, {11., 0.}, {10., 1.}}], 
            PolygonBox[{{1., 0.}, {9., 0.}, {8., 1.}, {7., 2.}, {6., 3.}, {5.,
              2.}, {4., 3.}, {3., 2.}, {2., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
           3.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 3.}}, {{5., 2.}}, {{6., 3.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 0.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 3.}, {
            7., 4.}, {6., 3.}, {5., 2.}, {4., 1.}, {3., 2.}, {2., 
            1.}}]]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
           3.}, {7., 4.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 1.}}, {{5., 2.}}, {{6., 3.}}, {{
          7., 4.}}, {{8., 3.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[{{9., 0.}, {11., 0.}, {10., 1.}}], 
            PolygonBox[{{1., 0.}, {9., 0.}, {8., 1.}, {7., 2.}, {6., 1.}, {5.,
              2.}, {4., 1.}, {3., 2.}, {2., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
           1.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 1.}}, {{5., 2.}}, {{6., 1.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 0.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{
            PolygonBox[{{5., 0.}, {7., 0.}, {6., 1.}}], {
             PolygonBox[{{1., 0.}, {5., 0.}, {4., 1.}, {3., 2.}, {2., 1.}}], 
             PolygonBox[{{7., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 
              1.}}]}}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 
           1.}, {7., 0.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 1.}}, {{5., 0.}}, {{6., 1.}}, {{
          7., 0.}}, {{8., 1.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[{{1., 0.}, {3., 0.}, {2., 1.}}], 
            PolygonBox[{{3., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 3.}, {
             7., 2.}, {6., 1.}, {5., 2.}, {4., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
           1.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 0.}}, {{4., 1.}}, {{5., 2.}}, {{6., 1.}}, {{
          7., 2.}}, {{8., 3.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{{PolygonBox[{{1., 0.}, {3., 0.}, {2., 1.}}], 
             PolygonBox[{{3., 0.}, {5., 0.}, {4., 1.}}]}, 
            PolygonBox[{{5., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 1.}, {
             7., 2.}, {6., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
           1.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 0.}}, {{4., 1.}}, {{5., 0.}}, {{6., 1.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 1.}, {
            7., 2.}, {6., 3.}, {5., 4.}, {4., 3.}, {3., 2.}, {2., 
            1.}}]]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 4.}, {6., 
           3.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 3.}}, {{5., 4.}}, {{6., 3.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 3.}, {
            7., 2.}, {6., 1.}, {5., 2.}, {4., 3.}, {3., 2.}, {2., 
            1.}}]]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
           1.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 3.}}, {{5., 2.}}, {{6., 1.}}, {{
          7., 2.}}, {{8., 3.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 3.}, {
            7., 2.}, {6., 3.}, {5., 2.}, {4., 1.}, {3., 2.}, {2., 
            1.}}]]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
           3.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 1.}}, {{5., 2.}}, {{6., 3.}}, {{
          7., 2.}}, {{8., 3.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{
            PolygonBox[{{7., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 1.}}], 
            PolygonBox[{{1., 0.}, {7., 0.}, {6., 1.}, {5., 2.}, {4., 1.}, {3.,
              2.}, {2., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
           1.}, {7., 0.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 1.}}, {{5., 2.}}, {{6., 1.}}, {{
          7., 0.}}, {{8., 1.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{{PolygonBox[{{5., 0.}, {7., 0.}, {6., 1.}}], 
             PolygonBox[{{9., 0.}, {11., 0.}, {10., 1.}}], 
             PolygonBox[{{7., 0.}, {9., 0.}, {8., 1.}}]}, 
            PolygonBox[{{1., 0.}, {5., 0.}, {4., 1.}, {3., 2.}, {2., 
             1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 
           1.}, {7., 0.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 1.}}, {{5., 0.}}, {{6., 1.}}, {{
          7., 0.}}, {{8., 1.}}, {{9., 0.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[{{1., 0.}, {3., 0.}, {2., 1.}}], 
            PolygonBox[{{3., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 1.}, {
             7., 2.}, {6., 1.}, {5., 2.}, {4., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
           1.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 0.}}, {{4., 1.}}, {{5., 2.}}, {{6., 1.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{{PolygonBox[{{1., 0.}, {3., 0.}, {2., 1.}}], 
             PolygonBox[{{3., 0.}, {5., 0.}, {4., 1.}}], 
             PolygonBox[{{9., 0.}, {11., 0.}, {10., 1.}}]}, 
            PolygonBox[{{5., 0.}, {9., 0.}, {8., 1.}, {7., 2.}, {6., 
             1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
           1.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 0.}}, {{4., 1.}}, {{5., 0.}}, {{6., 1.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 0.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[{{9., 0.}, {11., 0.}, {10., 1.}}], 
            PolygonBox[{{1., 0.}, {9., 0.}, {8., 1.}, {7., 2.}, {6., 3.}, {5.,
              4.}, {4., 3.}, {3., 2.}, {2., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 4.}, {6., 
           3.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 3.}}, {{5., 4.}}, {{6., 3.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 0.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 1.}, {
            7., 2.}, {6., 1.}, {5., 2.}, {4., 3.}, {3., 2.}, {2., 
            1.}}]]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
           1.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 3.}}, {{5., 2.}}, {{6., 1.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 1.}, {
            7., 2.}, {6., 3.}, {5., 2.}, {4., 1.}, {3., 2.}, {2., 
            1.}}]]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
           3.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 1.}}, {{5., 2.}}, {{6., 3.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{{PolygonBox[{{7., 0.}, {9., 0.}, {8., 1.}}], 
             PolygonBox[{{9., 0.}, {11., 0.}, {10., 1.}}]}, 
            PolygonBox[{{1., 0.}, {7., 0.}, {6., 1.}, {5., 2.}, {4., 1.}, {3.,
              2.}, {2., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
           1.}, {7., 0.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 1.}}, {{5., 2.}}, {{6., 1.}}, {{
          7., 0.}}, {{8., 1.}}, {{9., 0.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[{{1., 0.}, {3., 0.}, {2., 1.}}], 
            PolygonBox[{{3., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 3.}, {
             7., 4.}, {6., 3.}, {5., 2.}, {4., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
           3.}, {7., 4.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 0.}}, {{4., 1.}}, {{5., 2.}}, {{6., 3.}}, {{
          7., 4.}}, {{8., 3.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{{PolygonBox[{{1., 0.}, {3., 0.}, {2., 1.}}], 
             PolygonBox[{{9., 0.}, {11., 0.}, {10., 1.}}]}, 
            PolygonBox[{{3., 0.}, {9., 0.}, {8., 1.}, {7., 2.}, {6., 1.}, {5.,
              2.}, {4., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
           1.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 0.}}, {{4., 1.}}, {{5., 2.}}, {{6., 1.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 0.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{{PolygonBox[{{1., 0.}, {3., 0.}, {2., 1.}}], 
             PolygonBox[{{3., 0.}, {5., 0.}, {4., 1.}}], 
             PolygonBox[{{5., 0.}, {7., 0.}, {6., 1.}}]}, 
            PolygonBox[{{7., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 
             1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
           1.}, {7., 0.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 0.}}, {{4., 1.}}, {{5., 0.}}, {{6., 1.}}, {{
          7., 0.}}, {{8., 1.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 3.}, {
            7., 4.}, {6., 3.}, {5., 2.}, {4., 3.}, {3., 2.}, {2., 
            1.}}]]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
           3.}, {7., 4.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 3.}}, {{5., 2.}}, {{6., 3.}}, {{
          7., 4.}}, {{8., 3.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[{{9., 0.}, {11., 0.}, {10., 1.}}], 
            PolygonBox[{{1., 0.}, {9., 0.}, {8., 1.}, {7., 2.}, {6., 1.}, {5.,
              2.}, {4., 3.}, {3., 2.}, {2., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
           1.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 3.}}, {{5., 2.}}, {{6., 1.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 0.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[{{9., 0.}, {11., 0.}, {10., 1.}}], 
            PolygonBox[{{1., 0.}, {9., 0.}, {8., 1.}, {7., 2.}, {6., 3.}, {5.,
              2.}, {4., 1.}, {3., 2.}, {2., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
           3.}, {7., 2.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 1.}}, {{5., 2.}}, {{6., 3.}}, {{
          7., 2.}}, {{8., 1.}}, {{9., 0.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{
            PolygonBox[{{1., 0.}, {5., 0.}, {4., 1.}, {3., 2.}, {2., 1.}}], 
            PolygonBox[{{5., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 3.}, {
             7., 2.}, {6., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 
           1.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 2.}}, {{4., 1.}}, {{5., 0.}}, {{6., 1.}}, {{
          7., 2.}}, {{8., 3.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[{{1., 0.}, {3., 0.}, {2., 1.}}], 
            PolygonBox[{{3., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 3.}, {
             7., 2.}, {6., 3.}, {5., 2.}, {4., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
           3.}, {7., 2.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 0.}}, {{4., 1.}}, {{5., 2.}}, {{6., 3.}}, {{
          7., 2.}}, {{8., 3.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{
            PolygonBox[{{1., 0.}, {3., 0.}, {2., 1.}}], {
             PolygonBox[{{3., 0.}, {7., 0.}, {6., 1.}, {5., 2.}, {4., 1.}}], 
             PolygonBox[{{7., 0.}, {11., 0.}, {10., 1.}, {9., 2.}, {8., 
              1.}}]}}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
           1.}, {7., 0.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 0.}}, {{4., 1.}}, {{5., 2.}}, {{6., 1.}}, {{
          7., 0.}}, {{8., 1.}}, {{9., 2.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{{}, 
         {RGBColor[1., 0.4, 0.], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[{{1., 0.}, {3., 0.}, {2., 1.}}], 
            PolygonBox[{{3., 0.}, {5., 0.}, {4., 1.}}], 
            PolygonBox[{{5., 0.}, {7., 0.}, {6., 1.}}], 
            PolygonBox[{{7., 0.}, {9., 0.}, {8., 1.}}], 
            PolygonBox[{{9., 0.}, {11., 0.}, {10., 1.}}]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1., 0.4, 0.], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
          CapForm["Butt"], 
          LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
           1.}, {7., 0.}, {8., 1.}, {9., 0.}, {10., 1.}, {11., 0.}}]}}, 
        {RGBColor[1., 0.4, 0.], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[3], 
         CapForm["Butt"], GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[{
               {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
               {AbsoluteThickness[1.5], Dashing[{}], 
                CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[1., 0.4, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}],
            TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
          0.}}, {{2., 1.}}, {{3., 0.}}, {{4., 1.}}, {{5., 0.}}, {{6., 1.}}, {{
          7., 0.}}, {{8., 1.}}, {{9., 0.}}, {{10., 1.}}, {{11., 
          0.}}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {1., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {3., 
            FormBox["3", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {5., 
            FormBox["5", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
            FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
            FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
            FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
            FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
            FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
            FormBox["10", TraditionalForm], {0.01, 0.}}}, None}}],
      FrameTicksStyle->Directive[
        StrokeForm[
         Opacity[0]], FontOpacity -> 1],
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        AbsoluteThickness[1], 
        GrayLevel[0, 0.2]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->{
        GrayLevel[0, 0.7], 
        RectangleBox[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]},
      Ticks->{{}, {}}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[5]=",
 CellID->147686841,ExpressionUUID->"7be57f5c-91e9-44a1-a14f-43f4eae7d890"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", 
   RowBox[{"5", ",", 
    RowBox[{"Filling", "->", "Bottom"}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}]}], "]"}], 
  "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[6]:=",
 CellID->9930502,ExpressionUUID->"787a797a-9dff-4863-ad30-1bee4ec12a91"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq4DJq8App+
JTTzVdDsV4PJDzn3AgAUSxO+
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apq8
Epq8Cpr9ajD5IedeANnME2Y=
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GZg8FCig
ySuh6VdBk1dD0z903AsAuUYWgg==
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{7, 11, 10, 9, 8}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmryCA6q5
SmjyKmj61WDyQ869AHlVFwI=
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0K6DJ
K6HJq6DJq6GZP3TcCwAV8hhQ
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 5, 4, 3, 2}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
06+EJq+CJq+GZv/QcS8A0wYWgg==
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DpV0CT
V0KTV0GTV0OTHzruBQB84xdQ
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {9, 11, 10}, {7, 9, 8}}], 
             PolygonBox[{{3, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJq8Apq8
Epr5Kmj2q8Hkh5x7AQRbE6Y=
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apr5
SmjyKmjyajD5IedeANLpFTQ=
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GZg8FCig
ySuhyaugyauhyQ8d9wIAfMYWAg==
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{7, 9, 8}, {9, 11, 10}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmrwCmrwS
mrwKmrwaTH7IuRcAcnIY0A==
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0K6DJ
K6HpV0GTV0OTHzruBQDZYxfQ
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{5, 9, 8, 7, 6}, {1, 5, 4, 3, 
              2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
06+EZr4KmrwamvzQcS8AloYWAg==
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {9, 11, 10}}], 
             PolygonBox[{{3, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KKzig
mquEJq+Cpl8Nzfyh414AsEYWAg==
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTR5
JTR5FTT71WDyQ869APEME4Y=
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apr5
SjB5KFBBk1dDkx867gUAlmkUtA==
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR9Cmjy
Smj6VdDMV4PJDzn3AgBZuBVU
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmrwCmrwS
TB4KVNDk1dDkh457ATXyGFA=
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdDkFdDk
ldDMV0GTV0PTP3TcCwDJYxfQ
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{5, 7, 6}}], 
             PolygonBox[{{1, 5, 4, 3, 2}, {7, 11, 10, 9, 
              8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJKzig
mquEJq+Cpl8Nzf6h414ADNUWgg==
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KK6DJ
K6HJq6DJq6GZP3TcCwCpYxfQ
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTTz
ldDkVdDk1WDyQ869AOopFVQ=
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTT9
SmjyKmj61WDyQ869AAy4FTQ=
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTR5
JTR5FTTz1WDyQ869AEZ4FTQ=
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMTB4KFNDk
ldD0q6DJq6HpHzruBQAl8hhQ
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{7, 11, 10, 9, 8}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdDkFdDk
ldDkVdDk1dDkh457AYzjF1A=
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{5, 7, 6}, {9, 11, 10}, {7, 9, 8}}], 
             PolygonBox[{{1, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJK6DJ
K6HJq6DJq6HZP3TcCwAF8hhQ
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KK6DJ
K6HpV0GTV0OTHzruBQBs4xdQ
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}, {9, 11, 10}}], 
             PolygonBox[{{5, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTTz
lWDyUKCCJq+GJj903AsArakU1A==
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTR5
JTR5FTR5NZj8kHMvAAXVFwI=
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTT9
SmjyKmjyajD5IedeAD+VFwI=
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMTB4KFNDk
ldDkVdDk1dDkh457AeljF9A=
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{7, 9, 8}, {9, 11, 10}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNxQNWn
gCavhKZfBc18NTT7h457Ae0pFNQ=
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJK6DJ
K6GZr4Imr4YmP3TcCwDJYxfQ
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {9, 11, 10}}], 
             PolygonBox[{{3, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMmrwCmrwS
TB5Kq6DJq6HpHzruBQBc4xdQ
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}, {5, 7, 6}}], 
             PolygonBox[{{7, 11, 10, 9, 8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJo+BTR5
JTT9Kmj2q8Hkh5x7Ae0ME4Y=
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTR5
JZg8FKigyauhyQ8d9wIAyUYWgg==
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTT9
SjB5KFBBk1dDkx867gUAAxUWgg==
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0Kzig
mquEJq+Cpl8Nzfyh414AHNUWgg==
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 5, 4, 3, 2}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
k1dCk1dBM18Nzf6h414A2ekUtA==
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DpV0CT
V0LTr4Imr4amf+i4FwC5YxfQ
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 7, 6, 5, 4}, {7, 11, 10, 9, 
              8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMmrwCmrwS
mrwKmrwamvzQcS8AIGMW0A==
        "], {{{}, 
          {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 3, 2}, {3, 5, 4}, {5, 7, 6}, {7, 9, 8}, {9, 11, 
             10}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.9, 0.36, 0.054], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], CapForm["Butt"], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[6]=",
 CellID->626224708,ExpressionUUID->"067a853e-0b0b-4f41-9f9a-c6e5e75c910f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", 
   RowBox[{"5", ",", 
    RowBox[{"Filling", "->", "Bottom"}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Monochrome\>\""}]}], "]"}], 
  "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[7]:=",
 CellID->67941158,ExpressionUUID->"ad55ead4-9f81-476d-9af9-2a52475219c9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
sN3CwSDiUNy1mYnDtE2Wj7KMFbRZWY7W1lbbzRsYo6Oj4o7DVmyEoN+4f/9+
2pMSnj17ZvvogkF0ht/73vfMxMa//uu/FhYWmuk30saG4S9XTU0NY4MZMhkb
xqTNNPIUG2mvJo7Lly9rLAhaWM9C8xEb4qQ2W6Ik0JlGiLn0G8yTCb2VlZW9
e/c6zS3CoKGhoaurixkyWRHVJSqtsbExFouJ//7sZz8rLS11qrSpqWljY8N2
IwfA48ePZbdTVFQkqjGvcZjUZPkry1hBqWWJ2JNVevfuXdstHADiqyruNZwa
2759+0cffWQyNv7qr/5KJoQB7TfURzzibk50g+KCIhNC8cPS0pLtYwyAt2/f
ynvhgoKCvMZGb2+vmqLnr99QY2Pnzp0iNkx+uX7605/Kk+rs7NR1UuFmLDZM
Ss008hQbSVeTkpISUdYPfvADWdabN290lQUt7GaheYqN9+/f79q1S72acIfi
Z1v2GyJsbB8j8ujUqVPy28rcGF1u3bolv0EMbG5pcXFRXiPq6+tnZ2dtN2AY
zM3NyRRa3OLNz8/bbme/u337tvzaXr161XyTXb9+PdD9RkdHhzz++/fvOyc1
MjIi8lvnD0WyQQbobm1traamxqmueDw+OTmZv9h4+fKl/Mzjx4/ntd+QsWEr
02hvb5cn+/z5cy0nFWImY8OYzTKNfMSGejXp7e11CpqampKzI6qqqlZWVrSU
Be+sZ6H5iI319XX5hY3FYvJqwh2Kb2XSbzDVM6wePHggW//cuXOGu6BwE2mM
TF0Y2HQh7tEOHjzo1JW4d3vx4oXtpguPiYmJkpISp2737dsnLtC2W9u/xP2F
nJxw5MgRW00mig5ov/Hs2TN5NTl9+rR6UpcuXZJ/JVIO20fqa+fPn5d1defO
nfzFhsj5KyoqnA9MWjBBe7+hxkZ3d7eh79J3zczMqINdy8vLHk8qxEzGhjEu
mYb22FCvJs3NzXNzc7Kshw8fyu9CR0eHllODRz7JQrXHhrpgbNLVhDsUH6Lf
iLKFhQU5LLx//3619eGduooXA5su+vv7ZVdjZXJCuA0MDMjq7e3ttd3aPrW2
ttbQ0CBz8tevX9tqr6mpKfkyaYD6jaWlJXk1qa2tTX3IeODAAZkBBu7xujGj
o6Py29rW1pbX2FCnyA4NDSWVpbHfUGOjvr7eYqYxMjIiTtY5EqZsuTAWGya5
ZxoaY0O9mqiTEyR1253Hjx9rPEfkxj9ZqMbYePPmjfyokydPJhXEHYrfZNVv
sDpfyIgrjtwGvaSkZHx83FSXEyEimZFX+TNnzthucz9SV044dOiQ7RYLp6NH
j8qenG1H0lJXThgcHLTbXuIA5MEEot8QV5PDhw/Lmzhxd5N6UiLBEGmG8zsi
8QjQ43VjlpeX5Xr7lZWVMzMz+YuNR48eyc/ZbJtXLf2GGhsi0xgbG9P7ZcmW
+k0P6Ioo+WYsNkzKJNPQFRvq59y6dSu1oNnZ2fr6eucXSktLWWXLLl9lobpi
Q12/a7OrCXcovpJVv8HqfCGjDguLn/Pf00SUOrDJO+xJklZOsDg5IdySHojw
DnsSdeWE9vZ22831G6dPnw5Qv6G+AX3p0qXNTurOnTvy1wL0eN2YEydOOJUj
8uTh4eH8xUbSygmbTVzR0m9YX6MpiTjZ5uZm53iYspXKZGwYk2GmoSU21KtJ
6uQE6cWLF3KVrYMHDzJlyxYfZqFaYiPD9bu4Q/GJHPoNpnqGRiKRkMPColnz
06/gN8RVnoHNzXR3d8te6N69e7bbKszUByJtbW22W95HxN2EnJwgcrO0j5PM
m52dra2tDUS/8e7dO3k1OXDggPt5idiTX3mRhNg+dh9RJ8D09PTkLzaSpsi6
T1zx2G+osWFxjaYkExMTTNlKy2RsmJR5puExNtSrSWVlpfuWPVeuXJFHdePG
jfycOrbgzyzUY2wMDw/Lf+6+Uih3KH6Qc7/B6nwhoA4Ll5eXT01N6e5O8B0i
sWFgM5W6coJPJieEG++wp6WunPD06VPbrfR7gVj7Yss3oJPMzMyIlMP5/YqK
Cp8/Xjfm/fv3xcXFTrVksrabl9jIduWEnPuNpDWafJVpqNuOMGVLMhYbJmWb
aXiJjWy3MT106JDz+4WFhW/fvs1TDWAzfs5Cc44Ndf2uxsbGLa8m3KFY56Xf
YKpn0KnDwg8fPtTUf8CNSG9knTOw+V+/XTlBZOlOhfhnckK4qQ9ExCV7cXHR
dhTYp2485z45wQr/b1d08eJFeYRJ2zpsZnh4OCiP181QtystKSmZmJjIX2yo
U2QznLiSc7+hxob1NZpSnTx5Uh4eU7b+y2xsGJNbppFbbOSwjenr16/Vw1tb
W8trbUDl8yw0t9hQN5DKfP0u7lAs8thvMNUz0NRh4bNnz3rqMpANdRtTBjaP
HTvm1IbfJieEm/pAhHfY1Y3nxE2xPzee8/PaF+ob0N98803mJ3XhwgX5D337
eN0YdbvSGzdu5C82klZOyHziSg79hhobSRuj+8T09DRTtiSTsWFSbplGDrGh
Xk0ymZwg3bt3T35Tzp8/b6BO4PB/FppDbNy8eVP+k+vXr2deFncoVmjpN5jq
GVDqsHB9fX3qdqXIn6SBzSg/ELl7967amdhumWhRH4j09/fbjgVrxL1DDpMT
zEvarsg//caHDx+23CRoMyLx2L9/v/Nv/fl43Rh1u9KjR4/mNTY6OztlWdlO
XMmq31Bjw4cPoKUnT57IKVunTp3S16rBYyw2TPKSaWQVG0lXk2y3MW1vb5fH
OTo6aqZyIi4oWWhWsaFuIJXt+l3coZinsd9gqmcQyWHhoqKitNuVIq8Y2BTm
5+flygm+nZwQbuoDkci+w37t2jX5ZRwYGLDdJm78uV2R+ga0yyZBm5mYmBBJ
iPMJPny8boa6XWl5ebn7yn4eY0OdIpvbxJXM+w3frtGUSn2V+9GjR7pbOBhM
xoYx3jONzGNDvZpkNTnBMTMzU11d7fzzsrKy5eVlY7UUTQHKQjOPjbW1tbq6
Ouc39+7dm8P6XdyhGKax32CqZ+Co2zpcuXIl29aHFhEf2FRXTojFYr6dnBBu
4mId8XfY1ZUTsp2cYMU333zjq35DfQP6woULuZ3UjRs35IdEc9sRuV2pMDQ0
lL/YSFo5Ibcpshn2G2ps+PkBtEPcjjU2NjpHG80pWyZjwxgtmUaGsaFlG9On
T5/KaTknTpwwXF2RErgsNMPY0LJ+V8TvUEzS3m+wOl+AqNs6bLldKfInadA7
agObly9flh2+zycnhJs6Qtvd3W07LoxaXV1VN57LYXKCeep2Rdb7jYWFhaw2
CXJx9OhR53P883jdGHW70q6urrzGhkj5nF8Q+ZuXKbJb9htqbPj8AbQ0NjYm
p2y1tLREbcqWsdgwSVemsWVsqFeT3CYnSD09Peo9tZV6i4IgZqFbxsb4+Lj8
BS/rd0X8DsWYPPUbrM4XCOqwcDwe33K7UuSVOrAZqXfY1ZUTjh8/brsdok5c
uGVzROoddnXlhABtPKduV2Sx39C7Ds/09HR5ebnzaXV1ddYfrxujbldaX1/v
cezCPTbUlRMuXbrkpaBvXfsNNTYC8QBaun79ujwpX62Ikm/GYsMkvZmGe2yo
V5P79+97KUh0AvLrU1xc/P79eyu1F24BzULdY0Pv+l2RvUMxKU/9RjSnevrc
6upqX19fS0tLPB4X/xU//+3f/q1s/Xv37nlpfWihDmz+4Ac/kC0l2s52+OiR
GoS/+tWv5MoJlZWVgZicEG7iwi0H6nft2vVHf/RHUYjDf/qnf5JfPS+TE6w4
d+6c4X7D/Woi7lC8n9TDhw/lB4rEMgpBuLKyIrcrLSoqevHiRf5iQ3zN5QTp
5uZm7xNXXPoNNTaC8gBaktNFduzY0dDQEIU4NBkbeapGM5nGZrGhXk20bGM6
MTEhV+0uLy//+uuvoxCHgY4NY1xiQ0439TjVTYrgHYrJJCqv/cZnn30mOnPz
Xy6TFRigOEwkErLPSdXW1ua99eGdSH6++OKL1AYSbSda0HYQeZU2CHfv3i2v
GjmvnAC9xOVbJJmRikN5vkHceM5wv+F+NdG4Ds+f//mfRyoIv/e978mfr169
qqUON4uNnTt3Oj+InE3XFNnN+o18xIYxU1NTe/bsiVQcmoyNfFSjsUxjs9iQ
Z1pbW6vrajIwMJD2OxXiOAx0bJi0WWxIutbviuAdiskkKuj9hvUKDEocqps4
pPr88899uyVl1ExPT8uphqnBFqAxwFTuQbjtt2+a265+/I6IQ/kCRaTiUNfk
BMNM9hvuFfjJJ5/oesiovr4UqSDclv12pe7VuFlsOO7cuaOxrM36Db2xYZI4
ZrlKbdTi0Exs6K1Gk5mGS2xs072NqShLrsgUnTgMbmyY5BIb27Su3xXNOxTD
SVRA+w2fVGAg4rCvr2+z1t/22/W6dbU+POrq6nJpKdGOtkMpd+5B+PHHHwdi
1ceIiGwctrS02K77XJhsL/cKPHbsWBBPyjD3Oty1a9fr16/NVOMXX3yhq6At
ywrQKg2qyMahydjQWI0mMw33k/r66691FbRlWSGOw4DGhknusfGzn/3MTEEE
oZayAtpv+KcC/R+H4kbD5fgbGxs1BgC8kBsspiXa0XYo5c49CGtra23XPX4v
snEY0M7QZHsZq8DIBmF1dbWuOtyyGhsaGoyVxZfLb9zj0GRsaKxGk5mGyYCP
bBwGNDZMMhaHBKGBsgLab/inAv0fhy6zK7f99pVhjQEAL+RyTGmJdrQdSrkj
CAOEOAwWk+1lrAIJQgPVGNyyjCEOg1WN/jmpgFagee5NFtDYMMlYHBKEBsoK
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
lmzunLeq1G5tba2urs45Kh+unGBRhv1G0tXEb29Ap5JbVfpq2xH1cVJ7e7vt
SkJ+qe+wHz582D+T9k+dOuUcVSCmT6vXFJcHqazRtBl1la0MX/MxQMsdivqQ
3WWbM7JQ60J8h5K0Lspm+UbgslB1qufo6OhmFej9amIyC7V1hyKu/gcPHnTK
ZVuHiHj48KEMto6ODmPB5iKRSLByQtScPHlSxqG4CbUdg79x8eJFeUj+XDnB
oi37jaSryYsXL2wf8tZev34tl9Framryw5Qt9XFSTU2NnycnQBf1Hfbbt2/b
jsHfePDggTykc+fO2a6hjKjXlLQPUtUH0GQaSdRVtnLb4lY7jXco6toXIuFM
LYss1CdCfIeStC5K2nwjcFloJtsV6bqamMxCrdyh3LhxQxbKsHB0nD17Vrb7
8PCwmWDbzOrqqvqNnpqasl09MEHkzJWVlU67i5tQ6++wj4+Pyy/FN998Y7t6
/Mi931CvJleuXLF9sJlSt6r0w7Yj6uOkp0+f2q4eGKK+w/7u3Tu7QbiwsFBc
XOwcT2NjY1CmT6vXlNQHqUlrNJFppBobG5OrbLm/5mOGxjuUpLUvkmKDLNRX
QnyHooZ0ar4R0Cw0abuipJPSezUxloXm+w5FxFVfX5/oZkVQif+Kn9+8ecOw
cDSp77Dv3Llz//79MiryOlcwNQjFn5w5c0Z+iVg5IVLUd9hFQCYFhsk4/OUv
fxmUlRMscuk31KuJz9+ATqVuVfkHf/AHZoIwbRz+wz/8gzySnp4e2xUDc9R3
2EU8fP3117Y6Q5F8NjU1OUcSuFU11GvK97//fbUO1QfQZBqbUVfZqqiosNgZ
ar9DUde+SIoNslBfCfcdirouippvBDoLVad6VlVV5e9qYjILzd8dSiKRkNtC
SfLg2dYhgkZGRkQ8b0sh4iTtxE7v0gahuDLKn0+fPm27VmBad3d3ahA6cZiP
INwsDuUwvuiBh4eHbdeKf23Wb6hXE/+/AZ1EJD/yEaqZznCzONy+fbvzg0hj
gjI5AbrcuXPHD52hHBoSrl+/brtWsvYXf/EXqXUob3a2kWls5cc//rEfOsN8
3KH82Z/9WeqpkYX6UIjvUKanpz/++OPUUwt0FirSlS+//DL1pPJxNTGZhebj
DkXdpzute/fuaTl4BIjoFuQ6SBqDLecgZOWEaJqampIdaRLtQZhJHAZl5QRb
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
OTMzI9prcnJS7p9VV1e3trampaxHjx7JMOjp6XFi48qVK/IP7969q6UgBA6x
AQBA1JjMQgHrNjY2mpqanNguKSkZGxsTAT87O1tbW+v8YWlp6dLSku3DjJbn
z5/L243Tp0/bGSsx6MiRI3LQ++3bt7arH79z4sQJOVQ7PDws2+vOnTsyPi9e
vOi9oMXFRdHPOB+4f//+ubk5WdahQ4dkbMzPz3svC8Gixoa4VBEbAABEgbEs
FPADdY3f69evy4AfGRmRk8N5qcSkpaUl+SpZTU2NMywcbq9fv1ZPmUFvPxgc
HJQ9w7lz55Ka7OTJk/Jvx8fHvRQk+ha5+1tJScnExIRa0OTkpIyNffv2ra+v
6zpB+J8aG7FYjNgAACAKjGWhgB9MT08XFhY6Id3a2poU8OrkcFZSMkPcg4iG
kMPCIyMjmoY9/E7te8+fP2+7HaLu/fv3xcXFaSeuOGZmZuSyq2VlZR8+fMi5
rP7+ftn04ufU2Lh37578hd7eXo2nCZ9TY2NgYIDYAAAg9ExmoYB16o5Le/fu
nZqaSs14Dxw44PwCL5WYcffuXfUWI8cBjmBqb29n0NsPkt5nFG2Rtr2ePHki
1+A9depUbmWJXkUOCx89enSz2JDL/wqvXr3Se77wJzU2jh8/TmwAABB6JrNQ
wA/UVWTv37+fNuDVyeGspJRv8/Pz8h6kubk5dVg43GZmZmpqauSgN1vc2qK+
z5h24op07tw5+ZsPHjzItiDRn8gWLy8vTzssLGOjurra+c2KioqVlZV8nDj8
Iyk2XLaBIzYAAAgNY1ko4AfPnj2TYey+iqy6khIvleTP+vp6Q0ODU8+xWGxy
ctKlUcJqZGREDnqfOHHCdptEkbj5ld93l4krjrm5uf379zu/XFxcvLCwkFVZ
3d3dsqyHDx+6lzU8PCxjo62tLU+nD5+QsSEafWhoiNgAACD0TGahgHXqKrK1
tbWzs7PuMa9ODuelkjzp7e2VlXzr1i33FgkxtR4Y9DZMfZ/RfeKKJDqEkpIS
5580NTVlvhj46OiobOizZ89mEhsXLlyQ/+TRo0d5rQpYpMZGd3c3sQEAQOiZ
zEIB60S4Hj582IneoqKiTFaRVSeH81JJPrx8+VLeUJw8eTKTe5Cwmpuba25u
ZtDbio6OjswnrkjqQqx9fX2ZFCT6EDksXF9fv+WwsIwN+UCktLR0cXEx3xUC
85JiI8NXOIkNAAACzVgWCvjB7du3ZeheunQpw4BXJ4fzUoleKysrFRUVTt1W
Vla6rJwQERMTE7FYjEFvw9T3GTOcuCLJzcIKCwtFAG9Z1rFjx7IaFlZjQz4Q
aWlpITbCR8aGaOixsTFiAwCA0DOZhQLWvXv3Tq4ie+DAgawCvqenR35ZBgcH
bZ9KeJw6dcqp1YKCgidPnmTVKGF169YtBr1NWlpaKi0tzXbiijQ1NVVeXu78
86qqqtXVVZey1M3FMh8WlpL2zjZWRTBAjY2rV68SGwAAhJ7JLBSwbm1tzcsq
skkrKb1//972CYXBo0eP5E3EuXPnsmqRcDt58iSD3mYkvc/44sWLHNrr4cOH
MpLPnDmzWVnz8/Oi98htWFg6evSojI23b9+arCvkjxobR44cITYAAAg9k1ko
4Afq6ql37tzJIeDVyeG8VOLdwsKCHBZubGyM2ubX7qanpysrK53KqampYdA7
f27evCl7hitXruTcZGfPnpWf8+zZs9SC1tfX9+3bl/OwsKQ+EBGxsba2Zr7S
oJcaG/F4PJOV/YgNAACCzlgWCviBuorsN998k3PA37hxQ34OL5V4sbGx0dLS
4tRkSUnJ+Ph4zo0SVk+ePJGrGHV2dtpusXBS32c8dOiQl/aanZ2tr6+Xt9VL
S0tJZV2+fNnjsLB0//59+VHd3d02ag46qbExODhIbAAAEHoms1DAupWVlbKy
MidKKysrZ2ZmvMS8nBwu8FJJJlZXV/v6+lpaWkQXIf4rfhZ/cu3aNVmN169f
99IiISZuqWQtffHFF2oF2m7V4EmNw//8z/+sq6uT16+cJ65IIyMjRUVFzgd+
/vnnzc3NsqyxsTEtw8KS+kCktrbWQGyk/SLnqawQS61GNTZOnz4dxNhAsJj8
LoeyLDpDLUJZjaE8KWhhNwslDmFY2s5QXUV2eHjYY8BPT0/LyeGxWOwnP/kJ
Ae8ikUhUVVVt+65PPvlEzgBpbW312CIhNjc3V1NTsy2FqFJRsbbbNkjSxuFH
H30kf753756WJrty5Upqezmdj/OD92Fhx+zsrLjgGouNtBVIHGYrbTXK2BBf
9mxX9vNDbCBYTH6XQ1kWnaEWoazGUJ4UtLCehRKHMCltwMfjcfnzhQsXtAT8
0NAQAZ+J1dXV1BZRlZeX57xyQhRMT0/v3bt3s2BjDDBDW8Zhe3u7xiaTDylS
adxcTBT0/e9/30xsuFQgcZg59zgUsZHVxug+iQ0Ei8nvcijLojPUIpTVGMqT
ghY+yUKJQ5ixZcDv379f1yqyIuDlYr8EvIu+vj6XFhHu37+vpUXCqqury6X2
WNEoQ+5xGIvFtExcyaTJRC9kpiC9seFegcRhhtyr8euvvw5ibCBYTH6XQ1kW
naEWoazGUJ4UtPBPFkocwgD3gN+5c+fExAQBb5hcxTet73//+7paJKwaGxtd
KlBUr+0WDgb3OPzRj35krMm++uorMwXpjQ33CiQOM+RejQGNDQSLye9yKMui
M9QilNUYypOCFv7JQolDGOAe8J999hkBb5764liq0tJSjY0SSrFYzKUCRfXa
buFgcI9DUcnGmkxjWSZjw70CicMMGYtD+g1sxuR3OZRl0RlqEcpqDOVJQQv/
ZKHEIQwg4H3IfaCssbFRY6OEEqN/WpiMQ/cm01gW82QCx1gc0m9gM6Gcu2Ky
LDpDLUJZjaE8KWjhnyyUOIQBBLwPub9Q1tXVpbFRQom35LQwGYfuTaaxLNaT
CRxjcUi/gc2Eco0Xk2XRGWoRymoM5UlBC/9kocQhDCDgfchl4eXy8vLp6WmN
jRJK6sbrSQoKCn71q1/ZbuFgMBmHLk2mtyyTseFSgR999BGrmmfIWBzSb2Az
LkEY6H7DpaxPP/3UzL5LRUVFKysrugoKt1BeU4gNbMYnWWg8Hg/olwvB4pOA
D+7VJE8SicTnn3+e2iK6dgQOPVFRmwVbW1ub7eYNDBGHn3zyiZk4TNtk+SjL
ZGyICtzs/dDx8XG9ZYWYqEZxjQhZbCBYRBBWVFSEr9/4t3/7t7Q7wP7whz9c
X1/XWFDaq4njxo0bGgsKt1BeU4gNbMZ6Frrtt2ODCwsLtmsCkSAC/rPPPrMb
8IG+muTJz3/+c1k5VVVVXV1dzJDJiqguUWmNjY2xWEz89+uvv5b1+ejRI9vN
Gwyrq6uVlZVOpW3fvv3LL7/MaxwmNVn+ykoqaP/+/XmKjfn5+V27djmfXFBQ
ICpwz549zv+WlZUtLy9rLCvERkdH1ewoHLGBYNnY2Dh48KAMhi+++CIc/ca1
a9fkWezevfuHP/yh/N/e3l6NBaVeTeQDwcLCwrdv32osK8RCeU0hNrAZi1lo
XV3dzp07naKbmprEJcB2ZSD8RJgdPnxYzTSMBXxDQ0MIrib58OrVK9ki33zz
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
+j4RiEcGUuaxgWB58+aN/CYePXo0r7FhrN9QN5DK7QH03Nzc/v375RCBy7Yj
3qe6qRsjtrW1eWzQgArlNcV7pkFshFWwslC5KKswPj5uu/IQPOoqsrllGib5
8GqSD3JYuKioaGRkxHatR5S6tUQE31Oen5+XKyc0NTX5dnKCFZm8w67rDeiI
v6d87do1tc/X2Ih5wvoG4bO6ulpVVeW0qZe13fzWb2hZo0ncepSUlDifc/jw
4bQPy9Spbl6uJt3d3bJyHj16pLONgyCU1xRdmUbEYyOUApeFzszMVFdXOwdc
VlbGav/IShBXkfXV1SQf1GHhS5cu2a7vSFMHvV++fGk7NMxZX1/ft2+fc+L+
n5xgxcmTJ11iQ1yL5Twr0cd6eQP69evX6kdFaurF9PR0EDeec48NBE5HR4ds
0IcPH+YvNkz2G+oGUh4fQKtzrVO3HdE41S3pHfaFhYU8trrPhPKaojHTiHJs
hFJAs1B1la1jx47ZrkUEiTqw7DHTMMY/VxPvVldX+/r6RLoizkj8V/w8Ozsr
h4Wbm5ttV3bUqVtL7N69+8c//rFsqQy3mfC/1CAUf3L58mXZM9y4ccN2O/iR
+g57UmysrKy0trY6f6XlDWj1PeXGxsakxrIdQXqkxuGvf/3rwD0ycLjERv7a
K+0XOdAFmZf21B4/fiy/fd7XdvNJv6FmGlrWaJJHvmPHjq+++kqtQHXExvvV
ZGxsTL7DXlFRIdKkKMRhCK4pBjINK7ERtf7QWEHBzUIvXLggj/ynP/0pF2Uv
TJ6a3bJ+8YtfaMw0TArHHUoikZDToaWdO3c6P8RiscnJSds1jd8Meoskc1sK
0XaiBW0HkVdpg1CuMLAtCO8zWvTkyZO0sbFnzx75c29vr5ay2tvbUwsKdxzK
FyK2BXDjuc1iI0/tlbYC81GWsYLMS3tq4s5u9+7dzs/19fVa1nbzQ78hMw1d
D6CnpqY+/vjj1II++eQT+dRY19VEfYc9InEY9GuKsUzDcGxErT8MdGwYo66y
ZasCCcLAlSWzAl2ZhklBv0NR309P686dO7brGL8xPT390UcfbRZsARoDTLVl
EJaXl4vTt90C/uUSGw6Nb0BPTk7KW5uoxeHp06e11KFJJvsNlwrUW5axgszb
Mgg1ru3mk37DoWuNJnFScgJzWhqvJuJzdu3aFc04DOI1xWSmYTI2otkfBjc2
THr+/Pn27dvtViBBGLiytgV2Fdmg36Gou2qm+uKLL2xXMH6nq6vLpaVEO9oO
pdy5B+G24LzPaIt7bIiuVeMb0JGNQ3GjF7hHBt+abS/3CtRYlrGCzNuyM7xy
5YqZ2DDZb1RXV5spaJvWq0lkO8OAXlNMZhqh7HjN88k1RW9smOSTLxdBGLiy
WlpabAdvLoJ+UZZL3qXV0NBgu4LxO42Nje5fH9uhlDv3INy7d6/tuvc799j4
/PPPjZUV4jgM6AC1yfZyr0CNZRkryDz3U/voo4+MxYbJfqO+vt5MQXqvJpHt
DAN6TTGZaYSy4zXPJ9eU4GahPvlyEYSBK0tEju3gzUXQL8rus3xjsZjtCsbv
iLZwaSnRjrZDKXfuQVhaWmq77v3OPTb0fosjG4cB7QxNtpd7BWosy1hB5rmf
mt4xGf/0GxrLci9I79WEzjBY1Wgy0whlx2ueT64pwc1CffLlIggDVxYZrxWh
HCgLpaCP/rkgCD1yjw29FUgcBksoH9dG9pGcye9yQMvyz0kRh36rxlCe1Jbn
FeI4DGhsmOSTLxdBGLiyAhrzQb8ou79Q1tXVZbuC8TtBf0vOBUHokXts6K1A
4jBYQrmsQWRfXTf5XQ5oWf45KeLQb9UYypPa8rxCHIcBjQ2TfPLlIggDV1ZA
Yz7oF2WXhZcDusx4WIm2EC2StqVKSkr8v5q0C4LQI5fY0F6BLmWVlZURh35j
st9wqUC9seFS0M6dOz98+KCrIPNMBqFP+g29ZfnkpPbs2UNn6L0ajfUbgY4N
l/OqqKgIaxx+8sknAY0Nk1ziUG9suFRgiO9QtOcbLmWZ7DeCG/MhuENJJBLf
+973UlvkyZMntmsX3yFaZLNge/bsme048kQE4eeff04Q5ixtbOSpAjeLw+9/
//srKyu2Q8kTEYei3w5ZHJrsN9JeTfIRG2l7DIf/H4W4E6eWmimZ/C4HvSzr
JyUUFBTMz8/bDiVPRByKuza71Sjuuw30GyGIDXFeu3fvTi3rD//wDzc2NvSW
Zdhm1xQRnGtra3oLCmUWulkcao+NtD2GI5R3KA7t+UbaLNRkvxH0mA/6Hcq7
d+8KCwudYxY/NDY2dnV1BXSILPREu4jWEW0Ui8UaGhr27NnjNFw8Hl9aWrId
Sp6cPn1afneqq6sJwmypsZHvb7Fa1g9/+EPZcG1tbbbjyJMPHz7s3bvXOZcd
O3Z8+eWX4YhDY/2GejURKUReY6Onp0ftMWpra+X/vnnzRm9Zht26dUuei7gt
NfZdNtlv5LUsWydVV1dXVFTkNJz4oum9ZzRM3K/95Cc/kXEovl/huKb8zd/8
jbFMw1hsPH78WJ6UKOXTTz+V/9vf36+xIPOS7lDU2Ojs7NRbVlizUDUO1di4
efOmxtpL6jG++OKLEN+hCHnKN5KyUFGNxvqN0Nz+B/cORbSvuFI4RyvCYGpq
ynZdIgsjIyPixsdpvsOHDwf3gcjo6Kj81rS3t9uuV2RHfYXz0aNHtqMpd6dO
nXLOQnytAv2kwF2e+g31aiIuhZOTk9/mLTZevXqlXmdFQTMzM5WVlc6fVFVV
BWKSalrv378vLi52TmT//v1zc3O24wVZUMfTent7bUdT7q5duyZP5OrVq4ar
Ue03xI2DrpOym2nkKTbE3W5paanzsfX19bOzs6KsQ4cOOX9SWFj49u1bXWUZ
lvYORY0N0aC6yopOFpqn2Ojv70/qMUJ8hyJCUU7G0JtvpGahBvqNcGcaAbpD
uXjxojzUwcFB2zWHrF26dEm24O3bt20HVC6Wl5flpmzV1dXi3sp2pSI7ojMX
qaDTgqKTX1xctB1TuXjw4IH8KnV3d9uu1PzKR7+hXk3u3LnjFJSP2FhZWZFv
91RWVsoeY3h4WGaAHR0d3gsyT2StTU1NzimUlJRMTEzYixHk6Pjx4/KL8PLl
S9sxlYtEIiEnJxw5csR8HSb1G1oesotMQ74UYCvT0B4bosc4ePCg84FFRUXi
LtgpaHJyUqZVNTU1AZ2ylfYOZXZ2VsaGOEfRrN4LilQWqsZGXV2dlth4+/Zt
2h4jxHco9+/fl6emK9/YLAvNa78hMo3x8XHTUWhQUO5QRCvIVj59+rTtakMu
RLA1Nzc7jSi6xHfv3tkOq6y1trY6xy/up54+fWq7RpGLFy9eyAmWLS0tgXsg
srCwICcnNDY2hviRgUN7v6FeTU6ePKmWpT022traZI8xPDyslnXu3Dl5GOKv
PBZknroVQn9/v9mggB7T09NyylZZWVkg3mFXra6uirt4ec/7+vVrK9Wo9hvi
9sF7v3HixAnrmYb22Lhx44bsMa5cuaKWde/ePfX+zmNB5rncoaixIRJI72VF
LQtVY+PixYsea29tbW2zHiPcdyhnz57VmG+4ZKF57TeikGn4/w7lw4cP8pGB
+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
f/on2VDXrl3z2FDwTn0g8uMf/1ieqdDsdRkfQjHAkO8QFCPtsbEx2yfBp+Rr
R4xlI/5khTiH79690/viOTESkw/LPv/8c7UN1UcGjx8/9l5WKPX29spW2rt3
by6EUPzOuXPn9GYjWb/x7bffyiWyVVVV3vfvevv2rXyQKn7x05/+NOFIQ8sy
SPPZyKnO0GQ2stSMJs+X+9Xk6NGj3gOvXk3279+fIzk0lg3to9C5uTm598XW
rVvr6+uzlw2TcnCGEo5rSnxZ//AP/xC+kUaAcjg9PS1XDkubN292ftHU1OT9
jMA7EVeZXpU4dwm/AREsCUMo17wJt2/ftn0G/CsajZrMRsKTFeIcymGSxoUr
6gBGUk/i+fPntRQUVl9//XVOdYaff/659mwk6zfkQ2Ex1xsaGtJS1oMHD+IL
2qSMNDS+XMxkNnKtMzSZjWw0o8nz5X410fga06tXrxprQPOMnTJjo9CRkRH5
Ocp2NozJwRlKCK4pCcuSwjTSCEoOV1ZWXM5IcXFxWq+kRPaIVH/22WfJwhag
e4Dx3EO4iV01NmIyGy4nK/Q51PXiOXWvv4RqamrYv8uFaMA9e/bkZgg1ZsOl
33B0dXVpKcgpa/v27ckKEn+kaxmkyWzkcmdoJht6m9Hk+dqwAb3snBBDzN+3
bt2aazk0lg2HxlGoCLx6qyer2TAmN2cogb6muGe+uro6ZCONQOSwp6fHpaF+
9rOf6WooeKS+gT2eOI+2o5Q59xAWFRWJT5nt5vc1k9lwP1khzuGBAwfMnK+8
vLxXr17pKiuUcrYz1JsN92b84osvNO7f5V5Wc3OzmYLoDFPkXjWT2dDYjCbP
l3tZX375pa7WM9mA5hk7ZSZHoe7nS282jCGEISvr9OnTZrIR0KtJljQ2Nroc
f11dna6GgkfiXLicKXEebUcpc+4h/NGPfmS77f3OZDbcT1aIc1hbW2vmfIkr
lK6CwipnO0O92XBvxurqamNlaRxp0Blq4V41k9nQ2Iwmz5exq4nJBjTP2Ckz
OQp1P196s2EMIQxZWcYuygG9mmSJ3A8noUgkorGt4IX7WkdxHm1HKXOE0COT
2XA/WeTQ+/ki8BuiMzTQjAEti85QC//kUGMzmjxfoWxA84ydMv+cr4AOAAhh
yMoK6Ig36DlknUxQBP3unwtC6BGPhrXwyVMDAr8hOkMDzRjQsugMtfBPDkO5
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
d9UIdDZmZ2dT3KNJ3S3n/v37tg8cWWcyG+pPUPdoijEzM1NTU+P8teLi4sXF
Rd2VBgAAABCrtbVVLk4YHBzc8G6JGTH7GywvL9tuJ2TRx48fXXbVCGg2VldX
1S+evH371qVSosqHDh1y/rKYqs/Pz9s+fGSRyWyMj4/LGzInT55073hfvXpV
UFDg/OXm5mZejQ0AAABk1aNHj+Rw/fLly+7DdcOePn0qj439DUIsZleNkZGR
cGTj0qVL8iBT2aNJ3S3n4MGDgdgtB5kxlo3l5eXy8nLnHybcoyne9evX5bHd
uXMnq+0AAAAA5LKFhYXCwkJn7F1fX+++OMEKdX+DZ8+e2W4wZEVvb688y8l2
1QhcNl6/fi0P78yZMylW6u7du/JfdXV12a4EssJkNk6dOuX8k7y8vOfPn6dY
1uHDh51/lZ+fPzs7m9XWAAAAAHLT2tqafLNwUVHR2NhYisN1k+bm5tT9DT5+
/Gi72aDZ9PS03FXj6NGj4cjG0tKS3KOpsrIyrT2aTpw4Iafeb968sV0VaGYy
G0+ePJF/v7OzM/WCJiYmSkpKnH9YXV29urpqoGUAAACAnNLT0yOH6729vakP
1w1jf4MQS2tXjQBl4/jx43JxwtDQUFqVikajFRUVzj8vLy/37W45yIyxbHz4
8EHu0VRXV5fuMsgHDx7IC8SlS5eMtQ8AAACQC969eyfH28eOHUtrrG7ejRs3
1NtHthsP2ly4cEGe2YGBgXBkQ1REHtLVq1czqNTTp0/l64/b2tpsVwjaGMvG
+vp6Y2Oj89eKiopS2aMpnnw3vTA6OmqyoQAAAIAQW1lZ2bt3rzPSLisrm5yc
zGC4bhj7G4RPZrtq+Dwb8/Pzco+mhoaGjPdo6uzslI3z5MkTu5WCFiazcfPm
Tfl3bt26lVlBU1NTlZWVzg8pLS1dWloy3GIAAABAKLW3t8vh+uPHjzMbrhv2
9u1bub9BVVUV+xsEnZjfqSc0rV01fJuNtbW1gwcPysUJXvZoitkt58OHD7Yq
BS1MZiMajWa2R1O8wcFBuSzn+PHjVpoOAAAACKiVlZWenp7GxkYxYxX/Fb8W
v/Ps2TN5Q+b8+fNehuuGqfsb1NXVxdTLWANmo6Bwi2/G5eXllpYW51RmsKuG
b7PR3d0tD6Ovr89jpUZGRuRuOeXl5YcOHSKHXhj7ONvNxp///Gd1jybvyyAv
X74sj/wXv/gF/aEXJq8pobx+hbJS5tGMyCmh7Hj5FCMZsuE309PT8gtKkhi9
b9++3fl1TU3NzMyMx+G6YWfOnNmUiKipqK+BBsxGQeGWsBl37dolf93V1RWO
bMiX6WzSt0eTulsOOfTC2MfZejaKiorkrzPboynG3NxcfX09OfTO5DUllNev
UFbKPJoROSWUHS+fYiRDNvxG3TEmoYKCguHhYe/DdcMmJibkQvr4vGm8DejS
gHoLCrcNc+hlVw0fZsNRVlYWjUa1VEr8nG3btpFDj4x9nH2SDcfZs2e1FCS8
fPly8+bN5NALk9eUUF6/Qlkp82hG5JRQdrx8ipEM2fAh9T3XCV2/fl3XcN2k
jo4Ol0qJWptpQI0FhZt7MxYUFHjZVcOf2dikdY8mY5UKN2MfZ/9kY9euXV72
aEqrLHKYCpPXlFBev0JZKfNoRuSUUHa8fIqRDNnwIfkW1IR27Niha6xuWF1d
nUu9RK3NNKDGgsLNvRl/+MMfhi8bu3fvDmKlws3Yx9k/2di3b5+xsshhKkxe
U0J5/QplpcyjGZFTQtnx8ilGMmTDh+RraBIK7j2ZSCTiUi9RazMNqLGgcHNv
RnE2w5eN4uLiIFYq3Ix9nP2TjYB+uELM5DUllNevUFbKPJoROSWUHS+fYiRD
NnzI/UZZXV2dxuG6ST5ZC8GdxhSZzKFPshHQSoWbT55emcwGOfSbUD6uNSmU
lTKPZkROCWXHy6cYyZANH3L/QllHR4fG4bpJPtkzhG/kpchkDn2SjYBWKtx8
8i1vk9kgh34Tym0NTAplpcyjGZFTQtnx8ilGMmTDh1w2Xtb44g/zxJGL409Y
r9LSUjO7mm/duvXTp0+6Cgo3kzn0QzZMVmrXrl3soJ4il1O2Z8+e8GXDZFnl
5eXkMBUmrykuZQW333CpVFFRUUArZV4oswEkY7LfcCmLGQrMIBv+lPAF5WJc
/fz5c41jdfPE8SecHXz++efLy8t6G/CHP/xhwmBzpzF1ohnFrM1MDpNlQ8y7
DWTDcKXy8vLm5+c1VircxCnbuXNnfDOKcK6uruotyG42DOfwJz/5yfr6usYG
DDGT1xRRlpgFhKzfSHg1cbx48cL20QVGKLMBJGOy30g20mCGAmPIhj/dvXtX
nggxLe3o6AjuChmVqIWoS11dXSQS+dGPfiTr2NbWprcBr169Kn94ZWXlvn37
5P++e/dOb1lhJeZrX3/9tWy3/fv3ZzWHxrLx93//92o2jFWqurq6oKDAKbe2
tlbv/YQQe//+fX5+vtNu4hdqNi5cuKC3LFvZEP81VtYXX3wh63jnzh29DRhi
Z8+eVbMhZOma8unTp927dzs/ecuWLeLiFYJ+I+ZqIiq1a9cu59clJSWLi4u2
DzAYQpkNIBmT/YY60sjLy2OGAitiRqHZG2kgRQsLC4WFhc4pqK+vn5uby9JA
3Tp1r4MnT57oasA3b96ofakoaGpqqqKiwvmdvXv3sso3FTdv3pTNeOPGDYvZ
ePbsma5KvX79Wv7YM2fOGK6Ueq+1q6tLV6VCTMwyqqurnRYTk5HJycmYbIgT
qqssu9kw6fDhw041xRB0dnZWVwOGWHw2RBTl6iO915RTp07JeYGzbioE/UZv
b2/M1WR4eFhU0PmdI0eOsGQrFaHMBpBM/Cg0S/2GOtKIRCITExPfMEOBcSZH
GkiF6GEaGhqc9i8qKhobG7M3cs+6ubm5mpoap7LFxcUfP3703oDLy8vym1+i
lxN9nVOWGMDInry9vd17QeE2PT0tHxkcPXrUeja0PBBZWlqSC78rKytlNkw6
ceKE7HLHx8e9Vyrcrly5IptrYGAgPhslJSXitHovyA/ZMEYMOOVbF8VAlMfr
7kQ2ZHOp2Xj48KEMp65ryqNHj+TP7OzslKcs0P3G7OxswqvJtWvXZKXu3btn
+zD9LpTZAJJJNgrNRr+hjjT6+/udgpihwKRko9BsjDSQInXj5d7e3uwMyX3k
1atXcvFtY2Oj95vebW1tzk8T/dvg4KBa1sWLF2Xbij/ScbrCaWVlpaqqSs55
3759az0bzc3N3rPR2toqszE0NGSlUtFoVD4QEd2v3u8ph8zo6Kj8wJ49ezZZ
NlpaWryX5YdsmPTgwQPZtmI46r0BQ0wELFk2zp8/r/Ga8uHDB7lEtq6uTl0i
G9x+Y3V1NdnVRFTw0KFDzh+Jydf79+9tH6x/hTIbQDIuo1Dt/YY60jh58qTa
wzNDgTEuo1C9Iw2kSFxb5W3hY8eOeRt0B8aNGzdk2Hp7e7004LNnz+SPunz5
ckxBoicXgxnnT3UtvQilCxcuyGaUixOsULPhce8LURH5o65evWqxUk+fPpUP
RE6dOqXrrIXMp0+f5CMDMTabmZmJaUY1G/fv3/dSln+yYZIcHApiUKrrxIWM
iJZLNkQs9+/fr+WaErNEdmRkJKasgPYbly5dcrmaTExMRCIR50/ZESWZsGYD
SMZ9FKqx31BHGurCFYkZCgxwH4VqHGkgReprsAL92usMHD161Kl4fn7+9PR0
Zg348eNHkVXn5yTbh0cMZsSQxvk7fIc9oZcvX8qeIWZxghVqNjLe+0Ldo0kM
bq3v0dTZ2SkbWeP3lMNEfWQwPDycsBllNsTJzfi1I37LhjFi8Cm3jxODUt60
GE+EasNsiHDKB6lerinqzgm3bt1KeMoC12+o345PdjXp7++Xf4clWwmFMhtA
MqmMQnX1G+pII2bhisQMBVmVyihU10gDKTp37pzsYR4/fpywZwirt2/fyi/s
V1VVZXDTW+SzubnZ+Qnu+/CIIY1sZ147EkPdOUGcCD/sqqFmI7O9L9SHjJFI
xA97NMU8EPnw4UM2zmZwqTsnXLt2LVkzqtk4ePDg2tpaugX5MBsmDQ0N8Xg9
GREnEapUsnH9+nWP1xR1iWxLS0uygoLVb6jfjne/mpw8eVI2IDuixAhlNoBk
Uh+Feu831JHGxYsXkxXEDAXZk/oo1PtIAylSbwt3dHQkOyMhpi7cyuAVt+pr
HTbch0e96c132CXRM6g7JyRbnGCemo0MHoioezTdvn3bdm3+Rn0gouV7yqGh
PjI4dOiQ+8IVNRvd3d3pluXPbJikvpRTDFCzcUIDSsQp9Ww0NTVlfE1Rd06Q
LxdLJkD9RipL3Rzqa0dYsqUKazaAhNIahXrsN9J6xS0zFGRJWqNQLyMNpGhx
cVHeg62pqYnfOSFHnDlzRiYzrVfcqq91cHmQJImBjRjeOH+f145I6s4JXV1d
2T/haVCzkdYDEfUh44kTJ2zX43vUByI3b97M3pkNkAwWrqjZePPmTepl+Tkb
xoiBqGxwHq9L6utKU8mGl1dZqUtkHz58uGFZgeg31ClMKlcT9bUjLNmSQpkN
IJl0R6EZ9xsxezSNjo5uWBYzFGiX7iiUl2Zmm3pbuKCg4NWrVxuelLCamppS
N1pP8RW36msdysrK3B8kSR6XXoTP/Py87Bk2XJxgnpqN1B+I+H+PJi3fUw4T
9ZHB3bt3U2lDNRvidKf42hH/Z8OYsbEx+XhdDFN5vK6+rjT1bGS2v0Fm+3f5
vN9Ia6mbpL52hCVbfwlpNoBkMhuFZtZvZPCKW2Yo0CuzUSg7sGWVelv4xo0b
qZyREBseHpY3vVN8xa26tV0qD5IkMciR/zDHXzuytrZWW1vrNEUkEpmYmMje
Kc6Ymo0UH4jIh4ziHz59+tR2DRJQH4iIC7foorN9rv1MXJLkRzKthStqNtra
2lIpy//ZMOn27duy5Xm8rr6uNK1spPsqK3WJ7P79+1NfIuvnfiNmqVvqVxMx
Bauvr3f+YWFhYY4v2QplNoBkMh6FZtBvqCONtF5xywwFGmU8CuWlmVmi3hY+
fPhw6mckxLq6umTYNnzFrfpah/Pnz6dVUGZLL0JJbfMUFydYoR7nhg9EgrJH
k8fvKYeG+sigoqIi3YUrajaePXvmXlZQsmGSGJo6DZLjj9fV15Wmm4209jfw
uH+Xb/uNDJa6SWJ4yZKtv4Q3G0AyXkahafUbMYsTUly4IjFDgRZeRqHswJYN
6msdSkpK3r59m9ZJCau5ublDhw7J2YHLK27V7dnTepAkqTe9W1tbTZ59/xgf
H5c9w8mTJ7NxTnVRs+G+94WajZqaGr99FSuG+kBEdNQmz75/tLe3yzlIBgtX
YrLx8ePHZAUFKxvGRKNRMUB1miWzV0uEgPq60syyMTg4mOI15d69e/JT7/Jy
MRc+7DfUb8dndjVRN8Ps6emxXSE7QpkNIBnvo9DU+w050tiU0StumaHAO++j
0NRHGkiRerv1wYMH6Z6REBsbG4tEIk7LuLzi9vjx43ISl/FLgtJaehE+y8vL
5eXlTvUzWJxgnpqNZA9E1IeMRUVFIyMjto96A+JiLS7ZzgGn/j3lMHnx4oX8
GGa8cEXNRnNzcziyYdLTp0/lVT4HH6/HvK4042yk8iordYlsU1NTZgX5rd/w
uNRNkp9Q0UTih9itlHmhzAaQjK5RaCr9hjrSSHfhisQMBV7oGoXy0kyN1Nc6
nDlzJrMzEmJ3796V7ZPwFbfq6tzMHiQ51JvehYWFCwsL5sNgkbpzwvPnzzWe
wexRs5Fw74sg7tEU8z3lnFq0H/PiOS8LV9Rs9Pb2xpcVxGyY1NHRIdsnrVdL
hID6pNVLNmL2N4i/pqyururav8tX/Yb67XgvV5PJyUl1yVZO7YgS1mwAyega
hW7Yb2h8xS0zFGRM1yh0w5EGUqS+1kF0HVNTUxmflBA7efKkzG3MK27n5+fV
1zp4LCiVpReh9OTJE9nCFy9e1HLWzJDZiN/7Qn3IePToUdtHmgZx4ZanY8Pv
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
cOGCr64m6gtA9+7d69vvsKtWV1flzgli1OqHXTW0ZEPdo8klG+rSi8z6jRSv
Jlqycf/+fXm0165dS1ap/v5++de0fM3HgBRnKOqeORm/koZRqAHhnqEEt9/w
wy6yWrKh9hgnTpxIVpY/ZyipPDJA4MR839D/D0QePXokP0QXL1603X7QQ/0O
+71792ynbAPq4gTRV7969cp2+0EDcZUXAxs5tfT/d9hnZ2fl4oSjR4/abj8L
PO59ob4kyD9Xk8ePH8ujam9vz0Zy9Lpy5Yo8YP/squExG8+ePUsxG2IwLJde
ZNBvpHU18ZgN9UUwhw4dcn+UcPLkSVmWx6/5GJDWDEXd6yODV9IwCjUmxDOU
gPYb/tlF1mM21B5jw90gfThDaWtrc46H28Ihc/v2bRm27u5u20Fz8+HDhxzc
OSFHNDU1OWdWdP7v37+3nTU36uIEuzsnQK+RkRF5lc/48boZq6ur1dXVzqHu
3r17cnLSduPZIfuNwsLCtPa+UF8S5Lerifod9hcvXmQvRd6Njo7KQ/Xb8mkv
2UhrpKHub5Buv5Hu1STjbMS8QCp+54QY6i5b5eXlGX/Nx4y0ZijqQ3ZxotN6
JQ2jUMNCPEMJXL/hk2WQkpdsqD1GKrtB+mqGoj4yuHz5soGmhknq9w3fvXtn
N2zJrK+vy8uomDeJoaDtZoNOMd9h9+0+q+riBP88MoAu6qsq/fzaEXVxgnyV
bQ5S+43UH5aJq4n8drwPryYzMzNyyZYY5PvqO+yqT58++XlXjYyzoe7RlGI2
1KUXqfcbGVxNMs6GeoR3795Npaznz597/5qPARnMUMbGxtRspPh9BEahVoR4
hhKsfsOHu8hmlg21x0hxN0j/zFA+fvwob/3V19dzWzh8Yr5v6M8HIurrSnNt
54QcoX6HXUw5bScuAXVxgt8eGeD/snd3oVkleeLHWxNjjEn7+NJpO216Miad
jhntzUyC64iymY3rBNEls4orYiCg2yg4KBJEISAoKK6CoKAEXTLoEpEEAhEi
roEMCUQy9iBDGGRxIAM2eJGLXOTCi1z0v7bP/Guqn5fznOeceqrOy/dz0aSj
PnVOnd9T9atz6lTpIreqLPTxujHq5IS0rWwTSG03PD4sUzcJCmdvor7DvmvX
rpC8w56ms7PTOcLQTp/2ERvqTiXeYyNtfQMv7Ybv3sRHbKgbSLmsnJBJXWXr
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
AtYR8EgUAh652M1CiUMAgHVTU1PylogkflOMHaWzllVRUSF/vnv3bsAbMsLM
zExra+tH2RTpvBCcyTgErCPgkSgEPHKxnoUShwAAuxYWFjK7J9lJ6X124FKW
o7u7O/gNGcfQ0NCyZcvMnBeCMxmHgHUEPBKFgEcuIclCiUMAgEXqyrqZxJ8a
K2vt2rXT09O67sl0d3cbOy8EZzIOAesIeCQKAY9cwpOFEocAAFva2tpceijx
p8bK2rx5s64bMkJzc7Ox80JwJuMQsI6AR6IQ8MglPFkocQgAsCWVSrn0UOJP
jZVVVVWl8Z6M+DRj54XgTMYhYB0Bj0Qh4JFLeLJQ4hAAYEt4nlA0NzdrvCfD
PJlo4ekVEoWAR6IQ8MglPFkocQgAsCU8b/JqXOD3W9aTiRre8kaiEPBIFAIe
uYQnCyUOAQC2uKxCv2LFivfv35spq7q6emJiQuM9GfFp4jOzlrVx40ZW1w8b
l9hYs2YN1wsx4xLwq1atIuARMyYzDURLSLJQMg0AgF1TU1M1NTVZO6mzZ89q
L2v9+vVppVRXVz948EDjDRmH+Myst2V+9rOfLS0t6T0vBJc1NoSSkpJXr17Z
PjpAMxHwGzduzNrwPnr0yPbRAZqJgP/888/NZBqIFpOxQaYBAAitw4cPy47p
iy++qKurk//74sULjQW9f/9e9obLly9vamrq7u7WO0NGJT5ZfH5zc3NVVdVn
n30mT+rSpUsaTwpapMVGfX39ypUrnf8VcbK4uGj7AAGdlpaWtm3b5kT4smXL
Ghoa1q5d6/xvZWXl3Nyc7QMENPuP//gPNdP46quvipRpIHKOHj1qJQsl0wAA
hMTjx49l3ye6RedWhpw5s2nTpvn5eV1ldXZ2ykcSDx8+LNKtmFza29ud0ktL
S1++fKnrpKBFZmzcvHlTRubJkydtHyCg04ULF2R49/X1iYB/8uRJWVmZ85td
u3YxnQ9x8uzZs7RMY3JyUg699WYaiJahoSGLWSiZBgDAunfv3snNAevr66en
p53bF/39/aLDcn5/6NAhLWXduXNHdnynTp0yfENGGB8fl89HRCrIA5HwyBUb
XV1d8vdPnz61fZiAHmLEUVpa6gR2R0eHDPjz58/LgL9y5YrtwwT0EGNq+aae
mmmIQbH2TAPREoYslEwDAGDR0tKSnDpSVlY2ODio3sHo6emRndT9+/cDljU7
O1teXu58WktLy8zMTBFvvuR2+/ZteVInTpzQUo0IyCU2Jicna2trnT/asGED
S0EiBtR1Jqurq8fHx9U2aufOnc4fMZ0PsbF///5cmYYYGmvMNBA5e/bssZ6F
kmkAACy6du2a7O/OnDmTdvtCdFiNjY3On1ZWVr59+9Z3QR8+fBA9oPNRFRUV
o6Oj2m6yFE5dPGdoaEhjfcKHvLExMDAgH5Z1dnbaPl4gqCNHjsgm6O7du2kB
//z5c/nUuKGhgel8iLp79+65ZxqyCwiYaSBybty4EZIslEwDAGDF69ev5eT5
7du3Z719MTw8LDov5+/s2LHD9/oGvb29stu9fPlyYfdQdJuenq6vr5cPRN69
e6e3YlEQL7GhPki9c+eO7UMG/Hv06JEMZmflhEzq+gZM50OkvXnzRoym3TMN
MUDWkmkgWkQWKieuhCELJdMAABi2uLjY1NTkdD1VVVVjY2O57mCo6xv09fX5
KOvFixfyE9SVEywaHBzkgUgYeIyNmZkZuUONSOFmZ2dtHzjgx9zcnJwD09jY
KFdOyHTw4EH51RgZGbF94IAfYgTd1tbmJdO4dOlSwEwD0aJOXAlJFkqmAQAw
7PTp07KHun79eq4eyrF7927nb/pY3yBt5YTibXtdqDNnzsgauHXrVpHqGS4K
ig31QapI5HiQisgRQbtr1y4nhjNXTkiTtr4B0/kQRermYnkzDTFY9p1pIHLO
nj0bwiyUTAMAYMzTp09lV7hv3z73rvDbH69vUOh2RYcOHZJlZa6cYNHMzExr
aysPRCwqNDb6+vrk3+/t7bV9+EBhrly5IgP43LlzeQNe3ZJmz549tg8fKIy6
uZiXTGN8fFwMmf1lGogWdeJK2LJQMg0AgAHz8/MbNmxwupuamprJycm8PZRw
69Yt2Un19PR4LGtgYED+q+7ubi8FmTQ2NlZVVSUfiHz48KGoNQ+Vv9iQD1IF
kfDbPgnAq1evXuVdvyuTur4B0/kQIQsLC2LsXGimIYbMPjINRIvIQuXElXBm
oWQaAIBik1tSlpSUPHjwwGMP9e2P1zfwsl3R3NycXNnPfeUEi65evcoDEfN8
x4b6IFUkdSLtt30qQH6Li4sNDQ1O3KZSKZeVE9KoW9KUl5e/fv3a9qkAnsjN
xQrNNI4ePVpQpoHIkRNXQpuFkmkAAIrqzp07skc7fvy4967w2x/WN5CPvcSw
wn19g6WlpR07djh/uays7MmTJwWVZdK+fft4IGJSwNhQH6SK1M722QD5nTx5
UgZt3pUT0qStb8B0PoTf48ePfWca6saIeTMNRI46cSXMWSiZBgCgSN68eSO3
HWxubp6ZmSmoh/r2x+sbtLe3u5Sl7qHgZeUEiyYmJmpqanggYkzw2FAfpIoE
z/YJAW5GRkZkuHZ1dfkI+MuXL8tPOHv2rO0TAtyom4v5yzQGBwfFINpLpoFo
USeuhD8LJdMAAGi3tLQk58BXVFSIYYKPHkpQN2y6ceNG1rJevnwpV07YuXOn
v4JMevDggezleSBSVFpiY3p6urGx0fkQkeCJNM/2aQHZvXv3zsf6XZnU9Q2e
PXtm+7SA7NTNxYJkGurGiLkyDUSLOnElElkomQYAQLve3l7Zi128eNFfD/Xt
j9c3EF1e5voGi4uL6uRS7ysn2NXT0yPr59GjR1auUexpjA31QapI89iwEuHU
2dnpRGlJScnAwIDvgJ+YmFDXN5ifn7d9ZkAW165d05JpCHJjxKyZBiJH3Xgu
KlkomQYAQCN1S8r29nbf3ZNjdHRUble0devWtPUNTpw4IbvdmzdvBizLGNHL
Nzc380CkqPTGxrlz5+SniWTP9skB6dSNQgpdOSGTur5BV1eX7ZMD0qmbiwXP
NNSNETMzDUSLOnElWlkomQYAwIeFhYXe3t62trZUKiX+K37+61//KrcdXL9+
/fj4eMAe6tsfr29QXV0ty/rd736njhqCF2TS8PCwXEuzsrJSnhQrzPiQGYfF
iI3t27c7H7h8+fItW7YU+5JlnhSxEXLGLllmQdPT03L9rm3btvlYOSFTd3e3
/BLV1dURh5EQ13Yj7bzOnDnz5Zdf6s001I0R1UwjHhUYV5kB/91338mN56KY
hRrONKBFLBveWJ4UEEtTU1Py9ou0atUq+fPt27e19FBqJ6USHZbzQ21tre+V
EyxShzySqFJRsbavbZRkjcNixMbY2JhcMLDYlyzrSREbYWbskmUtaMWKFc4P
QVZOSDM9PS2+PrRRERLXdiPreUkaM41f/vKXBHyEZA2M1atXFyM2jGWhJjMN
aBHLhjeWJwXE0sLCgkuOJBw+fFhL9/TtD4sbfPLJJ7kKCrhygi3qig2ZjR73
oj1yj0O9sSEu2Zo1awxcMpeTIjbCydgly9vw9vX1aQz49evXE4dREdd2wz3m
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
NjwrJyREobEhW4yPPE9OcIjL2traKlvyEL7DfuXKFXlqbDxnUqGxoS7d7/4G
dCZ1q8oQbjuiPk6yu12pO2PtRlyp77A/evTIQGgV5OnTp/LwCp0+TWxEhbrK
VqGv+Zjhe4RS6JY0UclCC2o31E2CwrxGU4xHKOqULS/5RpAs1HdsFLqK7Pj4
uGw3vGxXFIneJAwjFBEt8uDDeVsYushtR4RQvcO+tLTU1tYme41QrZyQEN5j
Q20xfGwEI5p9+Q67GHiG6h32V69eyckJbDxnXkGxIR/T+JvOpG5VeevWLWMx
5oX6OMn6dqXujLUbsTQ9PV1fX+/USSqVmpubMxRhHoixuVz1saamxseKoMRG
VPT39/t7zceAgCMU9SG7SDJdHrJHKAstqN04e/asrECXTQnDIMYjFHW7Ivd8
I2AW6js2fKwiq07LEd9Nl4Ii1JvYHaGI6xWJ28LQQr2xuWnTpvC8w37hwgX5
JQrbygkJ4TE20loMf2utXL16VV5u31tVare4uNjQ0OAcFRvP2eIxNm7cuCH/
mu/pTHKrylBtO6I+TgrDdqXuTLYbsaS+w75r167wTNrfv3+/c1S+p08TGxGi
rrLl8TUfA7SMUNSH7C5b0kQrC/XYbqibBIV/jaYYj1DS1kXJlW9oyUJ9xIbv
VWTVaTlDQ0O5KjBavYmtEYq4Ujt27HDKDdu2DiiSu3fvymA7dOiQsWBzoW5l
G86VExIib2yktRhPnjzxXZboAmRZYhBqPuoynTx5Uh4SG89ZlDc2Cl26P5fn
z5/Lt59aWlrCMGVLfZxUV1cXku1K3ZlsN2JJfYf92rVr5qMu0507d+QhHT9+
3PepERtRoa6y5W+LW+00jlDUtS9EwplZVhSz0LzthuhNIrdGU4xHKGnromTN
N3RloQXFRpBVZL1sVxTF3sTKCOXSpUuy0PDfFoYuR48eldd9YGDATLDlsrCw
oH6jx8fHbVdPornHhtpinDt3LkhBogsQHYHzUWIQav0d9pGREXlqBw4c0FWf
8ME9NkQmU+jS/S7UrSrDsO2I+jgpVNuVujPWbsSV+g77q1evbITe371580au
+tjc3Pz/2rt7nEZ6OA7ASUGRggIKRAEdX0JCIFo6Gm6AuAA3SMMRkBBXoKPi
BiBRcAbu8/rdSLOjfJiIeJyx93mKVcRKeBx+/G2TGXvF26dloxRvb2/NLlvx
x3zySLhCmdr7YupD9nJnofG60T7xp28HSEVUvEJpR3p2vpF2FrpkNlbfRXbq
uKKphgodTbpeoYRcjcfjUGZDqMK/4fX7+3txfxYmifbzhhsbG2dnZ00qOr1X
cDaE4St3d3fNL1HPd074F0Sy0a4YSfZaaT/DHhqdCkbOHH5/f6/4rCtpRbJx
f3/fVIwktzO1J66Hh4d5Qjg3h8/Pz82V9O240ricdaNK7WfYw1t3eXm5rmIY
Jp8XFxeTK0myq4ZsFKS9y9bu7u4ai2HyFUp774vt7e06ZqGRutEeTcrao6nu
FUp7X5T2fCP5LHTJbCTZRbZ9W87e3l4do0l3K5Svr6/mJqVGc/F9PtaBjry+
voY8D2aEnMy9sXN1c0MYRsbm9e3t7brfFf63KBvtipFqr5UwHMw2NMlhFyFc
lMPmz/ihAr+8vCTpGitalI3Gr5+AnhImP81HqHmK4aIcDofDyYt+Hlcal7Nu
VOnx8bEPxbCZxgcPDw9JuiYbBTk/P+9DMexihXJ9fT3btdJnoYvqRjOalLhT
aMUrlM/Pz62trdmudTELzZaN8E2Oj49nGyp9NOlihdI+p3uup6enJBdPQUJZ
aPZBShi2X4ewlJ0T/gWRbEwk3Gvl4+OjKaRTkodwmRyu8qwraUWyMfjzGW6q
p+MXzZEGnS2H4zkcjUa9Pa40ImfdqFJ4A5tp+ZT8IRwkvX1aNkoRflLNh/VT
1lIMB+lWKO0jv+cqdBYaqRuDYvdoqniFErrW7GI3V8JZ6I/ZSLWLbKRuTBQ6
mnSxQhmPx5GLPzo6SnXxFKS9x37CsP0uhMPh8BdH2dKReDYODg7ytJU8hD/m
MIwpxX2cVLF4Dm9ubvI0lD+HV1dXqbqWU866UaVeFcPRaJRwVw3ZKEXfimHC
FUq8a+XOQuP9KvSRwIpXKPGupZ2FZstGvKFyR5MuBuXmUPW5Tk5OEl4/pTg9
PY2kImGtWyaEOzs7634/+CuejbQVI9JW8hD+mENLg16J5zD8b56G8ucwYddy
ylk3qtSrYri/v5+na7LRK30rhgmzEe9aubPQbANlThWvUOJdSzsL7ckkqtzR
pItBOX6X1ObmZsLrpxTtp/wShk0IKxDPRtofVqSt5CGUw7Jky2HmYlhrDnPW
jSpVXAxloxQVF8NaQ1hlvypeofRkgp22rSo7FW+rCU/kYiCJZYrYuq+R+skh
fSCErJ1iSB8IIWunGNIHy+QQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYMp/npX2zw==
    "], {{0, 476.024462368205}, {750.0385436473817, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9926, 143.9926},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{750.0385436473817, 476.024462368205},
  PlotRange->{{0, 750.0385436473817}, {0, 476.024462368205}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[7]=",
 CellID->720974551,ExpressionUUID->"6e22ac5b-f882-4f93-a05e-c48fe05a7bac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", 
   RowBox[{"5", ",", 
    RowBox[{"Filling", "->", "Bottom"}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Classic\>\""}]}], "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[8]:=",
 CellID->180320135,ExpressionUUID->"9bd5a4a4-dfe3-4fec-be66-2b8d32d82796"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq4DJq8App+
JTTzVdDsV4PJDzn3AgAUSxO+
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apq8
Epq8Cpr9ajD5IedeANnME2Y=
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GZg8FCig
ySuh6VdBk1dD0z903AsAuUYWgg==
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], 
           GraphicsGroupBox[{PolygonBox[{{7, 11, 10, 9, 8}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmryCA6q5
SmjyKmj61WDyQ869AHlVFwI=
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0K6DJ
K6HJq6DJq6GZP3TcCwAV8hhQ
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 5, 4, 3, 2}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
06+EJq+CJq+GZv/QcS8A0wYWgg==
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DpV0CT
V0KTV0GTV0OTHzruBQB84xdQ
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{1, 3, 2}, {9, 11, 10}, {7, 9, 8}}], 
             PolygonBox[{{3, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJq8Apq8
Epr5Kmj2q8Hkh5x7AQRbE6Y=
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apr5
SmjyKmjyajD5IedeANLpFTQ=
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GZg8FCig
ySuhyaugyauhyQ8d9wIAfMYWAg==
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 9, 8}, {9, 11, 10}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmrwCmrwS
mrwKmrwaTH7IuRcAcnIY0A==
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0K6DJ
K6HpV0GTV0OTHzruBQDZYxfQ
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{5, 9, 8, 7, 6}, {1, 5, 4, 3, 
              2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
06+EZr4KmrwamvzQcS8AloYWAg==
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {9, 11, 10}}], 
             PolygonBox[{{3, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KKzig
mquEJq+Cpl8Nzfyh414AsEYWAg==
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTR5
JTR5FTT71WDyQ869APEME4Y=
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apr5
SjB5KFBBk1dDkx867gUAlmkUtA==
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR9Cmjy
Smj6VdDMV4PJDzn3AgBZuBVU
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmrwCmrwS
TB4KVNDk1dDkh457ATXyGFA=
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdDkFdDk
ldDMV0GTV0PTP3TcCwDJYxfQ
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{5, 7, 6}}], 
             PolygonBox[{{1, 5, 4, 3, 2}, {7, 11, 10, 9, 
              8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJKzig
mquEJq+Cpl8Nzf6h414ADNUWgg==
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KK6DJ
K6HJq6DJq6GZP3TcCwCpYxfQ
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTTz
ldDkVdDk1WDyQ869AOopFVQ=
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTT9
SmjyKmj61WDyQ869AAy4FTQ=
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTR5
JTR5FTTz1WDyQ869AEZ4FTQ=
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMTB4KFNDk
ldD0q6DJq6HpHzruBQAl8hhQ
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 11, 10, 9, 8}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdDkFdDk
ldDkVdDk1dDkh457AYzjF1A=
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{5, 7, 6}, {9, 11, 10}, {7, 9, 8}}], 
             PolygonBox[{{1, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJK6DJ
K6HJq6DJq6HZP3TcCwAF8hhQ
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KK6DJ
K6HpV0GTV0OTHzruBQBs4xdQ
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{1, 3, 2}, {3, 5, 4}, {9, 11, 10}}], 
             PolygonBox[{{5, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTTz
lWDyUKCCJq+GJj903AsArakU1A==
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTR5
JTR5FTR5NZj8kHMvAAXVFwI=
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTT9
SmjyKmjyajD5IedeAD+VFwI=
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMTB4KFNDk
ldDkVdDk1dDkh457AeljF9A=
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 9, 8}, {9, 11, 10}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNxQNWn
gCavhKZfBc18NTT7h457Ae0pFNQ=
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJK6DJ
K6GZr4Imr4YmP3TcCwDJYxfQ
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {9, 11, 10}}], 
             PolygonBox[{{3, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMmrwCmrwS
TB5Kq6DJq6HpHzruBQBc4xdQ
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{1, 3, 2}, {3, 5, 4}, {5, 7, 6}}], 
             PolygonBox[{{7, 11, 10, 9, 8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJo+BTR5
JTT9Kmj2q8Hkh5x7Ae0ME4Y=
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTR5
JZg8FKigyauhyQ8d9wIAyUYWgg==
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTT9
SjB5KFBBk1dDkx867gUAAxUWgg==
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0Kzig
mquEJq+Cpl8Nzfyh414AHNUWgg==
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 5, 4, 3, 2}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
k1dCk1dBM18Nzf6h414A2ekUtA==
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DpV0CT
V0LTr4Imr4amf+i4FwC5YxfQ
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 7, 6, 5, 4}, {7, 11, 10, 9, 
              8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMmrwCmrwS
mrwKmrwamvzQcS8AIGMW0A==
        "], {{{}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 3, 2}, {3, 5, 4}, {5, 7, 6}, {7, 9, 8}, {9, 11, 
             10}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      AxesStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      BaseStyle->Automatic,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[0.2]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->GrayLevel[0],
      GridLines->{None, None},
      GridLinesStyle->Automatic,
      LabelStyle->{FontFamily -> "Times"},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}},
      TicksStyle->GrayLevel[0]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[8]=",
 CellID->117438600,ExpressionUUID->"1d0c6aa2-7e40-4ea3-9bd7-7c3e68e87302"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"DyckPaths", "[", 
   RowBox[{"5", ",", 
    RowBox[{"Filling", "->", "Bottom"}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Default\>\""}]}], "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`RecreationalMathematics`"],
 CellLabel->"In[9]:=",
 CellID->73613858,ExpressionUUID->"0731a0fc-a539-44de-a8da-17d0206ed090"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq4DJq8App+
JTTzVdDsV4PJDzn3AgAUSxO+
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apq8
Epq8Cpr9ajD5IedeANnME2Y=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GZg8FCig
ySuh6VdBk1dD0z903AsAuUYWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 11, 10, 9, 8}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmryCA6q5
SmjyKmj61WDyQ869AHlVFwI=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0K6DJ
K6HJq6DJq6GZP3TcCwAV8hhQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 5, 4, 3, 2}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
06+EJq+CJq+GZv/QcS8A0wYWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DpV0CT
V0KTV0GTV0OTHzruBQB84xdQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{1, 3, 2}, {9, 11, 10}, {7, 9, 8}}], 
             PolygonBox[{{3, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJq8Apq8
Epr5Kmj2q8Hkh5x7AQRbE6Y=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apr5
SmjyKmjyajD5IedeANLpFTQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GZg8FCig
ySuhyaugyauhyQ8d9wIAfMYWAg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 9, 8}, {9, 11, 10}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmrwCmrwS
mrwKmrwaTH7IuRcAcnIY0A==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0K6DJ
K6HpV0GTV0OTHzruBQDZYxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{5, 9, 8, 7, 6}, {1, 5, 4, 3, 
              2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
06+EZr4KmrwamvzQcS8AloYWAg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {9, 11, 10}}], 
             PolygonBox[{{3, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KKzig
mquEJq+Cpl8Nzfyh414AsEYWAg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTR5
JTR5FTT71WDyQ869APEME4Y=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJq8Apr5
SjB5KFBBk1dDkx867gUAlmkUtA==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR9Cmjy
Smj6VdDMV4PJDzn3AgBZuBVU
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMmrwCmrwS
TB4KVNDk1dDkh457ATXyGFA=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdDkFdDk
ldDMV0GTV0PTP3TcCwDJYxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{5, 7, 6}}], 
             PolygonBox[{{1, 5, 4, 3, 2}, {7, 11, 10, 9, 
              8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJKzig
mquEJq+Cpl8Nzf6h414ADNUWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KK6DJ
K6HJq6DJq6GZP3TcCwCpYxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {3, 5, 4}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTTz
ldDkVdDk1WDyQ869AOopFVQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTT9
SmjyKmj61WDyQ869AAy4FTQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTR5
JTR5FTTz1WDyQ869AEZ4FTQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMTB4KFNDk
ldD0q6DJq6HpHzruBQAl8hhQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 11, 10, 9, 8}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdDkFdDk
ldDkVdDk1dDkh457AYzjF1A=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{5, 7, 6}, {9, 11, 10}, {7, 9, 8}}], 
             PolygonBox[{{1, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJK6DJ
K6HJq6DJq6HZP3TcCwAF8hhQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMTB5KK6DJ
K6HpV0GTV0OTHzruBQBs4xdQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{1, 3, 2}, {3, 5, 4}, {9, 11, 10}}], 
             PolygonBox[{{5, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq4BJq8DJp+BTTz
lWDyUKCCJq+GJj903AsArakU1A==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTR5
JTR5FTR5NZj8kHMvAAXVFwI=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTT9
SmjyKmjyajD5IedeAD+VFwI=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImrwEmrwMTB4KFNDk
ldDkVdDk1dDkh457AeljF9A=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 9, 8}, {9, 11, 10}}], 
             PolygonBox[{{1, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNxQNWn
gCavhKZfBc18NTT7h457Ae0pFNQ=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DJK6DJ
K6GZr4Imr4YmP3TcCwDJYxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}, {9, 11, 10}}], 
             PolygonBox[{{3, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMmrwCmrwS
TB5Kq6DJq6HpHzruBQBc4xdQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{1, 3, 2}, {3, 5, 4}, {5, 7, 6}}], 
             PolygonBox[{{7, 11, 10, 9, 8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJq8DJo+BTR5
JTT9Kmj2q8Hkh5x7Ae0ME4Y=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
             2}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqriAA6q4CJq8BJp+GTR5BTR5
JZg8FKigyauhyQ8d9wIAyUYWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwImryEA6o+GTR5BTT9
SjB5KFBBk1dDkx867gUAAxUWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{9, 11, 10}}], 
             PolygonBox[{{1, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrgAmrwITB4KJNDkZdD0Kzig
mquEJq+Cpl8Nzfyh414AHNUWgg==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 5, 4, 3, 2}}], 
             PolygonBox[{{5, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KSzig6pNBk1dA
k1dCk1dBM18Nzf6h414A2ekUtA==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwITB5KS6DJy6DpV0CT
V0LTr4Imr4amf+i4FwC5YxfQ
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{1, 3, 2}}], 
             PolygonBox[{{3, 7, 6, 5, 4}, {7, 11, 10, 9, 
              8}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7BlQgQOqOIcDqrQAmrwImrwEmrwMmrwCmrwS
mrwKmrwamvzQcS8AIGMW0A==
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 3, 2}, {3, 5, 4}, {5, 7, 6}, {7, 9, 8}, {9, 11, 
             10}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 11.}, {0., 5.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[9]=",
 CellID->10796453,ExpressionUUID->"eb06df9a-1937-4fec-9871-547adc487d97"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "1"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "2"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "MoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Math Puzzles"]], 
           "paclet:PeterBurbery/RecreationalMathematics/guide/MathPuzzles"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "2eeb670c-ce13-40f1-992b-c730c7bb4ade"]}]}
     }]}
  }]], "MoreAboutSection",ExpressionUUID->"b7bccf7d-a701-4f6b-be58-\
88e849121a30"],

Cell[" ", "FooterCell",ExpressionUUID->"01bc818e-6aea-43f9-99fa-60ff44c6a7e8"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900., 604.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"DyckPaths",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "HasOptions" -> True, "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Open, "1" -> Open, "2" -> Open}, 
    "NotesSection" -> Closed, 
    "ExampleSubsection" -> {"0" -> Closed, "1" -> Open}}, "NewStyles" -> True,
   "CitationPopupData" -> $Failed, "ShowCitation" -> False, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2022, 10, 2, 18, 41, 29.7588070}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "PeterBurbery`RecreationalMathematics`", "keywords" -> {}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Peter Burbery/ Recreational Mathematics Symbol", "language" -> 
    "en", "paclet" -> "PeterBurbery/RecreationalMathematics", "status" -> 
    "None", "summary" -> 
    "DyckPaths[n] displays a list of Dyck paths with n elements", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> "DyckPaths", 
    "titlemodifier" -> "", "windowtitle" -> "DyckPaths", "type" -> "Symbol", 
    "uri" -> "PeterBurbery/RecreationalMathematics/ref/DyckPaths"}},
CellContext->"Global`",
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "13.1 for Microsoft Windows (64-bit) (June 16, 2022)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"630723a1-5823-4845-b672-abff651e2b4f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[8967, 235, 1420, 37, 35, "PrimaryExamplesSection",ExpressionUUID->"22d0963d-2af4-4546-bc2f-55d17ae37f8f",
   CellTags->"PrimaryExamplesSection",
   CellID->198582833]},
 "RasterizedOutput"->{
  Cell[129245, 3406, 136086, 2236, 837, "Output",ExpressionUUID->"8d910e5f-c5ce-408b-8b64-1db414332256",
   CellTags->"RasterizedOutput",
   CellID->644725124],
  Cell[266275, 5673, 220137, 3614, 1585, "Output",ExpressionUUID->"22698610-e3f8-4e92-ba03-895498a9384f",
   CellTags->"RasterizedOutput",
   CellID->602246629],
  Cell[822737, 17408, 157711, 2590, 542, "Output",ExpressionUUID->"22ac1448-dfb0-413a-ab8d-86b160bb4443",
   CellTags->"RasterizedOutput",
   CellID->804731974],
  Cell[1217657, 25507, 100807, 1657, 464, "Output",ExpressionUUID->"6e22ac5b-f882-4f93-a05e-c48fe05a7bac",
   CellTags->"RasterizedOutput",
   CellID->720974551]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 1467479, 30918},
 {"RasterizedOutput", 1467678, 30922}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[581, 21, 4548, 108, 56, "AnchorBarGrid",ExpressionUUID->"d2988a6e-330f-4508-b9fa-37762127052a",
 CellID->1],
Cell[5132, 131, 119, 0, 23, "ContextNameCell",ExpressionUUID->"75524d2a-fc3f-4dfb-ad8b-1fc23d31a6b9"],
Cell[CellGroupData[{
Cell[5276, 135, 552, 14, 56, "ObjectNameGrid",ExpressionUUID->"03c09ba7-091d-4bc6-8d7a-b7d25d24ce59"],
Cell[5831, 151, 899, 22, 111, "Usage",ExpressionUUID->"74948f94-befe-4eaf-9050-9a797d0f81c3",
 CellID->44551478]
}, Open  ]],
Cell[CellGroupData[{
Cell[6767, 178, 1918, 48, 37, "NotesSection",ExpressionUUID->"0866d117-1b01-4bd3-80fb-90e2c349b034",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->87033009],
Cell[8688, 228, 152, 1, 70, "Notes",ExpressionUUID->"703f8776-bb24-4beb-9ab5-f648ec171842",
 CellID->240859656]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[8967, 235, 1420, 37, 35, "PrimaryExamplesSection",ExpressionUUID->"22d0963d-2af4-4546-bc2f-55d17ae37f8f",
 CellTags->"PrimaryExamplesSection",
 CellID->198582833],
Cell[10390, 274, 228, 4, 26, "Input",ExpressionUUID->"58fa0fc0-bc17-4b9f-8747-20f3b57de4b8",
 CellID->607322834],
Cell[CellGroupData[{
Cell[10643, 282, 1396, 36, 30, "ExampleSection",ExpressionUUID->"f7aecfbb-7045-4f1a-9bee-72c03479671c",
 CellID->4745002],
Cell[12042, 320, 139, 1, 38, "ExampleText",ExpressionUUID->"30716ccc-338b-44bd-9300-435afdbd8429",
 CellID->28872898],
Cell[CellGroupData[{
Cell[12206, 325, 221, 4, 26, "Input",ExpressionUUID->"4d59ece9-e761-4f12-ba65-b9f980eac0de",
 CellID->102039460],
Cell[12430, 331, 6340, 174, 97, "Output",ExpressionUUID->"5e7dcc46-b2b8-4531-9e90-860c8ecf0514",
 CellID->30356093]
}, Open  ]],
Cell[18785, 508, 132, 1, 38, "ExampleText",ExpressionUUID->"b8d112e9-438d-4e5d-bbe6-08b6adf4c8aa",
 CellID->459702512],
Cell[CellGroupData[{
Cell[18942, 513, 259, 5, 26, "Input",ExpressionUUID->"de44cdc2-1127-4ecf-84d7-e986bd4bf5f8",
 CellID->539345490],
Cell[19204, 520, 18849, 488, 337, "Output",ExpressionUUID->"76ccb32d-845f-46cd-a439-b203bafef195",
 CellID->10026757]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[38202, 1016, 1412, 37, 70, "ExampleSection",ExpressionUUID->"cd42ab77-a0d1-4cce-acd3-b02cf338bf12",
 CellID->172499486],
Cell[39617, 1055, 146, 1, 70, "ExampleText",ExpressionUUID->"e6e3756a-b9e7-4e3b-8881-428775369458",
 CellID->224188459],
Cell[CellGroupData[{
Cell[39788, 1060, 221, 4, 70, "Input",ExpressionUUID->"97617e50-beeb-4705-a88b-4d6cf396e871",
 CellID->976563727],
Cell[40012, 1066, 1294, 36, 97, "Output",ExpressionUUID->"8c3144ef-c4a4-4cd4-88bf-eeb535a344f6",
 CellID->530110690]
}, Open  ]],
Cell[41321, 1105, 108, 1, 70, "ExampleText",ExpressionUUID->"1e1a49ad-1e96-4b79-a140-1f0f6c98b929",
 CellID->99231985],
Cell[CellGroupData[{
Cell[41454, 1110, 258, 5, 70, "Input",ExpressionUUID->"7d3fd8b1-4f71-4031-b100-77dd6de52324",
 CellID->12620033],
Cell[41715, 1117, 2892, 77, 98, "Output",ExpressionUUID->"5b57956f-e614-4b83-9275-b6567b6f5618",
 CellID->262513738]
}, Open  ]],
Cell[44622, 1197, 109, 1, 70, "ExampleText",ExpressionUUID->"4720fc74-b687-4d97-9874-2db4a4c4a3a9",
 CellID->418072352],
Cell[CellGroupData[{
Cell[44756, 1202, 259, 5, 70, "Input",ExpressionUUID->"11feb13b-7064-40b2-9281-17552ee025bf",
 CellID->561941981],
Cell[45018, 1209, 6845, 180, 177, "Output",ExpressionUUID->"60637fee-03d3-48e8-b775-94b185c8f3ff",
 CellID->188253734]
}, Open  ]],
Cell[51878, 1392, 109, 1, 70, "ExampleText",ExpressionUUID->"97575602-fa49-4e9b-946a-ec129b4b1434",
 CellID->307884458],
Cell[CellGroupData[{
Cell[52012, 1397, 258, 5, 70, "Input",ExpressionUUID->"f21cbc8d-3541-4327-8fd2-7a79b459503f",
 CellID->87683367],
Cell[52273, 1404, 18850, 488, 337, "Output",ExpressionUUID->"e6a8b055-8d6f-4963-b32d-8834db9a7ea9",
 CellID->490666919]
}, Open  ]],
Cell[71138, 1895, 109, 1, 70, "ExampleText",ExpressionUUID->"750adc8c-8fba-4287-a76f-48d539117490",
 CellID->706972186],
Cell[CellGroupData[{
Cell[71272, 1900, 259, 5, 70, "Input",ExpressionUUID->"158b328b-c48f-4af7-8195-6b7c4a055a67",
 CellID->310025852],
Cell[71534, 1907, 57270, 1484, 497, "Output",ExpressionUUID->"9173f9cc-4af2-4348-b012-ae0a6c4ee2c5",
 CellID->110821903]
}, Open  ]],
Cell[128819, 3394, 139, 1, 70, "ExampleText",ExpressionUUID->"bfdc5456-a6c2-4fdf-bf4f-f91b572833a2",
 CellID->176090809],
Cell[CellGroupData[{
Cell[128983, 3399, 259, 5, 70, "Input",ExpressionUUID->"18982b74-5554-48ab-bfeb-590ace257466",
 CellID->284942078],
Cell[129245, 3406, 136086, 2236, 837, "Output",ExpressionUUID->"8d910e5f-c5ce-408b-8b64-1db414332256",
 CellTags->"RasterizedOutput",
 CellID->644725124]
}, Open  ]],
Cell[265346, 5645, 140, 1, 70, "ExampleText",ExpressionUUID->"6bec463c-f39b-4c92-b0d3-b643ef5f4836",
 CellID->99521618],
Cell[CellGroupData[{
Cell[265511, 5650, 225, 4, 70, "Input",ExpressionUUID->"a38c5448-882a-45e4-b4ee-cecdf1856ed5",
 CellID->386216129],
Cell[265739, 5656, 128, 2, 35, "Output",ExpressionUUID->"75a06abc-6212-4fe3-a54e-245aa250d661",
 CellID->243636594]
}, Open  ]],
Cell[265882, 5661, 108, 1, 70, "ExampleText",ExpressionUUID->"4810567a-becb-418f-8e66-28f9036380c3",
 CellID->93217530],
Cell[CellGroupData[{
Cell[266015, 5666, 257, 5, 70, "Input",ExpressionUUID->"0ad40cc5-e5d4-4557-b526-52e4c49ea888",
 CellID->9973158],
Cell[266275, 5673, 220137, 3614, 1585, "Output",ExpressionUUID->"22698610-e3f8-4e92-ba03-895498a9384f",
 CellTags->"RasterizedOutput",
 CellID->602246629]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, Closed]]]],
Cell[CellGroupData[{
Cell[486561, 9295, 1414, 37, 70, "ExampleSection",ExpressionUUID->"3878c21c-e3d1-46f6-afdf-cd5263497b52",
 CellID->295032665],
Cell[CellGroupData[{
Cell[488000, 9336, 1422, 37, 70, "ExampleSubsection",ExpressionUUID->"e0e82a0e-e7d1-45a3-abb0-97af799ba211",
 CellID->67077492],
Cell[489425, 9375, 128, 1, 70, "ExampleText",ExpressionUUID->"4cb2763e-5527-49d6-b8a6-75cd559a3a80",
 CellID->233797490],
Cell[CellGroupData[{
Cell[489578, 9380, 320, 7, 70, "Input",ExpressionUUID->"3e4e1a34-d521-445a-b0c3-eb4905094507",
 CellID->231994369],
Cell[489901, 9389, 68381, 1675, 497, "Output",ExpressionUUID->"5d62d226-6d60-4112-9703-f4c3f8e835fb",
 CellID->56033017]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[558434, 11072, 1424, 37, 70, "ExampleSubsection",ExpressionUUID->"feed6293-0b39-47bd-8c2b-fdf970005d40",
 CellID->34300115],
Cell[559861, 11111, 128, 1, 70, "ExampleText",ExpressionUUID->"a39b8857-4208-46d5-b479-2c8e7ffbb0ee",
 CellID->138005736],
Cell[CellGroupData[{
Cell[560014, 11116, 373, 8, 70, "Input",ExpressionUUID->"c32a9a88-1755-48aa-9d6a-77ab3ed7eb25",
 CellID->53472451],
Cell[560390, 11126, 120015, 2720, 581, "Output",ExpressionUUID->"ffc3552d-d6a2-4e04-b992-b728a71b2202",
 CellID->68460822]
}, Open  ]],
Cell[CellGroupData[{
Cell[680442, 13851, 378, 8, 70, "Input",ExpressionUUID->"f7dcc7f4-4c66-47c5-aff9-27a1f53a6588",
 CellID->252185352],
Cell[680823, 13861, 68495, 1716, 497, "Output",ExpressionUUID->"2f4bec80-5756-4f05-b110-fde575bdb7c5",
 CellID->72680068]
}, Open  ]],
Cell[CellGroupData[{
Cell[749355, 15582, 379, 8, 70, "Input",ExpressionUUID->"944b9792-a3b9-43c9-a99d-bd1dba85a5a4",
 CellID->228632175],
Cell[749737, 15592, 72582, 1801, 581, "Output",ExpressionUUID->"aad0ff4a-97a6-49f2-a380-ff6713b67947",
 CellID->786550532]
}, Open  ]],
Cell[CellGroupData[{
Cell[822356, 17398, 378, 8, 70, "Input",ExpressionUUID->"1c44b2bd-a658-454a-9fef-8bdcc71cf45b",
 CellID->31804916],
Cell[822737, 17408, 157711, 2590, 542, "Output",ExpressionUUID->"22ac1448-dfb0-413a-ab8d-86b160bb4443",
 CellTags->"RasterizedOutput",
 CellID->804731974]
}, Open  ]],
Cell[CellGroupData[{
Cell[980485, 20003, 380, 8, 70, "Input",ExpressionUUID->"89797850-6658-4704-beee-5eafddc6f8c1",
 CellID->300955255],
Cell[980868, 20013, 164648, 3666, 581, "Output",ExpressionUUID->"7be57f5c-91e9-44a1-a14f-43f4eae7d890",
 CellID->147686841]
}, Open  ]],
Cell[CellGroupData[{
Cell[1145553, 23684, 382, 9, 70, "Input",ExpressionUUID->"787a797a-9dff-4863-ad30-1bee4ec12a91",
 CellID->9930502],
Cell[1145938, 23695, 71296, 1796, 581, "Output",ExpressionUUID->"067a853e-0b0b-4f41-9f9a-c6e5e75c910f",
 CellID->626224708]
}, Open  ]],
Cell[CellGroupData[{
Cell[1217271, 25496, 383, 9, 70, "Input",ExpressionUUID->"ad55ead4-9f81-476d-9af9-2a52475219c9",
 CellID->67941158],
Cell[1217657, 25507, 100807, 1657, 464, "Output",ExpressionUUID->"6e22ac5b-f882-4f93-a05e-c48fe05a7bac",
 CellTags->"RasterizedOutput",
 CellID->720974551]
}, Open  ]],
Cell[CellGroupData[{
Cell[1318501, 27169, 378, 8, 70, "Input",ExpressionUUID->"9bd5a4a4-dfe3-4fec-be66-2b8d32d82796",
 CellID->180320135],
Cell[1318882, 27179, 76614, 1969, 497, "Output",ExpressionUUID->"1d0c6aa2-7e40-4ea3-9bd7-7c3e68e87302",
 CellID->117438600]
}, Open  ]],
Cell[CellGroupData[{
Cell[1395533, 29153, 377, 8, 70, "Input",ExpressionUUID->"0731a0fc-a539-44de-a8da-17d0206ed090",
 CellID->73613858],
Cell[1395913, 29163, 68381, 1675, 497, "Output",ExpressionUUID->"eb06df9a-1937-4fec-9871-547adc487d97",
 CellID->10796453]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "1"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "2"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[1464651, 30850, 747, 19, 70, "MoreAboutSection",ExpressionUUID->"b7bccf7d-a701-4f6b-be58-88e849121a30"],
Cell[1465401, 30871, 78, 0, 70, "FooterCell",ExpressionUUID->"01bc818e-6aea-43f9-99fa-60ff44c6a7e8"]
}
]
*)

(* End of internal cache information *)

